<HTML xmlns="http://www.w3.org/TR/REC-html40"><HEAD>
<TITLE>PopupMenuFunctions</TITLE>
<LINK rel="stylesheet" href="rrafs.css" type="text/css"/>
</HEAD><BODY><DIV NAME="top" ID="top">
		  <H3>PopupMenuFunctions</H3>
		  <SMALL>Last Updated:<script language="JavaScript">document.write(document.lastModified)</script></SMALL>
<BR/>
<BR/>
<DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
              Actions for ACTIVE Popup Menus
           </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
              Actions for ACTIVE Popup Menus.<br>
              The popup menu must usually already be up and active for each of these Actions.
              <p>
              It is important to recognize certain issues with Popup menus, especially as 
              we need to differentiate between Java popups and Win32 popups.</p>
<p>
              Win32 popup menus are generally found as the topmost active popup window.  
              Because of this, we generally can just look for the topmost active popup 
              window and we don't need any type of recognition information to locate it.</p>
<p>
              Java popup menus are generally NOT implemented as normal Win32 popup menus 
              and we generally DO need to have window and component recognition information 
              for Java popup menus.</p>
<p>
              For RC and Win32 popups: Unless otherwise indicated, the Window and Component 
              references are not used and can be anything.  They just cannot be blank.</p>
<p>
              For Java popups: Unless otherwise indicated, valid recognition information for 
              the Java window and "child" popup menu must be provided.</p>
<p>
              Also refer to <i>JavaMenuFunctions</i> for support specific to Java menus and 
              popup menus.</p></detailed_desc><BR/>
		</DIV>
</DIV>
<BR/>
		<DIV NAME="list" ID="list">
		  <A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<TABLE cellspacing="3" border="1" cellpadding="2">
<TR>
<TD nowrap="true" width="27%"><A NAME='list_SelectPopupMenuID' HREF='#detail_SelectPopupMenuID' >SelectPopupMenuID</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD> 
                Select a menuItem via its menuID in the currently active popup menu.
              </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_SelectPopupMenuItem' HREF='#detail_SelectPopupMenuItem' >SelectPopupMenuItem</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SmartBear Test Complete'>TC</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD> 
                Select a menuItem via its text in the currently active popup menu.
              </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_SelectUnverifiedPopupMenuItem' HREF='#detail_SelectUnverifiedPopupMenuItem' >SelectUnverifiedPopupMenuItem</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SmartBear Test Complete'>TC</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD> 
                Select a menuItem via its text in the currently active popup menu without verification.
              </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_VerifyPopupMenu' HREF='#detail_VerifyPopupMenu' >VerifyPopupMenu</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='FSupport' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD> 
                Verify the complete status of the current popup menu with a benchmark file.
              </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_VerifyPopupMenuID' HREF='#detail_VerifyPopupMenuID' >VerifyPopupMenuID</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='FSupport' TITLE='Rational Robot Classic'>RC</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD> 
                Verify the state of a menuItem via its menuID in the currently active popup menu.
              </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_VerifyPopupMenuItem' HREF='#detail_VerifyPopupMenuItem' >VerifyPopupMenuItem</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='FSupport' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD> 
                Verify the state of a menuItem found via its text in the currently active popup menu.
              </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_VerifyPopupMenuPartialMatch' HREF='#detail_VerifyPopupMenuPartialMatch' >VerifyPopupMenuPartialMatch</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='FSupport' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD> 
                Verify if a menuItem contains a substring
              </TD>
</TR>
</TABLE>
<HR/>
</DIV>
		<DIV NAME="detail" ID="detail">
		  <H3><A NAME='detail_SelectPopupMenuID'></A>PopupMenuFunctions::<BIG>SelectPopupMenuID</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Select a menuItem via its menuID in the currently active popup menu.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                Attempts to select a particular menuID in the currently 
                active popup menu.  This is generally used when the menuitem is a bitmap 
                or other item that does not have text.  This value can be retrieved from 
                the the menu by index or by manual lookup from a menu structure output 
                from MenuUtilities.
                <p>
                The routine first verifies that the specified menuitem exists
                and exits with error if it does not.
                If it does exist then the selection proceeds.</p>
<p>
                For RC and Win32 popups: The Window and Component references are not 
                used and can be anything.  They just cannot be blank.</p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>MenuItemID</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                The Windows menuID of the menuItem to select.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, Anything, AtAll, SelectPopupMenuID, 1001</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Select the menuItem with menuID 1001 from the currently active popup menu.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                Select the menuItem with menuID 1001 from the currently active popup menu.
                <p>
                For RC and Win32 popups: The Window and Component references are not 
                used and can be anything.  They just cannot be blank.</p></detailed_desc><BR/>
		</DIV>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_SelectPopupMenuItem'></A>PopupMenuFunctions::<BIG>SelectPopupMenuItem</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SmartBear Test Complete'>TC</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Select a menuItem via its text in the currently active popup menu.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                Attempts to select a particular text string menuitem in the currently 
                active popup menu.  The menuitem should be specified in the form 
                "Menu-&gt;Menu-&gt;MenuItem   CTRL+V" with the full text, spaces(if any), and 
                keyboard shortcut text (if any).  
                <p>
                Ampersands preceding underlined characters are optional.
                The routine first verifies that the specified menuitem exists
                and exits with error if it does not.
                If it does exist then the selection proceeds using the MenuID retrieved
                from the found menuitem.</p>
<p>
                For RC and Win32 popups: The Window and Component references are not 
                used and can be anything.  They just cannot be blank.</p>
<p>
                For Java popups: Valid recognition information for the Java window and 
                "child" popup menu must be provided.</p>
<p>
                Also refer to <i>JavaMenuFunctions</i> for support specific to Java menus and 
                popup menus.</p>
<p><b>TC Note:</b>Component can be the object who contains 'popup menu', or it
                can be the 'context menu' object.</p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>MenuItemText</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Menu-&gt;MenuItem hierarchy to the menuItem to select.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                Menu-&gt;MenuItem hierarchy string to identify which menuitem to select.<br>
                NOTE:SQA can only handle submenus up to 5 levels deep.<br>
				NOTE:For RJ implementation, this field is optional if the "child" is a "MenuItem"
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, Anything, AtAll, SelectPopupMenuItem, "File-&gt;Save   Ctrl+S"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Select the File/Save menuItem from the currently active popup menu.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                Select the File/Save menuItem from the currently active popup menu.<br>
                The full text must include any spaces and visible shortcut key combos that 
                are displayed in the text of the menuItem.
              </detailed_desc><BR/>
		</DIV>
</LI>
<BR/><LI>
<B><usage xmlns="">T, Anything, AtAll, SelectPopupMenuItem, "&amp;File-&gt;&amp;Save   Ctrl+S"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Select the File/Save menuItem from the currently active popup menu.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                Select the File/Save menuItem from the currently active popup menu.<br>
                The full text must include any spaces and visible shortcut key combos that 
                are displayed in the text of the menuItem.<br>
                Ampersands (&amp;) indicating/preceding underlined characters are optional.
              </detailed_desc><BR/>
		</DIV>
</LI>
<BR/><LI>
<B><usage xmlns="">T, ParentWindow, popupMenu, SelectPopupMenuItem, "File-&gt;Save"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""><b>RJ Usage:</b> If File/Save menuItem exists in the currently active popup menu, then select it.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""></detailed_desc><BR/>
		</DIV>
</LI>
<BR/><LI>
<B><usage xmlns="">T, ParentWindow, popupFileMenu, SelectPopupMenuItem, "Save"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""><b>RJ Usage:</b> If File/Save menuItem exists in the currently active popup menu, then select it.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""></detailed_desc><BR/>
		</DIV>
</LI>
<BR/><LI>
<B><usage xmlns="">T, ParentWindow, popupSaveMenu, SelectPopupMenuItem</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""><b>RJ Usage:</b> If File/Save menuItem exists in the currently active popup menu, then select it.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""></detailed_desc><BR/>
		</DIV>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_SelectUnverifiedPopupMenuItem'></A>PopupMenuFunctions::<BIG>SelectUnverifiedPopupMenuItem</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SmartBear Test Complete'>TC</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Select a menuItem via its text in the currently active popup menu without verification.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                Attempts to select a particular text string menuitem in the currently 
                active popup menu. This routine performs no verification prior to or
                following the selection.  This may cause a Rational error if the Popup
                Menu or selected menu item is not available. 
                <p>The menuitem should be specified in the form 
                "Menu-&gt;Menu-&gt;MenuItem   CTRL+V" with the full text, spaces(if any), and 
                keyboard shortcut text (if any).</p>
<p>
                Ampersands preceding underlined characters are optional.
                </p>
<p>
                For RC and Win32 popups: The Window and Component references are not 
                used and can be anything.  They just cannot be blank.</p>
<p><b>TC Note:</b>Component can be the object who contains 'popup menu', or it
                can be the 'context menu' object.</p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>MenuItemText</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Menu-&gt;MenuItem hierarchy to the menuItem to select.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                Menu-&gt;MenuItem hierarchy string to identify which menuitem to select.<br>
                NOTE:SQA can only handle submenus up to 5 levels deep.
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, Anything, AtAll, SelectUnverifiedPopupMenuItem, "File-&gt;Save   Ctrl+S"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Select the File/Save menuItem from the currently active popup menu.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                Select the File/Save menuItem from the currently active popup menu.<br>
                The full text must include any spaces and visible shortcut key combos that 
                are displayed in the text of the menuItem.
                <p>
                For RC and Win32 popups: The Window and Component references are not 
                used and can be anything.  They just cannot be blank.</p></detailed_desc><BR/>
		</DIV>
</LI>
<BR/><LI>
<B><usage xmlns="">T, Anything, AtAll, SelectUnverifiedPopupMenuItem, "&amp;File-&gt;&amp;Save   Ctrl+S"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Select the File/Save menuItem from the currently active popup menu.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                Select the File/Save menuItem from the currently active popup menu.<br>
                The full text must include any spaces and visible shortcut key combos that 
                are displayed in the text of the menuItem.<br>
                Ampersands (&amp;) indicating/preceding underlined characters are optional.
                <p>
                For RC and Win32 popups: The Window and Component references are not 
                used and can be anything.  They just cannot be blank.</p></detailed_desc><BR/>
		</DIV>
</LI>
<BR/><LI>
<B><usage xmlns="">T, ParentWindow, popupMenu, SelectUnverifiedPopupMenuItem, "File-&gt;Save"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""><b>RJ Usage:</b> Select the File/Save menuItem from the currently active popup menu.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""></detailed_desc><BR/>
		</DIV>
</LI>
<BR/><LI>
<B><usage xmlns="">T, ParentWindow, popupFileMenu, SelectUnverifiedPopupMenuItem, "Save"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""><b>RJ Usage:</b> Select the File/Save menuItem from the currently active popup menu.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""></detailed_desc><BR/>
		</DIV>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_VerifyPopupMenu'></A>PopupMenuFunctions::<BIG>VerifyPopupMenu</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='FSupport' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Verify the complete status of the current popup menu with a benchmark file.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                Verify the complete status of the current popup menu with a benchmark file.<br>
                Typically, benchmarks are stored in the Datapool\Bench directory.  
                In that event, only the filename.ext is needed.  There is currently 
                a limit of 32K allowed for this type of comparison.  <br>
                The Window and Component objects are not validated and have no role.
                The Window and Component strings can be any text, but they cannot be blank.
                <p>
                Due to the nature of the verification using a DOS file comparison, the popup 
                menu will no longer be present after the verification and must be reactivated 
                if additional popup menu activity is to occur.</p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>BenchmarkFile</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
             The name.ext of the file used as the comparison benchmark.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                The name.ext of the file used as the comparison benchmark.<br>
                Typically, benchmarks are stored in the Datapool\Bench directory.  
                In that event, only the filename.ext is needed.  Otherwise, the 
                full file path is needed.
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/><LI>[ <B>HeaderText</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Optional descriptive header line of text to match with the benchmark.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                Optional header line of text to match with the benchmark.<br>
                If the benchmark file was created with or contains an initial line 
                of descriptive text then that line must be provided here for 
                the comparison to be successful.
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/><LI>[ <B>ActualFile</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                The optional name.ext of the file used for the captured menu status.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                The optional name.ext of the file used for the captured menu status.<br>
                Typically, actuals are stored in the Datapool\Test directory with the same 
                name as the benchmark file.  Thus, you would normally leave this blank.
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/><LI>[ <B>DiffFile</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                The optional name.ext of the file used to contain the differences found.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                The optional name.ext of the file used to contain the differences found.<br>
                Typically, diffs are stored in the Datapool\Dif directory with the same 
                name as the benchmark file.  Thus, you would normally leave this blank.
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, Anything, AtAll, VerifyPopupMenu, BenchFile.ext </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Verify the popup menu against the BenchFile.ext benchark.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                Verify the popup menu against the BenchFile.ext benchark.<br>
                The Window and Component references are not used and can be anything.
                They just cannot be blank.
              </detailed_desc><BR/>
		</DIV>
</LI>
<BR/><LI>
<B><usage xmlns="">T, Anything, AtAll, VerifyPopupMenu, BenchFile.ext, "Normal App State Menu" </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Verify the popup menu against the BenchFile.ext benchark with a header line of text.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                Verify the popup menu against the BenchFile.ext benchark with a header line of text.<br>
                This header line exists in the benchmark and thus must be included in the call.
                <p>
                The Window and Component references are not used and can be anything.
                They just cannot be blank.</p></detailed_desc><BR/>
		</DIV>
</LI>
<BR/><LI>
<B><usage xmlns="">T, Anything, AtAll, VerifyPopupMenu, BenchFile.ext, "", TestFile.ext, DiffFile.ext </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Verify the popup menu against the BenchFile.ext using alternate output filenames.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                Verify the popup menu against the BenchFile.ext using alternate output filenames.<br><p>
                The Window and Component references are not used and can be anything.
                They just cannot be blank.</p></detailed_desc><BR/>
		</DIV>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_VerifyPopupMenuID'></A>PopupMenuFunctions::<BIG>VerifyPopupMenuID</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='FSupport' TITLE='Rational Robot Classic'>RC</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Verify the state of a menuItem via its menuID in the currently active popup menu.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                Verify the state of a particular menuID in the currently 
                active popup menu.  This is generally used when the menuitem is a bitmap 
                or other item that does not have text.  This menuID can be retrieved from 
                the the menu by index or by manual lookup from a menu structure output 
                from MenuUtilities.
                <p>
                The routine first verifies that the specified menuitem exists
                and exits with error if it does not.</p>
<p>
                For RC and Win32 popups: The Window and Component references are not 
                used and can be anything.  They just cannot be blank.</p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>MenuItemID</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                The Windows menuID of the menuItem to verify.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>StateInfo</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Expected status string (or part thereof) to verify.  
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                Expected status string (or part thereof) to verify.  
                Ex:  "Enabled Checked"  OR  "Disabled Grayed"    etc.
                Each item separated by a space will be evaluated separately so 
                the order of the status items does not matter.  
                These status items (listed below) currently ARE case-sensitive. 
                <p>
                "Enabled"     "Grayed"      "BarBreak"                "Bitmap"
                "Disabled"    "Ungrayed"    "Separator"               "Break"
                "Checked"     "Hilited"     "Default"                 "Menu With N MenuItems"
                "Unchecked"   "Unhilited"   "Normal" (not default)
                </p></detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, Anything, AtAll, VerifyPopupMenuID, 1001, "Enabled Menu With 7 MenuItems"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Verify the popup menuItem with menuID 1001 is a "Menu With 7 MenuItems" and is "Enabled" .
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                Verify the popup menuItem with menuID 1001 is a "Menu With 7 MenuItems" and is "Enabled" .<br>
                The Window and Component references are not used and can be anything.
                They just cannot be blank.
              </detailed_desc><BR/>
		</DIV>
</LI>
<BR/><LI>
<B><usage xmlns="">T, Anything, AtAll, VerifyPopupMenuID, 10400, "Disabled Unchecked"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Verify the popup menuItem with menuID 10400 is "Disabled" and "Unchecked".
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                Verify the popup menuItem with menuID 10400 is "Disabled" and "Unchecked".
                <p>
                The Window and Component references are not used and can be anything.
                They just cannot be blank.</p></detailed_desc><BR/>
		</DIV>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_VerifyPopupMenuItem'></A>PopupMenuFunctions::<BIG>VerifyPopupMenuItem</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='FSupport' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Verify the state of a menuItem found via its text in the currently active popup menu.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                The menuitem should be specified in the form 
                "Menu-&gt;Menu-&gt;MenuItem   CTRL+V" with the full text, spaces(if any), and 
                keyboard shortcut text (if any).  
                <p>
                Ampersands preceding underlined characters are optional.
                The routine first verifies that the specified menuitem exists
                and exits with error if it does not.</p>
<p>
                For RC and Win32 popups: The Window and Component references are not 
                used and can be anything.  They just cannot be blank.</p>
<p>
                For Java popups: Valid recognition information for the Java window and 
                "child" popup menu must be provided.</p>
<p>
                Also refer to <i>JavaMenuFunctions</i> for support specific to Java menus and 
                popup menus.</p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>MenuItemText</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Menu-&gt;MenuItem hierarchy to the menuItem to verify.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                Menu-&gt;MenuItem hierarchy string to identify which menuitem to verify.<br>
                NOTE:SQA can only handle submenus up to 5 levels deep.
                <p>
                For RC and Win32 popups: The Window and Component references are not 
                used and can be anything.  They just cannot be blank.</p>
<p>
                For Java popups: Valid recognition information for the Java window and 
                "child" popup menu must be provided.</p>
<p>
                Also refer to <i>JavaMenuFunctions</i> for support specific to Java menus and 
                popup menus.</p></detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/><LI>
<B>StateInfo</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Expected status string (or part thereof) to verify.  
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""><p>Note: this parameter is partial supported for RJ.</p>
<p>
                Expected status string (or part thereof) to verify.  
                Ex:  "Enabled Checked"  OR  "Disabled Grayed"    etc.
                Each item separated by a space will be evaluated separately so 
                the order of the status items does not matter.  
                These status items (listed below) currently ARE case-sensitive.</p>
<p>
                "Enabled"     "Grayed"      "BarBreak"                "Bitmap"
                "Disabled"    "Ungrayed"    "Separator"               "Break"
                "Checked"     "Hilited"     "Default"                 "Menu With N MenuItems"
                "Unchecked"   "Unhilited"   "Normal" (not default)
                </p>
<p>
                "Enabled"     "Grayed"      "Bitmap"
                "Disabled"    "Ungrayed"    "Separator"
                "Checked"     "Unchecked"   "Menu With N MenuItems" are supported by RJ.
                </p></detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, Anything, AtAll, VerifyPopupMenuItem, "File", "Enabled Menu With 7 MenuItems"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Verify the File popup menuItem is a "Menu With 7 MenuItems" and is "Enabled" .
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""><p>Note: the STATEINFO parameter is partial supported for RJ.</p>
                Verify the File popup menuItem is a "Menu With 7 MenuItems" and is "Enabled" .<br>
                The full text must include any spaces and visible shortcut key combos that 
                are displayed in the text of the menuItem.
                <p>
                For RC and Win32 popups: The Window and Component references are not 
                used and can be anything.  They just cannot be blank.</p>
<p>
                For Java popups: Valid recognition information for the Java window and 
                "child" popup menu must be provided.</p>
<p>
                Also refer to <i>JavaMenuFunctions</i> for support specific to Java menus and 
                popup menus.</p></detailed_desc><BR/>
		</DIV>
</LI>
<BR/><LI>
<B><usage xmlns="">T, Anything, AtAll, VerifyPopupMenuItem, "&amp;View-&gt;&amp;Toolbars-&gt;P&amp;aint", "Disabled Unchecked"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Verify the Paint menuItem in View/Toolbars is "Disabled" and "Unchecked".
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                Verify the Paint menuItem in View/Toolbars is "Disabled" and "Unchecked".<br>
                The full text must include any spaces and visible shortcut key combos that 
                are displayed in the text of the menuItem.<br>
                Ampersands (&amp;) indicating/preceding underlined characters are optional.
                <p>
                The Window and Component references are not used and can be anything.
                They just cannot be blank.</p></detailed_desc><BR/>
		</DIV>
</LI>
<BR/><LI>
<B><usage xmlns="">T, parentWindow, popupMenu, VerifyPopupMenuItem, "Weird-&gt;CheckBox", "Enabled"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""><b>RJ Usage:</b> Verify the CheckBox menuItem in Weird exists and it's status is "Enabled".
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, parentWindow, popupWeirdMenu, VerifyPopupMenuItem, "CheckBox", "Enabled Unchecked"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""><b>RJ Usage:</b> Verify the CheckBox menuItem in Weird exists and it's status is "Enabled Unchecked".
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_VerifyPopupMenuPartialMatch'></A>PopupMenuFunctions::<BIG>VerifyPopupMenuPartialMatch</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='FSupport' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Verify if a menuItem contains a substring
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                Verify if a menuItem contains a substring
                <p>
                For Java popups: Valid recognition information for the Java window and 
                "child" popup menu must be provided.</p>
<p>
                Also refer to <i>JavaMenuFunctions</i> for support specific to Java menus and 
                popup menus.</p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>MenuItemText</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Menu-&gt;MenuItem hierarchy substring to the menuItem
                to search for.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                Menu-&gt;MenuItem hierarchy substring to identify
                which menuitem to search for.<br><p>
                For Java popups: Valid recognition information for the Java window and 
                "child" popup menu must be provided.</p>
<p>
                Also refer to <i>JavaMenuFunctions</i> for support specific to Java menus and 
                popup menus.</p></detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, ParentWindow, popupMenu, VerifyPopupMenuPartialMatch, "Fil-&gt;Ope"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Verify that the popup menu contains partially path "Fil-&gt;Ope".
			    For Example: If a path "Path-&gt;Open" exists, then the verification will be ok.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
</DIV>
		</BODY>
</HTML>
	