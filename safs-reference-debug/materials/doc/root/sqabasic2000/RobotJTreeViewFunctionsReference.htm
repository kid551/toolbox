<HTML xmlns="http://www.w3.org/TR/REC-html40"><HEAD>
<TITLE>RobotJ TreeViewFunctions</TITLE>
<LINK rel="stylesheet" href="rrafs.css" type="text/css"/>
</HEAD><BODY><DIV NAME="top" ID="top">
		  <H3>RobotJ TreeViewFunctions</H3>
		  <SMALL>Last Updated:<script language="JavaScript">document.write(document.lastModified)</script></SMALL>
<BR/>
<BR/>
<DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
              Actions for working with TreeView objects
           </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""><br><b>RJ Implementation:</b>
					For each command, the 5th parameter "TextValue" must be given as full path with separator "-&gt;". Example: "Parent-&gt;Child"
			</detailed_desc><BR/>
		</DIV>
</DIV>
<BR/>
		<DIV NAME="list" ID="list">
		  <A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<TABLE cellspacing="3" border="1" cellpadding="2">
<TR>
<TD nowrap="true" width="27%"><A NAME='list_ActivateUnverifiedTextNode' HREF='#detail_ActivateUnverifiedTextNode' >ActivateUnverifiedTextNode</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD> 
                 Action to (almost) blindly activate (double-click) a text node.
              </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_CaptureTreeDataToFile' HREF='#detail_CaptureTreeDataToFile' >CaptureTreeDataToFile</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD>
             Copy the current contents of a tree[branch] to a file.
             </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_ClickPartial' HREF='#detail_ClickPartial' >ClickPartial</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD> 
                 Action to click a node according to a partial match of its text value.
              </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_ClickTextNode' HREF='#detail_ClickTextNode' >ClickTextNode</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD> 
                 Action to click a node according to its text value.
              </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_ClickUnverifiedTextNode' HREF='#detail_ClickUnverifiedTextNode' >ClickUnverifiedTextNode</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD> 
                 Action to (almost) blindly click a text node.
              </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_Collapse' HREF='#detail_Collapse' >Collapse</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD> 
                 Action to collapse a node according to its text value.
              </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_CollapsePartial' HREF='#detail_CollapsePartial' >CollapsePartial</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD> 
                 Action to collapse a node according to a partial match of its text value.
              </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_CollapsePartialTextNode' HREF='#detail_CollapsePartialTextNode' >CollapsePartialTextNode</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD> 
                 Action to collapse a node according to a partial match of its text value.
              </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_CollapseTextNode' HREF='#detail_CollapseTextNode' >CollapseTextNode</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD> 
                 Action to collapse a node according to its text value. Use Collapse instead.
              </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_CollapseUnverifiedTextNode' HREF='#detail_CollapseUnverifiedTextNode' >CollapseUnverifiedTextNode</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD> 
                 Action to blindly collapse a node according to its text value.
              </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_CtrlClickUnverifiedTextNode' HREF='#detail_CtrlClickUnverifiedTextNode' >CtrlClickUnverifiedTextNode</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD> 
                 Action to blindly CTRL-click a node according to its text value.  Currently, this component function is for JavaTrees only.
              </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_DoubleClickPartial' HREF='#detail_DoubleClickPartial' >DoubleClickPartial</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD> 
                 Action to double click a node according to a partial match of its text value.
              </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_DoubleClickTextNode' HREF='#detail_DoubleClickTextNode' >DoubleClickTextNode</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD> 
                 Action to double click a node according to its text value.
              </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_DoubleClickUnverifiedTextNode' HREF='#detail_DoubleClickUnverifiedTextNode' >DoubleClickUnverifiedTextNode</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD> 
                 Action to (almost) blindly activate (double-click) a text node.
              </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_Expand' HREF='#detail_Expand' >Expand</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD> 
                 Action to expand a node according to its text value.
              </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_ExpandPartial' HREF='#detail_ExpandPartial' >ExpandPartial</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD> 
                 Action to expand a node according to a partial match of text value.
              </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_ExpandPartialTextNode' HREF='#detail_ExpandPartialTextNode' >ExpandPartialTextNode</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD> 
                 Action to expand a node according to a partial match of text value.
              </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_ExpandTextNode' HREF='#detail_ExpandTextNode' >ExpandTextNode</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD> 
                 Action to expand a node according to its text value. Use Expand instead.
              </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_ExpandUnverifiedTextNode' HREF='#detail_ExpandUnverifiedTextNode' >ExpandUnverifiedTextNode</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD> 
                 Action to blindly expand a node according to its text value.
              </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_PartialMatchTreeDataToFile' HREF='#detail_PartialMatchTreeDataToFile' >PartialMatchTreeDataToFile</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD>
             Copy the current contents of a tree[branch] to a file according to a partial match of itss text value.
             </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_RightClickPartial' HREF='#detail_RightClickPartial' >RightClickPartial</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD> 
                 Action to right click a node according to a partial match of its text value.
              </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_RightClickTextNode' HREF='#detail_RightClickTextNode' >RightClickTextNode</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD> 
                 Action to right click a node according to its text value.
              </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_RightClickUnverifiedTextNode' HREF='#detail_RightClickUnverifiedTextNode' >RightClickUnverifiedTextNode</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD> 
                 Action to (almost) blindly right-click a text node.
              </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_Select' HREF='#detail_Select' >Select</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD> 
                 Action to select a node according to its text value.
              </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_SelectAnotherPartialTextNode' HREF='#detail_SelectAnotherPartialTextNode' >SelectAnotherPartialTextNode</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD> 
                 Action to select a node according to a partial match of its text value, in addition to any nodes already selected.
                 Performs selection as if CTRL key were held down during selection.
              </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_SelectAnotherTextNode' HREF='#detail_SelectAnotherTextNode' >SelectAnotherTextNode</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD> 
                 Action to select a node according to its text value, in addition to any nodes already selected.
              </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_SelectAnotherUnverifiedTextNode' HREF='#detail_SelectAnotherUnverifiedTextNode' >SelectAnotherUnverifiedTextNode</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD> 
                 Action to blindly select a node according to its text value, in addition to any nodes already selected.
              </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_SelectPartial' HREF='#detail_SelectPartial' >SelectPartial</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD> 
                 Action to select a node according to a partial match of its text value.
              </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_SelectPartialTextNode' HREF='#detail_SelectPartialTextNode' >SelectPartialTextNode</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD> 
                 Action to select a node according to a partial match of its text value.
                 Performs selection as if CTRL key were held down during selection.
              </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_SelectTextNode' HREF='#detail_SelectTextNode' >SelectTextNode</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD> 
                 Action to select a node according to its text value. 
              </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_SelectUnverifiedTextNode' HREF='#detail_SelectUnverifiedTextNode' >SelectUnverifiedTextNode</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD> 
                 Action to (almost) blindly click a text node.
              </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_SetTreeContainsNode' HREF='#detail_SetTreeContainsNode' >SetTreeContainsNode</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD>
             		Sets a user-defined variable with the result of whether a tree contains the provided node.
             	</TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_SetTreeContainsPartialMatch' HREF='#detail_SetTreeContainsPartialMatch' >SetTreeContainsPartialMatch</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD>
             		Sets a user-defined variable with the result of whether a tree contains the provided node
             		according to a partial match of the node's text value.
             	</TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_ShiftClickUnverifiedTextNode' HREF='#detail_ShiftClickUnverifiedTextNode' >ShiftClickUnverifiedTextNode</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD> 
                 Action to blindly SHIFT-click a node according to its text value. Currently, this component function is for JavaTrees only.
              </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_VerifyNodeUnselected' HREF='#detail_VerifyNodeUnselected' >VerifyNodeUnselected</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD> 
                 Action to verify a particular text node is NOT selected.
              </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_VerifySelectedNode' HREF='#detail_VerifySelectedNode' >VerifySelectedNode</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD> 
                 Action to verify a particular text node is selected.
              </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_VerifyTreeContainsNode' HREF='#detail_VerifyTreeContainsNode' >VerifyTreeContainsNode</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD>
             		Verify that a tree contains the provided node.
             	</TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_VerifyTreeContainsPartialMatch' HREF='#detail_VerifyTreeContainsPartialMatch' >VerifyTreeContainsPartialMatch</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD>
             	Verify that a tree contains the provided node according to a partial match of the node's text value.
             	</TD>
</TR>
</TABLE>
<HR/>
</DIV>
		<DIV NAME="detail" ID="detail">
		  <H3><A NAME='detail_ActivateUnverifiedTextNode'></A>RobotJ TreeViewFunctions::<BIG>ActivateUnverifiedTextNode</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Action to (almost) blindly activate (double-click) a text node.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 No attempt is made to verify that the node exists 
                 prior to the selection.  No attempt to verify the node 
                 has been properly selected after the selection.
                 <p>
                 It should be noted that a click requires the full 
                 hierarchical path to the node to be selected.  Parent 
                 child branches are delimited with '-&gt;' as in:<br>
                    Parent-&gt;branch-&gt;leaf </p>
<p>
                 We have also made it possible to attempt to select the Nth duplicate 
                 item with the optional MatchIndex parameter for those trees which we 
                 can properly process.
                 </p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>TextValue</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Case-sensitive text of the node to be clicked
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 TextValue is the case-sensitive text of the node to be clicked
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/><LI>[ <B>MatchIndex</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Optional index of the Nth duplicate item to match.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 Allows us to match duplicate item N in a list containing duplicate 
                 entries.  For example, match the 2nd (or specified Nth) item whose text matches 
                 the provided text value.
                 <p>
                 The value of the parameter can have 2 forms:<br><ul>
<li>A numeric value.  Ex: "3"</li>
<li>Index prefixed value.  Ex: "Index=3"</li>
</ul>
</p>
<p>
                 If the field parameter data does not match one of these two forms then 
                 the data is ignored and the default(first match) is used.
                 </p></detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, WINDOW, TreeView, ActivateUnverifiedTextNode, "MyParent-&gt;MyBranch-&gt;MyNode"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Activate (double-click) the first "MyNode" node on the TreeView object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, TreeView, ActivateUnverifiedTextNode, "MyParent-&gt;MyBranch-&gt;MyNode", "3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Activate (double-click) the 3rd duplicate "MyNode" node on the TreeView object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, TreeView, ActivateUnverifiedTextNode, "MyParent-&gt;MyBranch-&gt;MyNode", "Index=3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Activate (double-click) the 3rd duplicate "MyNode" node on the TreeView object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_CaptureTreeDataToFile'></A>RobotJ TreeViewFunctions::<BIG>CaptureTreeDataToFile</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
             Copy the current contents of a tree[branch] to a file.
             </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""><p>The search of the path to the node is expected to be a case-sensitive 
             exact match of each node.  Use 'PartialMatchTreeDataToFile' if you 
             wish to specify case-insensitive substring matches for tree nodes.             
             </p>
             By default, the files will be
             stored in the active "Test" directory.  If you specify a
             relative path, the path will be relative to the project
             directory.  The directory for a full or relative path 
             must already exist.
              </detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>File</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
             The name of the file used to store the tree data.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
             The name of the file used to store the tree data.
             By default, the files will be
             stored in the active "Test" directory.  If you specify a
             relative path, the path will be relative to the project
             directory.  The directory for a full or relative path 
             must already exist.
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/><LI>[ <B>Branch</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
	                	The full name of the tree branch to capture.
	                </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
	                	The full name of the tree branch to capture.  If omitted, all 
	                	branches/nodes are captured.
		        	<br><br>The search of the path to the node is expected to be a case-sensitive 
		        	exact match of each node.  Use 'PartialMatchTreeDataToFile' if you 
		        	wish to specify case-insensitive substring matches for tree nodes.             
                        </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/><LI>[ <B>IndentMark</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
		        	The character(s) to use in the output file to indent the tree nodes from the 
		        	parent tree branches.
		        </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
		         	The character(s) to use in the output file to indent the tree nodes from the 
		        	parent tree branches.  If omitted, a tab character is used.
              		</detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/><LI>[ <B>FileEncoding</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
             Specify a character encoding to be used when saving data to a file.
			 If it is not specified, the system default file encoding will be used.
             The encoding should be a valid string supported by Java; if it is not valid,
             the system default file encoding will be used instead.
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>[ <B>FilterMode</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
             (Future) Specify a file filter to use to process the text before comparison.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>[ <B>FilterOptions</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
             (Future) Specify filter options to use with the file filter.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, Browser, aTreeView, CaptureTreeDataToFile, aFilename.ext</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
               Capture the complete nodeset of aTreeView to a file.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
               Data is stored in 
               [project]\Datapool\Test\aFilename.ext file using tab chars to indent the nodes and branches.
               Because no Branch was specified, the data for the whole tree is captured.<br>
               Note the unused reserved fields for FileFilter and FilterOptions were omitted.
              </detailed_desc><BR/>
		</DIV>
</LI>
<BR/><LI>
<B><usage xmlns="">T, Browser, aJavaTree, CaptureTreeDataToFile, myDirectory\aFilename.ext, "Parent Bank-&gt;Branch Banking and Trust", "_"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
               Capture the data contents from 'Parent Bank-&gt;Branch Banking and Trust' to a file.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
               Data is stored in 
               [project]\myDirectory\aFilename.ext file using "_" chars to indent the nodes and branches.
               Because a Branch was specified, only nodes from that branch are captured.<br>
               Note the unused reserved fields for FileFilter and FilterOptions were omitted.
              </detailed_desc><BR/>
		</DIV>
</LI>
<BR/><LI>
<B><usage xmlns="">T, Browser, aTreeView, CaptureTreeDataToFile, aFilename.ext, , , "UTF-8"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
               Capture the complete nodeset of aTreeView to a file.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
               Capture the complete nodeset of aTreeView to a file.<BR>
               Writing file with "UTF-8" encoding.
              </detailed_desc><BR/>
		</DIV>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_ClickPartial'></A>RobotJ TreeViewFunctions::<BIG>ClickPartial</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Action to click a node according to a partial match of its text value.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 Partial matching is accomplished through case-insensitive substring 
                 matching.  Each delimited node of the provided TextValue 
                 is compared against the object data using this partial match comparison.
                 <p>
                 We have also made it possible to attempt to select the Nth duplicate 
                 item with the optional MatchIndex parameter for those trees which we 
                 can properly process.  Only the final node provided in the TextValue 
                 hierarchy is evaluated for duplicity.  Intermediate nodes are always found 
                 on a "first match" basis.
                 </p></detailed_desc><BR/>
		</DIV>
<DIV ID="note_desc"><SPAN CLASS='note'>NOTE:</SPAN><BR/><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN> : <value xmlns="">Parameter text is case-sensitive substring of the tree node.</value><BR/>
</DIV>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>TextValue</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Case-Insensitive text of node to click.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 TextValue is the case-insensitive text of the node to click.
                 Parent-Child relationships are separated by "-&gt;"
                 For each level, a text comparison is performed. If the node 
                 contains the requested substring anywhere in its text, then 
                 that node is considered a match.
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/><LI>[ <B>MatchIndex</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Optional index of the Nth duplicate item to match.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 Allows us to match duplicate item N in a list containing duplicate 
                 entries.  For example, match the 2nd (or specified Nth) item whose text matches 
                 the provided text value.
                 <p>
                 The value of the parameter can have 2 forms:<br><ul>
<li>A numeric value.  Ex: "3"</li>
<li>Index prefixed value.  Ex: "Index=3"</li>
</ul>
</p>
<p>
                 If the field parameter data does not match one of these two forms then 
                 the data is ignored and the default(first match) is used.
                 </p></detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, WINDOW, ATreeView, ClickPartial, "parent"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Click the first node with the substring "parent"--ignoring text case.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, ClickPartial, "parent", "3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Click the 3rd node with the substring "parent"--ignoring text case.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, ClickPartial, "parent", "Index=3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Click the 3rd node with the substring "parent"--ignoring text case.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, ClickPartial, "parent-&gt;child"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Click the 1st child node containing substring "child" under a parent node 
                containing substring "parent".
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, ClickPartial, "parent-&gt;child", "3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Click the 3rd child node containing substring "child" under a parent node 
                containing substring "parent".
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_ClickTextNode'></A>RobotJ TreeViewFunctions::<BIG>ClickTextNode</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Action to click a node according to its text value.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 We have also made it possible to attempt to select the Nth duplicate 
                 item with the optional MatchIndex parameter for those trees which we 
                 can properly process.
              </detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>TextValue</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Case-sensitive text of node to click.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 TextValue is the case-sensitive text of the node to click.
                 Parent-Child relationships are separated by "-&gt;"
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/><LI>[ <B>MatchIndex</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Optional index of the Nth duplicate item to match.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 Allows us to match duplicate item N in a list containing duplicate 
                 entries.  For example, match the 2nd (or specified Nth) item whose text matches 
                 the provided text value.
                 <p>
                 The value of the parameter can have 2 forms:<br><ul>
<li>A numeric value.  Ex: "3"</li>
<li>Index prefixed value.  Ex: "Index=3"</li>
</ul>
</p>
<p>
                 If the field parameter data does not match one of these two forms then 
                 the data is ignored and the default(first match) is used.
                 </p></detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, WINDOW, ATreeView, ClickTextNode, "Parent"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Clicks the first "Parent" node.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, ClickTextNode, "Parent", "3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Clicks the 3rd "Parent" node.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, ClickTextNode, "Parent", "Index=3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Clicks the 3rd "Parent" node.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, ClickTextNode, "Parent-&gt;Child"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Clicks the first "Child" node found under first "Parent" node.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, ClickTextNode, "Parent-&gt;Child", "3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Clicks the 3rd "Child" node found under first "Parent" node.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_ClickUnverifiedTextNode'></A>RobotJ TreeViewFunctions::<BIG>ClickUnverifiedTextNode</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Action to (almost) blindly click a text node.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 No attempt is made to verify that the node exists 
                 prior to the selection.  No attempt to verify the node 
                 has been properly selected after the selection.
                 <p>
                 It should be noted that a click requires the full 
                 hierarchical path to the node to be selected.  Parent 
                 child branches are delimited with '-&gt;' as in:<br>
                    Parent-&gt;branch-&gt;leaf </p>
<p>
                 We have also made it possible to attempt to select the Nth duplicate 
                 item with the optional MatchIndex parameter for those trees which we 
                 can properly process.
                 </p></detailed_desc><BR/>
		</DIV>
<DIV ID="note_desc"><SPAN CLASS='note'>NOTE:</SPAN><BR/><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN> : <value xmlns="">Implementation verifies the existence of the node, does NOT verify if it is selected.</value><BR/>
</DIV>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>TextValue</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Case-sensitive text of the node to be clicked
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 TextValue is the case-sensitive text of the node to be clicked
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/><LI>[ <B>MatchIndex</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Optional index of the Nth duplicate item to match.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 Allows us to match duplicate item N in a list containing duplicate 
                 entries.  For example, match the 2nd (or specified Nth) item whose text matches 
                 the provided text value.
                 <p>
                 The value of the parameter can have 2 forms:<br><ul>
<li>A numeric value.  Ex: "3"</li>
<li>Index prefixed value.  Ex: "Index=3"</li>
</ul>
</p>
<p>
                 If the field parameter data does not match one of these two forms then 
                 the data is ignored and the default(first match) is used.
                 </p></detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, WINDOW, TreeView, ClickUnverifiedTextNode, "MyParent-&gt;MyBranch-&gt;MyNode"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Single click the first "MyNode" node on the TreeView object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, TreeView, ClickUnverifiedTextNode, "MyParent-&gt;MyBranch-&gt;MyNode", "3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Single click the 3rd duplicate "MyNode" node on the TreeView object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, TreeView, ClickUnverifiedTextNode, "MyParent-&gt;MyBranch-&gt;MyNode", "Index=3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Single click the 3rd duplicate "MyNode" node on the TreeView object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_Collapse'></A>RobotJ TreeViewFunctions::<BIG>Collapse</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Action to collapse a node according to its text value.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 We have also made it possible to attempt to select the Nth duplicate 
                 item with the optional MatchIndex parameter for those trees which we 
                 can properly process.
              </detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>TextValue</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Case-sensitive text of node to collapse
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 TextValue is the case-sensitive text of the node to collapse.
                 Parent-Child relationships are separated by "-&gt;"
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/><LI>[ <B>MatchIndex</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Optional index of the Nth duplicate item to match.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 Allows us to match duplicate item N in a list containing duplicate 
                 entries.  For example, match the 2nd (or specified Nth) item whose text matches 
                 the provided text value.
                 <p>
                 The value of the parameter can have 2 forms:<br><ul>
<li>A numeric value.  Ex: "3"</li>
<li>Index prefixed value.  Ex: "Index=3"</li>
</ul>
</p>
<p>
                 If the field parameter data does not match one of these two forms then 
                 the data is ignored and the default(first match) is used.
                 </p></detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, WINDOW, ATreeView, Collapse, "Parent"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Collapses the first "Parent" node.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, Collapse, "Parent", "3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Collapses the 3rd duplicate "Parent" node.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, Collapse, "Parent", "Index=3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Collapses the 3rd duplicate "Parent" node.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, Collapse, "Parent-&gt;Child"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                This action collapses the "Child" node found under "Parent".
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, Collapse, "Parent-&gt;Child", "3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Collapses the 3rd duplicate "Child" node found under "Parent".
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_CollapsePartial'></A>RobotJ TreeViewFunctions::<BIG>CollapsePartial</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Action to collapse a node according to a partial match of its text value.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 Partial matching is accomplished through case-insensitive substring 
                 matching.  Each delimited node of the provided TextValue 
                 is compared against the object data using this partial match comparison.
                 <p>
                 We have also made it possible to attempt to select the Nth duplicate 
                 item with the optional MatchIndex parameter for those trees which we 
                 can properly process.  Only the final node provided in the TextValue 
                 hierarchy is evaluated for duplicity.  Intermediate nodes are always found 
                 on a "first match" basis.
                 </p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>TextValue</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Case-Insensitive text of node to collapse
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 TextValue is the case-insensitive text of the node to collapse.
                 Parent-Child relationships are separated by "-&gt;"
                 For each level, a text comparison is performed. If the node 
                 contains the requested substring anywhere in its text, then 
                 that node is considered a match.
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/><LI>[ <B>MatchIndex</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Optional index of the Nth duplicate item to match.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 Allows us to match duplicate item N in a list containing duplicate 
                 entries.  For example, match the 2nd (or specified Nth) item whose text matches 
                 the provided text value.
                 <p>
                 The value of the parameter can have 2 forms:<br><ul>
<li>A numeric value.  Ex: "3"</li>
<li>Index prefixed value.  Ex: "Index=3"</li>
</ul>
</p>
<p>
                 If the field parameter data does not match one of these two forms then 
                 the data is ignored and the default(first match) is used.
                 </p></detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, WINDOW, ATreeView, CollapsePartial, "parent"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Collapse the first node with the substring "parent"--ignoring text case.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, CollapsePartial, "parent", "3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Collapse the 3rd node with the substring "parent"--ignoring text case.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, CollapsePartial, "parent", "Index=3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Collapse the 3rd node with the substring "parent"--ignoring text case.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, CollapsePartial, "parent-&gt;child"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Collapse the 1st child node containing substring "child" under a parent node 
                containing substring "parent".
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, CollapsePartial, "parent-&gt;child", "3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Collapse the 3rd child node containing substring "child" under a parent node 
                containing substring "parent".
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_CollapsePartialTextNode'></A>RobotJ TreeViewFunctions::<BIG>CollapsePartialTextNode</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Action to collapse a node according to a partial match of its text value.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>TextValue</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Case-Insensitive text of node to collapse
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 TextValue is the case-insensitive text of the node to collapse.
                 Parent-Child relationships are separated by "-&gt;"
                 For each level, a text comparison is performed. If the node 
                 contains the requested substring anywhere in its text, then 
                 that node is considered a match.
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, WINDOW, AJTree, CollapsePartialTextNode, "Parent"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                This action collapses the "Parent" node.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, AJTree, CollapsePartialTextNode, "parent-&gt;child"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                This action collapses the "Child" node found under "Parent".
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_CollapseTextNode'></A>RobotJ TreeViewFunctions::<BIG>CollapseTextNode</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Action to collapse a node according to its text value. Use Collapse instead.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 This command might not function correctly when there
                 are duplicate nodes in the tree.  However, we have made it possible to 
                 attempt to select the Nth duplicate item with the optional MatchIndex 
                 parameter for those trees which we can properly process.
				 <br><b>RJ Implementation:</b> Works the same as command <b>Collapse</b>.
              </detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>TextValue</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Case-sensitive text of node to collapse
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 TextValue is the case-sensitive text of the node to collapse
				 <br><b>RJ Implementation:</b>TextValue must be given as full path with separator "-&gt;". Example: "Parent-&gt;Child"
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/><LI>[ <B>MatchIndex</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Optional index of the Nth duplicate item to match.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 Allows us to match duplicate item N in a list containing duplicate 
                 entries.  For example, match the 2nd (or specified Nth) item whose text matches 
                 the provided text value.
                 <p>
                 The value of the parameter can have 2 forms:<br><ul>
<li>A numeric value.  Ex: "3"</li>
<li>Index prefixed value.  Ex: "Index=3"</li>
</ul>
</p>
<p>
                 If the field parameter data does not match one of these two forms then 
                 the data is ignored and the default(first match) is used.
                 </p></detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, WINDOW, TreeView, COLLAPSETEXTNODE, "MyNode"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Collapses the first "MyNode" node.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, TreeView, COLLAPSETEXTNODE, "MyNode", 3</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Collapses the 3rd duplicate "MyNode" node.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, TreeView, COLLAPSETEXTNODE, "MyNode", "Index=3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Collapses the 3rd duplicate "MyNode" node.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_CollapseUnverifiedTextNode'></A>RobotJ TreeViewFunctions::<BIG>CollapseUnverifiedTextNode</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Action to blindly collapse a node according to its text value.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 Generally, no pre- or post- node checks are done. If the tree contains 
                 hidden root nodes the user must provide these.
              </detailed_desc><BR/>
		</DIV>
<DIV ID="note_desc"><SPAN CLASS='note'>NOTE:</SPAN><BR/><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN> : <value xmlns="">Implementation verifies the existence of the node, does NOT verify if it is collapsed.</value><BR/>
</DIV>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>TextValue</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Case-sensitive full path text of node to collapse
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 TextValue is the case-sensitive text of the node to collapse.
                 Parent-Child relationships are separated by "-&gt;" 
                 If the tree contains hidden root nodes they must be provided.
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, WINDOW, AJTree, CollapseUnverifiedTextNode, "root-&gt;Parent"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                This action blindly collapses the "Parent" node.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 The hidden root node 'root' is provided as required.
              </detailed_desc><BR/>
		</DIV>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, AJTree, CollapseUnverifiedTextNode, "root-&gt;Parent-&gt;Child"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                This action collapses the "Child" node found under "Parent".
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 The hidden root node 'root' is provided as required.
              </detailed_desc><BR/>
		</DIV>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_CtrlClickUnverifiedTextNode'></A>RobotJ TreeViewFunctions::<BIG>CtrlClickUnverifiedTextNode</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Action to blindly CTRL-click a node according to its text value.  Currently, this component function is for JavaTrees only.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>TextValue</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Case-sensitive text of node to CTRL-click.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 TextValue is the case-sensitive text of the node to CTRL-click.
                 Parent-Child relationships are separated by "-&gt;"
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, WINDOW, AJTree, CtrlClickUnverifiedTextNode, "Parent"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                This action CTRL-clicks the "Parent" node.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, AJTree, CtrlClickUnverifiedTextNode, "Parent-&gt;Child"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                This action CTRL-clicks the "Child" node found under "Parent".
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_DoubleClickPartial'></A>RobotJ TreeViewFunctions::<BIG>DoubleClickPartial</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Action to double click a node according to a partial match of its text value.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 Partial matching is accomplished through case-insensitive substring 
                 matching.  Each delimited node of the provided TextValue 
                 is compared against the object data using this partial match comparison.
                 <p>
                 We have also made it possible to attempt to select the Nth duplicate 
                 item with the optional MatchIndex parameter for those trees which we 
                 can properly process.  Only the final node provided in the TextValue 
                 hierarchy is evaluated for duplicity.  Intermediate nodes are always found 
                 on a "first match" basis.
                 </p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>TextValue</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Case-Insensitive text of node to double click.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 TextValue is the case-insensitive text of the node to double click.
                 Parent-Child relationships are separated by "-&gt;"
                 For each level, a text comparison is performed. If the node 
                 contains the requested substring anywhere in its text, then 
                 that node is considered a match.
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/><LI>[ <B>MatchIndex</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Optional index of the Nth duplicate item to match.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 Allows us to match duplicate item N in a list containing duplicate 
                 entries.  For example, match the 2nd (or specified Nth) item whose text matches 
                 the provided text value.
                 <p>
                 The value of the parameter can have 2 forms:<br><ul>
<li>A numeric value.  Ex: "3"</li>
<li>Index prefixed value.  Ex: "Index=3"</li>
</ul>
</p>
<p>
                 If the field parameter data does not match one of these two forms then 
                 the data is ignored and the default(first match) is used.
                 </p></detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, WINDOW, ATreeView, DoubleClickPartial, "parent"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Double-Click the first node with the substring "parent"--ignoring text case.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, DoubleClickPartial, "parent", "3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Double-Click the 3rd node with the substring "parent"--ignoring text case.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, DoubleClickPartial, "parent", "Index=3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Double-Click the 3rd node with the substring "parent"--ignoring text case.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, DoubleClickPartial, "parent-&gt;child"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Double-Click the 1st child node containing substring "child" under a parent node 
                containing substring "parent".
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, DoubleClickPartial, "parent-&gt;child", "3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Double-Click the 3rd child node containing substring "child" under a parent node 
                containing substring "parent".
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_DoubleClickTextNode'></A>RobotJ TreeViewFunctions::<BIG>DoubleClickTextNode</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Action to double click a node according to its text value.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 We have also made it possible to attempt to select the Nth duplicate 
                 item with the optional MatchIndex parameter for those trees which we 
                 can properly process.
              </detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>TextValue</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Case-sensitive text of node to double click.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 TextValue is the case-sensitive text of the node to double click.
                 Parent-Child relationships are separated by "-&gt;"
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/><LI>[ <B>MatchIndex</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Optional index of the Nth duplicate item to match.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 Allows us to match duplicate item N in a list containing duplicate 
                 entries.  For example, match the 2nd (or specified Nth) item whose text matches 
                 the provided text value.
                 <p>
                 The value of the parameter can have 2 forms:<br><ul>
<li>A numeric value.  Ex: "3"</li>
<li>Index prefixed value.  Ex: "Index=3"</li>
</ul>
</p>
<p>
                 If the field parameter data does not match one of these two forms then 
                 the data is ignored and the default(first match) is used.
                 </p></detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, WINDOW, ATreeView, DoubleClickTextNode, "Parent"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Double-click the 1st "Parent" node.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, DoubleClickTextNode, "Parent", 3</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Double-click the 3rd duplicate "Parent" node.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, DoubleClickTextNode, "Parent", "Index=3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Double-click the 3rd duplicate "Parent" node.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, DoubleClickTextNode, "Parent-&gt;Child"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Double-click the 1st "Child" node found under "Parent".
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, DoubleClickTextNode, "Parent-&gt;Child", 3</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Double-click the 3rd duplicate "Child" node found under "Parent".
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_DoubleClickUnverifiedTextNode'></A>RobotJ TreeViewFunctions::<BIG>DoubleClickUnverifiedTextNode</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Action to (almost) blindly activate (double-click) a text node.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 No attempt is made to verify that the node exists 
                 prior to the selection.  No attempt to verify the node 
                 has been properly selected after the selection.
                 <p>
                 It should be noted that a click requires the full 
                 hierarchical path to the node to be selected.  Parent 
                 child branches are delimited with '-&gt;' as in:<br>
                    Parent-&gt;branch-&gt;leaf </p>
<p>
                 We have also made it possible to attempt to select the Nth duplicate 
                 item with the optional MatchIndex parameter for those trees which we 
                 can properly process.
                 </p></detailed_desc><BR/>
		</DIV>
<DIV ID="note_desc"><SPAN CLASS='note'>NOTE:</SPAN><BR/><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN> : <value xmlns="">Implementation verifies the existence of the node, does NOT verify if it is selected.</value><BR/>
</DIV>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>TextValue</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Case-sensitive text of the node to be clicked
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 TextValue is the case-sensitive text of the node to be clicked
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/><LI>[ <B>MatchIndex</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Optional index of the Nth duplicate item to match.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 Allows us to match duplicate item N in a list containing duplicate 
                 entries.  For example, match the 2nd (or specified Nth) item whose text matches 
                 the provided text value.
                 <p>
                 The value of the parameter can have 2 forms:<br><ul>
<li>A numeric value.  Ex: "3"</li>
<li>Index prefixed value.  Ex: "Index=3"</li>
</ul>
</p>
<p>
                 If the field parameter data does not match one of these two forms then 
                 the data is ignored and the default(first match) is used.
                 </p></detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, WINDOW, TreeView, DoubleClickUnverifiedTextNode, "MyParent-&gt;MyBranch-&gt;MyNode"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Activate (double-click) the first "MyNode" node on the TreeView object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, TreeView, DoubleClickUnverifiedTextNode, "MyParent-&gt;MyBranch-&gt;MyNode", "3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Activate (double-click) the 3rd duplicate "MyNode" node on the TreeView object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, TreeView, DoubleClickUnverifiedTextNode, "MyParent-&gt;MyBranch-&gt;MyNode", "Index=3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Activate (double-click) the 3rd duplicate "MyNode" node on the TreeView object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_Expand'></A>RobotJ TreeViewFunctions::<BIG>Expand</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Action to expand a node according to its text value.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 We have also made it possible to attempt to select the Nth duplicate 
                 item with the optional MatchIndex parameter for those trees which we 
                 can properly process.
              </detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>TextValue</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Case-sensitive text of node to expand
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 TextValue is the case-sensitive text of the node to expand.
                 Parent-Child relationships are separated by "-&gt;"
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/><LI>[ <B>MatchIndex</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Optional index of the Nth duplicate item to match.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 Allows us to match duplicate item N in a list containing duplicate 
                 entries.  For example, match the 2nd (or specified Nth) item whose text matches 
                 the provided text value.
                 <p>
                 The value of the parameter can have 2 forms:<br><ul>
<li>A numeric value.  Ex: "3"</li>
<li>Index prefixed value.  Ex: "Index=3"</li>
</ul>
</p>
<p>
                 If the field parameter data does not match one of these two forms then 
                 the data is ignored and the default(first match) is used.
                 </p></detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, WINDOW, ATreeView, Expand, "Parent"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Expands the first "Parent" node.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, Expand, "Parent", 3</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Expands the 3rd duplicate "Parent" node.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, Expand, "Parent", "Index=3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Expands the 3rd duplicate "Parent" node.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, Expand, "Parent-&gt;Child"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                This action expands the "Child" node found under "Parent".
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_ExpandPartial'></A>RobotJ TreeViewFunctions::<BIG>ExpandPartial</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Action to expand a node according to a partial match of text value.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 Partial matching is accomplished through case-insensitive substring 
                 matching.  Each delimited node of the provided TextValue 
                 is compared against the object data using this partial match comparison.
                 <p>
                 We have also made it possible to attempt to select the Nth duplicate 
                 item with the optional MatchIndex parameter for those trees which we 
                 can properly process.  Only the final node provided in the TextValue is 
                 evaluated for duplicity.  Intermediate nodes are always found on a 
                 "first match" basis.
                 </p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>TextValue</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Case-Insensitive text of node to match.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 TextValue is the case-insensitive text of the node.
                 Parent-Child relationships are separated by "-&gt;".
                 For each level, a text comparison is performed. If the node 
                 contains the requested substring anywhere in its text, then 
                 that node is considered a match.
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/><LI>[ <B>MatchIndex</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Optional index of the Nth duplicate item to match.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 Allows us to match duplicate item N in a list containing duplicate 
                 entries.  For example, match the 2nd (or specified Nth) item whose text matches 
                 the provided text value.
                 <p>
                 The value of the parameter can have 2 forms:<br><ul>
<li>A numeric value.  Ex: "3"</li>
<li>Index prefixed value.  Ex: "Index=3"</li>
</ul>
</p>
<p>
                 If the field parameter data does not match one of these two forms then 
                 the data is ignored and the default(first match) is used.
                 </p></detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, WINDOW, ATreeView, ExpandPartial, "parent"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Expands the first node with the substring "parent"--ignoring text case.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, ExpandPartial, "parent", "3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Expands the 3rd node with the substring "parent"--ignoring text case.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, ExpandPartial, "parent", "Index=3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Expands the 3rd node with the substring "parent"--ignoring text case.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, ExpandPartial, "parent-&gt;child"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Expands the 1st child node containing substring "child" under a parent node 
                containing substring "parent".
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, ExpandPartial, "parent-&gt;child", "3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Expands the 3rd child node containing substring "child" under a parent node 
                containing substring "parent".
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_ExpandPartialTextNode'></A>RobotJ TreeViewFunctions::<BIG>ExpandPartialTextNode</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Action to expand a node according to a partial match of text value.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>TextValue</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Case-Insensitive text of node to match.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 TextValue is the case-insensitive text of the node.
                 Parent-Child relationships are separated by "-&gt;".
                 For each level, a text comparison is performed. If the node 
                 contains the requested substring anywhere in its text, then 
                 that node is considered a match.
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, WINDOW, AJTree, ExpandPartialTextNode, "parent"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                This action successfully expands the "My New Parent" node.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, AJTree, ExpandPartialTextNode, "parent-&gt;child"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                This action successfully expands the "My Stepchild" node found under "My New Parent".
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_ExpandTextNode'></A>RobotJ TreeViewFunctions::<BIG>ExpandTextNode</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Action to expand a node according to its text value. Use Expand instead.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 This command might not function correctly when there
                 are duplicate nodes in the tree.  However, we have made it possible to 
                 attempt to select the Nth duplicate item with the optional MatchIndex 
                 parameter for those trees which we can properly process.
				 <br><b>RJ Implementation:</b> Works the same as command <b>Expand</b>.
              </detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>TextValue</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Case-sensitive text of node to expand
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 TextValue is the case-sensitive text of the node to expand.
				 <br><b>RJ Implementation:</b>TextValue must be given as full path with separator "-&gt;". Example: "Parent-&gt;Child"
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/><LI>[ <B>MatchIndex</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Optional index of the Nth duplicate item to match.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 Allows us to match duplicate item N in a list containing duplicate 
                 entries.  For example, match the 2nd (or specified Nth) item whose text matches 
                 the provided text value.
                 <p>
                 The value of the parameter can have 2 forms:<br><ul>
<li>A numeric value.  Ex: "3"</li>
<li>Index prefixed value.  Ex: "Index=3"</li>
</ul>
</p>
<p>
                 If the field parameter data does not match one of these two forms then 
                 the data is ignored and the default(first match) is used.
                 </p></detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, WINDOW, TreeView, EXPANDTEXTNODE, "MyNode"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Expands the first "MyNode" node.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, TreeView, EXPANDTEXTNODE, "MyNode", "3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Expands the 3rd node with duplicate text "MyNode".
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, TreeView, EXPANDTEXTNODE, "MyNode", "Index=3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Expands the 3rd node with duplicate text "MyNode".
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_ExpandUnverifiedTextNode'></A>RobotJ TreeViewFunctions::<BIG>ExpandUnverifiedTextNode</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Action to blindly expand a node according to its text value.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 Generally, no pre- or post- node checks are done. If the tree contains 
                 hidden root nodes the user must provide these.
              </detailed_desc><BR/>
		</DIV>
<DIV ID="note_desc"><SPAN CLASS='note'>NOTE:</SPAN><BR/><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN> : <value xmlns="">Implementation verifies the existence of the node, does NOT verify if it is expanded.</value><BR/>
</DIV>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>TextValue</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Case-sensitive full path text of node to expand
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 TextValue is the case-sensitive text of the node to expand.
                 Parent-Child relationships are separated by "-&gt;".  If the tree 
                 contains hidden root nodes the user must provide these.
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, WINDOW, AJTree, ExpandUnverifiedTextNode, "root-&gt;Parent"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                This action blindly expands the "root-&gt;Parent" node.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 The hidden root node 'root' is provided as required.
              </detailed_desc><BR/>
		</DIV>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, AJTree, ExpandUnverifiedTextNode, "root-&gt;Parent-&gt;Child"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                This action blindly expands the "Child" node found under "Parent".
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 The hidden root node 'root' is provided as required.
              </detailed_desc><BR/>
		</DIV>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_PartialMatchTreeDataToFile'></A>RobotJ TreeViewFunctions::<BIG>PartialMatchTreeDataToFile</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
             Copy the current contents of a tree[branch] to a file according to a partial match of itss text value.
             </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""><p>The search of the path to the node is a case-insensitive 
             substring match of each node.  Use 'CaptureTreeDataToFile' if you 
             wish to specify case-sensitive exact matches for tree nodes.             
             </p>
             By default, the files will be
             stored in the active "Test" directory.  If you specify a
             relative path, the path will be relative to the project
             directory.  The directory for a full or relative path 
             must already exist.
              </detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>File</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
             The name of the file used to store the tree data.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
             The name of the file used to store the tree data.
             By default, the files will be
             stored in the active "Test" directory.  If you specify a
             relative path, the path will be relative to the project
             directory.  The directory for a full or relative path 
             must already exist.
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/><LI>[ <B>Branch</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
	             The full name of the tree branch to capture.
	              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
	             The full name of the tree branch to capture.  If omitted, 
	             all branches/nodes are captured.
		     <br><br>The search of the path to the node is a case-insensitive 
		     substring match of each node.  Use 'CaptureTreeDataToFile' if you 
		     wish to specify case-sensitive exact matches for tree nodes.             
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/><LI>[ <B>IndentMark</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
			        	The character(s) to use in the output file to indent the tree nodes from the 
			        	parent tree branches.
			        </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
			         	The character(s) to use in the output file to indent the tree nodes from the 
			        	parent tree branches.  If omitted, a tab character is used.
	              		</detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/><LI>[ <B>FilterMode</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
             (Future) Specify a file filter to use to process the text before comparison.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>[ <B>FilterOptions</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
             (Future) Specify filter options to use with the file filter.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, Browser, aTreeView, PartialMatchTreeDataToFile, aFilename.ext</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
               Capture the complete nodeset of aTreeView to a file.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
               Data is stored in 
               [project]\Datapool\Test\aFilename.ext file using tab chars to indent the nodes and branches.
               Because no Branch was specified, the data for the whole tree 
               is captured.<br>
               Note the unused reserved fields for FileFilter and FilterOptions were omitted.
              </detailed_desc><BR/>
		</DIV>
</LI>
<BR/><LI>
<B><usage xmlns="">T, Browser, aJavaTree, PartialMatchTreeDataToFile, myDirectory\aFilename.ext, "parent-&gt;branch", "_"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
               Capture the data contents from the first child node of 'parent' containing 'branch' to a file.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
               Thus, this could be a match for "Parent Bank-&gt;Branch Banking and Trust"<br>
               Data is stored in 
               [project]\myDirectory\aFilename.ext file using "_" chars to indent the nodes and branches.  
               Because a Branch was specified, only nodes from that branch are captured.<br>
               Note the unused reserved fields for FileFilter and FilterOptions were omitted.
              </detailed_desc><BR/>
		</DIV>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_RightClickPartial'></A>RobotJ TreeViewFunctions::<BIG>RightClickPartial</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Action to right click a node according to a partial match of its text value.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 Partial matching is accomplished through case-insensitive substring 
                 matching.  Each delimited node of the provided TextValue 
                 is compared against the object data using this partial match comparison.
                 <p>
                 We have also made it possible to attempt to select the Nth duplicate 
                 item with the optional MatchIndex parameter for those trees which we 
                 can properly process.  Only the final node provided in the TextValue 
                 hierarchy is evaluated for duplicity.  Intermediate nodes are always found 
                 on a "first match" basis.
                 </p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>TextValue</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Case-Insensitive text of node to right click.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 TextValue is the case-insensitive text of the node to right click.
                 Parent-Child relationships are separated by "-&gt;"
                 For each level, a text comparison is performed. If the node 
                 contains the requested substring anywhere in its text, then 
                 that node is considered a match.
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/><LI>[ <B>MatchIndex</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Optional index of the Nth duplicate item to match.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 Allows us to match duplicate item N in a list containing duplicate 
                 entries.  For example, match the 2nd (or specified Nth) item whose text matches 
                 the provided text value.
                 <p>
                 The value of the parameter can have 2 forms:<br><ul>
<li>A numeric value.  Ex: "3"</li>
<li>Index prefixed value.  Ex: "Index=3"</li>
</ul>
</p>
<p>
                 If the field parameter data does not match one of these two forms then 
                 the data is ignored and the default(first match) is used.
                 </p></detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, WINDOW, ATreeView, RightClickPartial, "parent"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Right-Click the first node with the substring "parent"--ignoring text case.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, RightClickPartial, "parent", "3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Right-Click the 3rd node with the substring "parent"--ignoring text case.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, RightClickPartial, "parent", "Index=3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Right-Click the 3rd node with the substring "parent"--ignoring text case.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, RightClickPartial, "parent-&gt;child"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Right-Click the 1st child node containing substring "child" under a parent node 
                containing substring "parent".
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, RightClickPartial, "parent-&gt;child", "3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Right-Click the 3rd child node containing substring "child" under a parent node 
                containing substring "parent".
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_RightClickTextNode'></A>RobotJ TreeViewFunctions::<BIG>RightClickTextNode</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Action to right click a node according to its text value.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 It should be noted that a right click requires the full 
                 hierarchical path to the node to be selected.  Parent 
                 child branches are delimited with '-&gt;' as in:
                    Parent-&gt;branch-&gt;leaf
                 <p>
                 We have also made it possible to attempt to select the Nth duplicate 
                 item with the optional MatchIndex parameter for those trees which we 
                 can properly process.
                 </p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>TextValue</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Case-sensitive text of the node to be clicked
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 TextValue is the case-sensitive text of the node to be clicked
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/><LI>[ <B>MatchIndex</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Optional index of the Nth duplicate item to match.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 Allows us to match duplicate item N in a list containing duplicate 
                 entries.  For example, match the 2nd (or specified Nth) item whose text matches 
                 the provided text value.
                 <p>
                 The value of the parameter can have 2 forms:<br><ul>
<li>A numeric value.  Ex: "3"</li>
<li>Index prefixed value.  Ex: "Index=3"</li>
</ul>
</p>
<p>
                 If the field parameter data does not match one of these two forms then 
                 the data is ignored and the default(first match) is used.
                 </p></detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, WINDOW, TreeView, RightClickTextNode, "MyParent-&gt;MyBranch-&gt;MyNode"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Single right-click the first "MyNode" node on the TreeView object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, TreeView, RightClickTextNode, "MyParent-&gt;MyBranch-&gt;MyNode", "3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Single right-click the 3rd duplicate "MyNode" node on the TreeView object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, TreeView, RightClickTextNode, "MyParent-&gt;MyBranch-&gt;MyNode", "Index=3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Single right-click the 3rd duplicate "MyNode" node on the TreeView object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_RightClickUnverifiedTextNode'></A>RobotJ TreeViewFunctions::<BIG>RightClickUnverifiedTextNode</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Action to (almost) blindly right-click a text node.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 No attempt is made to verify that the node exists 
                 prior to the selection.  No attempt to verify the node 
                 has been properly selected after the selection.
                 <p>
                 It should be noted that a click requires the full 
                 hierarchical path to the node to be selected.  Parent 
                 child branches are delimited with '-&gt;' as in:<br>
                    Parent-&gt;branch-&gt;leaf </p>
<p>
                 We have also made it possible to attempt to select the Nth duplicate 
                 item with the optional MatchIndex parameter for those trees which we 
                 can properly process.
                 </p></detailed_desc><BR/>
		</DIV>
<DIV ID="note_desc"><SPAN CLASS='note'>NOTE:</SPAN><BR/><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN> : <value xmlns="">Implementation verifies the existence of the node, does NOT verify if it is selected.</value><BR/>
</DIV>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>TextValue</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Case-sensitive text of the node to be clicked
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 TextValue is the case-sensitive text of the node to be clicked
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/><LI>[ <B>MatchIndex</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Optional index of the Nth duplicate item to match.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 Allows us to match duplicate item N in a list containing duplicate 
                 entries.  For example, match the 2nd (or specified Nth) item whose text matches 
                 the provided text value.
                 <p>
                 The value of the parameter can have 2 forms:<br><ul>
<li>A numeric value.  Ex: "3"</li>
<li>Index prefixed value.  Ex: "Index=3"</li>
</ul>
</p>
<p>
                 If the field parameter data does not match one of these two forms then 
                 the data is ignored and the default(first match) is used.
                 </p></detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, WINDOW, TreeView, RightClickUnverifiedTextNode, "MyParent-&gt;MyBranch-&gt;MyNode"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Single Right-Click the first "MyNode" node on the TreeView object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, TreeView, RightClickUnverifiedTextNode, "MyParent-&gt;MyBranch-&gt;MyNode", "3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Single Right-Click the 3rd duplicate "MyNode" node on the TreeView object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, TreeView, RightClickUnverifiedTextNode, "MyParent-&gt;MyBranch-&gt;MyNode", "Index=3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Single Right-Click the 3rd duplicate "MyNode" node on the TreeView object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_Select'></A>RobotJ TreeViewFunctions::<BIG>Select</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Action to select a node according to its text value.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 We have also made it possible to attempt to select the Nth duplicate 
                 item with the optional MatchIndex parameter for those trees which we 
                 can properly process.
				 <br><b>RJ Implementation:</b> Works the same as command <b>Click</b>.
              </detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>TextValue</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Case-sensitive text of node to select.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 TextValue is the case-sensitive text of the node to select.
                 Parent-Child relationships are separated by "-&gt;"
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/><LI>[ <B>MatchIndex</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Optional index of the Nth duplicate item to match.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 Allows us to match duplicate item N in a list containing duplicate 
                 entries.  For example, match the 2nd (or specified Nth) item whose text matches 
                 the provided text value.
                 <p>
                 The value of the parameter can have 2 forms:<br><ul>
<li>A numeric value.  Ex: "3"</li>
<li>Index prefixed value.  Ex: "Index=3"</li>
</ul>
</p>
<p>
                 If the field parameter data does not match one of these two forms then 
                 the data is ignored and the default(first match) is used.
                 </p></detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, WINDOW, ATreeView, Select, "Parent"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Selects the 1st "Parent" node.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, Select, "Parent", 3</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Selects the 3rd duplicate "Parent" node.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, Select, "Parent", "Index=3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Selects the 3rd duplicate "Parent" node.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, Select, "Parent-&gt;Child"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Selects the first "Child" node found under "Parent".
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, Select, "Parent-&gt;Child", "3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Selects the 3rd duplicate "Child" node found under "Parent".
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_SelectAnotherPartialTextNode'></A>RobotJ TreeViewFunctions::<BIG>SelectAnotherPartialTextNode</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Action to select a node according to a partial match of its text value, in addition to any nodes already selected.
                 Performs selection as if CTRL key were held down during selection.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>TextValue</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Case-Insensitive text of node to select.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 TextValue is the case-insensitive text of the node to select.
                 Parent-Child relationships are separated by "-&gt;"
                 For each level, a text comparison is performed. If the node 
                 contains the requested substring anywhere in its text, then 
                 that node is considered a match.
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, WINDOW, AJTree, SelectAnotherPartialTextNode, "parent"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                This action selects the "My New Parent" node.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, AJTree, SelectAnotherPartialTextNode, "parent-&gt;child"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                This action selects the "My Stepchild" node found under "My New Parent".
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_SelectAnotherTextNode'></A>RobotJ TreeViewFunctions::<BIG>SelectAnotherTextNode</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Action to select a node according to its text value, in addition to any nodes already selected.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>TextValue</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Case-sensitive text of node to select.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 TextValue is the case-sensitive text of the node to select.
                 Parent-Child relationships are separated by "-&gt;"
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, WINDOW, AJTree, SelectAnotherTextNode, "Parent"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                This action selects the "Parent" node.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, AJTree, SelectAnotherTextNode, "Parent-&gt;Child"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                This action selects the "Child" node found under "Parent".
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_SelectAnotherUnverifiedTextNode'></A>RobotJ TreeViewFunctions::<BIG>SelectAnotherUnverifiedTextNode</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Action to blindly select a node according to its text value, in addition to any nodes already selected.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 Generally, no pre- or post- node checks are done. If the tree contains 
                 hidden root nodes the user must provide these.
              </detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>TextValue</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Case-sensitive full path text of node to select.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 TextValue is the case-sensitive text of the node to select.
                 Parent-Child relationships are separated by "-&gt;"  If the tree contains 
                 hidden root nodes they must be provided.
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, WINDOW, AJTree, SelectAnotherUnverifiedTextNode, "root-&gt;Parent"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                This action blindly selects the "Parent" node.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                The hidden root node is provided as required.
              </detailed_desc><BR/>
		</DIV>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, AJTree, SelectAnotherUnverifiedTextNode, "root-&gt;Parent-&gt;Child"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                This action blindly selects the "Child" node found under "Parent".
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                The hidden root node is provided as required.
              </detailed_desc><BR/>
		</DIV>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_SelectPartial'></A>RobotJ TreeViewFunctions::<BIG>SelectPartial</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Action to select a node according to a partial match of its text value.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 Partial matching is accomplished through case-insensitive substring 
                 matching.  Each delimited node of the provided TextValue 
                 is compared against the object data using this partial match comparison.
                 <p>
                 We have also made it possible to attempt to select the Nth duplicate 
                 item with the optional MatchIndex parameter for those trees which we 
                 can properly process.  Only the final node provided in the TextValue 
                 hierarchy is evaluated for duplicity.  Intermediate nodes are always found 
                 on a "first match" basis.
                 </p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>TextValue</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Case-Insensitive text of node to select.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 TextValue is the case-insensitive text of the node to select.
                 Parent-Child relationships are separated by "-&gt;"
                 For each level, a text comparison is performed. If the node 
                 contains the requested substring anywhere in its text, then 
                 that node is considered a match.
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/><LI>[ <B>MatchIndex</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Optional index of the Nth duplicate item to match.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 Allows us to match duplicate item N in a list containing duplicate 
                 entries.  For example, match the 2nd (or specified Nth) item whose text matches 
                 the provided text value.
                 <p>
                 The value of the parameter can have 2 forms:<br><ul>
<li>A numeric value.  Ex: "3"</li>
<li>Index prefixed value.  Ex: "Index=3"</li>
</ul>
</p>
<p>
                 If the field parameter data does not match one of these two forms then 
                 the data is ignored and the default(first match) is used.
                 </p></detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, WINDOW, ATreeView, SelectPartial, "parent"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Select the first node with the substring "parent"--ignoring text case.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, SelectPartial, "parent", "3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Select the 3rd node with the substring "parent"--ignoring text case.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, SelectPartial, "parent", "Index=3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Select the 3rd node with the substring "parent"--ignoring text case.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, SelectPartial, "parent-&gt;child"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Select the 1st child node containing substring "child" under a parent node 
                containing substring "parent".
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, ATreeView, SelectPartial, "parent-&gt;child", "3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Select the 3rd child node containing substring "child" under a parent node 
                containing substring "parent".
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_SelectPartialTextNode'></A>RobotJ TreeViewFunctions::<BIG>SelectPartialTextNode</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Action to select a node according to a partial match of its text value.
                 Performs selection as if CTRL key were held down during selection.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>TextValue</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Case-Insensitive text of node to select.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 TextValue is the case-insensitive text of the node to select.
                 Parent-Child relationships are separated by "-&gt;"
                 For each level, a text comparison is performed. If the node 
                 contains the requested substring anywhere in its text, then 
                 that node is considered a match.
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, WINDOW, AJTree, SelectPartialTextNode, "parent"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                This action selects the "My New Parent" node.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, AJTree, SelectPartialTextNode, "parent-&gt;child"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                This action selects the "My Stepchild" node found under "My New Parent".
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_SelectTextNode'></A>RobotJ TreeViewFunctions::<BIG>SelectTextNode</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Action to select a node according to its text value. 
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 This command might not function correctly when there
                 are duplicate nodes in the tree.  However, we have made it possible to 
                 attempt to select the Nth duplicate item with the optional MatchIndex 
                 parameter for those trees which we can properly process.
				 <br><b>RJ Implementation:</b> Works the same as command <b>Select</b>.
              </detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>TextValue</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Case-sensitive text of the node to be selected.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 TextValue is the case-sensitive text of the node to be selected.
  				 <br><b>RJ Implementation:</b>TextValue must be given as full path with separator "-&gt;". Example: "Parent-&gt;Child"
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/><LI>[ <B>MatchIndex</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Optional index of the Nth duplicate item to match.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 Allows us to match duplicate item N in a list containing duplicate 
                 entries.  For example, match the 2nd (or specified Nth) item whose text matches 
                 the provided text value.
                 <p>
                 The value of the parameter can have 2 forms:<br><ul>
<li>A numeric value.  Ex: "3"</li>
<li>Index prefixed value.  Ex: "Index=3"</li>
</ul>
</p>
<p>
                 If the field parameter data does not match one of these two forms then 
                 the data is ignored and the default(first match) is used.
                 </p></detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, WINDOW, TreeView, SELECTTEXTNODE, "MyNode"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Selects the first "MyNode" node on the TreeView object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, TreeView, SELECTTEXTNODE, "MyNode", 3</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Selects the 3rd duplicate "MyNode" node on the TreeView object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, TreeView, SELECTTEXTNODE, "MyNode", "Index=3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Selects the 3rd duplicate "MyNode" node on the TreeView object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_SelectUnverifiedTextNode'></A>RobotJ TreeViewFunctions::<BIG>SelectUnverifiedTextNode</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Action to (almost) blindly click a text node.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 No attempt is made to verify that the node exists 
                 prior to the selection.  No attempt to verify the node 
                 has been properly selected after the selection.
                 <p>
                 It should be noted that a click requires the full 
                 hierarchical path to the node to be selected.  Parent 
                 child branches are delimited with '-&gt;' as in:<br>
                    Parent-&gt;branch-&gt;leaf </p>
<p>
                 We have also made it possible to attempt to select the Nth duplicate 
                 item with the optional MatchIndex parameter for those trees which we 
                 can properly process.
                 </p></detailed_desc><BR/>
		</DIV>
<DIV ID="note_desc"><SPAN CLASS='note'>NOTE:</SPAN><BR/><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN> : <value xmlns="">Implementation verifies the existence of the node, does NOT verify if it is selected.</value><BR/>
</DIV>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>TextValue</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Case-sensitive text of the node to be clicked
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 TextValue is the case-sensitive text of the node to be clicked
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/><LI>[ <B>MatchIndex</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Optional index of the Nth duplicate item to match.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 Allows us to match duplicate item N in a list containing duplicate 
                 entries.  For example, match the 2nd (or specified Nth) item whose text matches 
                 the provided text value.
                 <p>
                 The value of the parameter can have 2 forms:<br><ul>
<li>A numeric value.  Ex: "3"</li>
<li>Index prefixed value.  Ex: "Index=3"</li>
</ul>
</p>
<p>
                 If the field parameter data does not match one of these two forms then 
                 the data is ignored and the default(first match) is used.
                 </p></detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, WINDOW, TreeView, SelectUnverifiedTextNode, "MyParent-&gt;MyBranch-&gt;MyNode"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Single click the first "MyNode" node on the TreeView object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, TreeView, SelectUnverifiedTextNode, "MyParent-&gt;MyBranch-&gt;MyNode", "3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Single click the 3rd duplicate "MyNode" node on the TreeView object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, TreeView, SelectUnverifiedTextNode, "MyParent-&gt;MyBranch-&gt;MyNode", "Index=3"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Single click the 3rd duplicate "MyNode" node on the TreeView object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_SetTreeContainsNode'></A>RobotJ TreeViewFunctions::<BIG>SetTreeContainsNode</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
             		Sets a user-defined variable with the result of whether a tree contains the provided node.
             	</short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""><p>The search of the path to the node is expected to be a case-sensitive 
             		exact match of each node.  Use 'SetTreeContainsPartialMatch' if you 
             		wish to specify case-insensitive substring matches for tree nodes.</p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>Node</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
             				The name of the node to verify.
              			</short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
							The search of the path to the node is expected to be a case-sensitive 
							exact match of each node.  Use 'SetTreeContainsPartialMatch' if you 
							wish to specify case-insensitive substring matches for tree nodes.
							<br><b>RJ Implementation:</b>TextValue must be given as full path with separator "-&gt;". Example: "Parent-&gt;Child"
              			</detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/><LI>
<B>ResultVar</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
	             			The name of the variable which gets assigned the result.
	              		</short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
	             			The value of 'TRUE' indicates the node was found in the tree, and 'FALSE'
	             			indicates that the node was not found in the tree.
	              		</detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, Browser, aTreeView, SetTreeContainsNode, "Parent Bank-&gt;Branch Banking and Trust", isFound</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
               			Variable isFound will be set to 'TRUE' if the node 'Parent Bank-&gt;Branch Banking and Trust' 
               			is found in aTreeView.  If not found, isFound will be set to 'FALSE'.
              			</short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_SetTreeContainsPartialMatch'></A>RobotJ TreeViewFunctions::<BIG>SetTreeContainsPartialMatch</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
             		Sets a user-defined variable with the result of whether a tree contains the provided node
             		according to a partial match of the node's text value.
             	</short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""><p>The search of the path to the node is expected to be a case-insensitive 
			substring match of each node.  Use 'SetTreeContainsNode' if you 
             		wish to specify case-sensitive substring matches for tree nodes.</p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>Node</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
             				The name of the node to verify.
              			</short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
             				The search of the path to the node is expected to be a case-insensitive 
							substring match of each node.  Use 'SetTreeContainsNode' if you 
             				wish to specify case-sensitive substring matches for tree nodes.
							<br><b>RJ Implementation:</b>TextValue must be given as full path with separator "-&gt;". Example: "Parent-&gt;Child"
              			</detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/><LI>
<B>ResultVar</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
	             			The name of the variable which gets assigned the result.
	              		</short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
	             			The value of 'TRUE' indicates the node was found in the tree, and 'FALSE'
	             			indicates that the node was not found in the tree.
	              		</detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, Browser, aTreeView, SetTreeContainsPartialMatch, "parent-&gt;branch", isFound</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
           				Variable isFound will be set to 'TRUE' if a child node of 'parent' containing 
           				'branch' is found in aTreeView.  If not found, isFound will be set to 'FALSE'.
				</short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
					Thus, this could be a match for 'Parent Bank-&gt;Branch Banking and Trust'.
              			</detailed_desc><BR/>
		</DIV>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_ShiftClickUnverifiedTextNode'></A>RobotJ TreeViewFunctions::<BIG>ShiftClickUnverifiedTextNode</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Action to blindly SHIFT-click a node according to its text value. Currently, this component function is for JavaTrees only.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>TextValue</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Case-sensitive text of node to SHIFT-click.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 TextValue is the case-sensitive text of the node to SHIFT-click.
                 Parent-Child relationships are separated by "-&gt;"
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, WINDOW, AJTree, ShiftClickUnverifiedTextNode, "Parent"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                This action SHIFT-clicks the "Parent" node.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">T, WINDOW, AJTree, ShiftClickUnverifiedTextNode, "Parent-&gt;Child"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                This action SHIFT-clicks the "Child" node found under "Parent".
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_VerifyNodeUnselected'></A>RobotJ TreeViewFunctions::<BIG>VerifyNodeUnselected</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Action to verify a particular text node is NOT selected.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>TextValue</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Case-sensitive text of node to be verified NOT selected
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 TextValue is the case-sensitive text of the node to be verified NOT selected
				 <br><b>RJ Implementation:</b>TextValue must be given as full path with separator "-&gt;". Example: "Parent-&gt;Child"				 
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, WINDOW, TreeView, VERIFYNODEUNSELECTED, "MyNode"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                This action verifies the "MyNode" node on the TreeView object is NOT selected
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_VerifySelectedNode'></A>RobotJ TreeViewFunctions::<BIG>VerifySelectedNode</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Action to verify a particular text node is selected.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>TextValue</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Case-sensitive text of node to be verified selected
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 TextValue is the case-sensitive text of the node to be verified selected
				 <br><b>RJ Implementation:</b>TextValue must be given as full path with separator "-&gt;". Example: "Parent-&gt;Child"				  
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, WINDOW, TreeView, VERIFYSELECTEDNODE, "MyNode"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                This action verifies the "MyNode" node on the TreeView object is selected
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_VerifyTreeContainsNode'></A>RobotJ TreeViewFunctions::<BIG>VerifyTreeContainsNode</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
             		Verify that a tree contains the provided node.
             	</short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""><p>The search of the path to the node is expected to be a case-sensitive 
             		exact match of each node.  Use 'VerifyTreeContainsPartialMatch' if you 
             		wish to specify case-insensitive substring matches for tree nodes.</p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>Node</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
             		The name of the node to verify.
              	</short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
             		The search of the path to the node is expected to be a case-sensitive 
	     		exact match of each node.  Use 'VerifyTreeContainsPartialMatch' if you 
	     		wish to specify case-insensitive substring matches for tree nodes.
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, Browser, aTreeView, VerifyTreeContainsNode, "Parent Bank-&gt;Branch Banking and Trust"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
               		Verify the node 'Parent Bank-&gt;Branch Banking and Trust' is found in aTreeView.
              	</short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_VerifyTreeContainsPartialMatch'></A>RobotJ TreeViewFunctions::<BIG>VerifyTreeContainsPartialMatch</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
             	Verify that a tree contains the provided node according to a partial match of the node's text value.
             	</short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""><p>The search of the path to the node is expected to be a case-insensitive 
             		substring match of each node.  Use 'VerifyTreeContainsNode' if you 
             		wish to specify case-sensitive substring matches for tree nodes.</p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="5" ><LI>
<B>Node</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
             		The name of the node to verify.
              	</short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
             		The search of the path to the node is expected to be a case-insensitive 
			substring match of each node.  Use 'VerifyTreeContainsNode' if you 
             		wish to specify case-sensitive substring matches for tree nodes.
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">T, Browser, aTreeView, VerifyTreeContainsNode, "parent-&gt;branch"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
               		Verify that a child node of 'parent' containing 'branch' is found in aTreeView.
              	</short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
			Thus, this could be a match for 'Parent Bank-&gt;Branch Banking and Trust'.
              </detailed_desc><BR/>
		</DIV>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
</DIV>
		</BODY>
</HTML>
	