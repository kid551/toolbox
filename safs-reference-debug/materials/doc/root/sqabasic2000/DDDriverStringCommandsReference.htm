<HTML xmlns="http://www.w3.org/TR/REC-html40"><HEAD>
<TITLE>DDDriverStringCommands</TITLE>
<LINK rel="stylesheet" href="rrafs.css" type="text/css"/>
</HEAD><BODY><DIV NAME="top" ID="top">
		  <H3>DDDriverStringCommands</H3>
		  <SMALL>Last Updated:<script language="JavaScript">document.write(document.lastModified)</script></SMALL>
<BR/>
<BR/>
<DIV NAME="list" ID="short_desc"><short_desc xmlns="">
        Driver Commands for String Manipulations
      </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">Driver Command record format:<br><dl>
<dd>
            Field #1
          </dd>
<dt>
            The "C" = DRIVER COMMAND record type specifier.
          </dt>
<dd>
            Field #2
          </dd>
<dt>
            The Driver Command keyword.
          </dt>
</dl>
<p>
          Example:
        </p><code>
          c , SetApplicationMap , "AppMap.map"
        </code></detailed_desc><BR/>
		</DIV>
</DIV>
<BR/>
		<DIV NAME="list" ID="list">
		  <A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<TABLE cellspacing="3" border="1" cellpadding="2">
<TR>
<TD nowrap="true" width="27%"><A NAME='list_CleanString' HREF='#detail_CleanString' >CleanString</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD>
          CleanString, for each char in string: if ((char .gt. 31) and (char .lt. 127)) keep it,
          otherwise turn it into a space
        </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_Compare' HREF='#detail_Compare' >Compare</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD>
          Compares two strings and returns an integer specifying the
          result of the comparison.
          The java version uses String.equals()  for comparison so the
          result will be either 'true' or 'false'
        </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_Concatenate' HREF='#detail_Concatenate' >Concatenate</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD>
          Concatenate String1 with String2 and returns concatenated string.
        </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_GetField' HREF='#detail_GetField' >GetField</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD>
          GetField, get a field out of a string using specified delimiter(s). Note that any leading or trailing whitespaces are still present.
        </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_GetFieldCount' HREF='#detail_GetFieldCount' >GetFieldCount</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD>
          GetFieldCount, Finds the count of all fields within the
          inputRecord found from startindex to the end of the inputRecord.  
        </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_GetFixedWidthField' HREF='#detail_GetFixedWidthField' >GetFixedWidthField</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD>
          GetFixedWidthField, Given an Input of fixed-width
          fields, return the nth(FieldID) Field  in the record.
        </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_GetMultiDelimitedField' HREF='#detail_GetMultiDelimitedField' >GetMultiDelimitedField</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD>Given a sourceString of delimited fields, return the nth(FieldID) Field
      in the record from startIndex.  The startIndex and fieldID are 1 based. </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_GetMultiDelimitedFieldCount' HREF='#detail_GetMultiDelimitedFieldCount' >GetMultiDelimitedFieldCount</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD>Finds the count of all fields within the inputRecord found from
        startindex to the end of the inputRecord.  The field and index are 1-based.</TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_GetNextDelimiterIndex' HREF='#detail_GetNextDelimiterIndex' >GetNextDelimiterIndex</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD>
          GetNextDelimiterIndex, Finds the index of the first
          character matching one of the provided delimiter characters.
          The search begins at startindex within the inputRecord. 
        </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_GetREDelimitedField' HREF='#detail_GetREDelimitedField' >GetREDelimitedField</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD>
          GetREDelimitedField, this command returns the requested field contained in the input string using the passed in regular expression as the delimiter(s).
        </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_GetREDelimitedFieldCount' HREF='#detail_GetREDelimitedFieldCount' >GetREDelimitedFieldCount</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD>
          GetREDelimitedFieldCount, this command returns the number of fields contained in the input string using the passed in regular expression as the delimiter(s).
        </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_GetSubstringsInString' HREF='#detail_GetSubstringsInString' >GetSubstringsInString</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD> 
                  Extract dynamic substring from a string using regular expressions.
               </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_GetSystemEnviron' HREF='#detail_GetSystemEnviron' >GetSystemEnviron</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD>
          GetSystemEnviron, get a system environment variable value
        </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_GetSystemUser' HREF='#detail_GetSystemUser' >GetSystemUser</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD>
          Get the USERID of the currently logged on user as stored in System Environment variables.
        </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_GetTrimmedField' HREF='#detail_GetTrimmedField' >GetTrimmedField</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD>
          GetTrimmedField, get a trimmed field out of a string using specified delimiter(s).
        </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_Index' HREF='#detail_Index' >Index</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD>
          Returns the position of the first occurrence of one string
          within another string. -1 if not found at all
        </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_Left' HREF='#detail_Left' >Left</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD>
          Returns a string of a specified number of characters copied from the beginning of another string.
        </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_LeftTrim' HREF='#detail_LeftTrim' >LeftTrim</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD>
          A new string trimmed of leading tabs and spaces.
        </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_Length' HREF='#detail_Length' >Length</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD>
          Returns the length of a string or variable.
        </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_Replace' HREF='#detail_Replace' >Replace</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD>
          Replace 'find' substring with 'replace' substring
        </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_Right' HREF='#detail_Right' >Right</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD>
          Returns a string of a specified number of characters copied from the end of another string.
        </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_RightTrim' HREF='#detail_RightTrim' >RightTrim</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD>
          A new string trimmed of trailing tabs and spaces.
        </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_SubString' HREF='#detail_SubString' >SubString</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD>
          Returns a portion of a string based on character index.
        </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_ToLowerCase' HREF='#detail_ToLowerCase' >ToLowerCase</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD>
          Returns a copy of a string, with all letters converted to lowercase.
        </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_ToUpperCase' HREF='#detail_ToUpperCase' >ToUpperCase</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD>
          Returns a copy of a string after converting all letters to uppercase.
        </TD>
</TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_Trim' HREF='#detail_Trim' >Trim</A></TD><TD width="12%" align="CENTER">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</TD>
		  <TD>
          A new string trimmed of leading and trailing tabs and spaces.
        </TD>
</TR>
</TABLE>
<HR/>
</DIV>
		<DIV NAME="detail" ID="detail">
		  <H3><A NAME='detail_CleanString'></A>DDDriverStringCommands::<BIG>CleanString</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
          CleanString, for each char in string: if ((char .gt. 31) and (char .lt. 127)) keep it,
          otherwise turn it into a space
        </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="3" ><LI>
<B>sourceString</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              sourceString (could come from a ^variable)
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>resultVar</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              the resultVar to place the result of the
              operation into
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">
            C, cleanString, "a^Abcd", var
          </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              variable 'var' should contain 'a bcd' after this is run
              (note that ^A is a Control-A, not the actual chars ^ and A)
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_Compare'></A>DDDriverStringCommands::<BIG>Compare</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
          Compares two strings and returns an integer specifying the
          result of the comparison.
          The java version uses String.equals()  for comparison so the
          result will be either 'true' or 'false'
        </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="3" ><LI>
<B>sourceString</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              sourceString (could come from a ^variable)
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>dstString</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              dstString (could come from a ^variable)
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>resultVar</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              the resultVar to place the result of the
              operation into
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">
            C, Compare, "abc", "abcd", var
          </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              variable 'var' should contain 'false'
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_Concatenate'></A>DDDriverStringCommands::<BIG>Concatenate</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
          Concatenate String1 with String2 and returns concatenated string.
        </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="3" ><LI>
<B>string1</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              string1 (could come from a ^variable)
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>string2</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              string2 (could come from a ^variable)
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>resultVar</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              the resultVar to place the result of the
              operation into
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">
            C, Concatenate, "abc", "def", var
          </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              variable 'var' should contain 'abcdef' after this is run
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_GetField'></A>DDDriverStringCommands::<BIG>GetField</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
          GetField, get a field out of a string using specified delimiter(s). Note that any leading or trailing whitespaces are still present.
        </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="3" ><LI>
<B>InputString</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              The input string which contains the field to be returned
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>index</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              0-based index of which field to return
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>delimiter</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              delimiter(s) - one or more single characters used as delimiters
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>resultVar</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              the variable name to store the returned field in
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">
            C, getTrimmedField, "a|bc|d", 1, "|", var
          </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              variable 'var' should contain 'bc' after this is run
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_GetFieldCount'></A>DDDriverStringCommands::<BIG>GetFieldCount</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
          GetFieldCount, Finds the count of all fields within the
          inputRecord found from startindex to the end of the inputRecord.  
        </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="3" ><LI>
<B>String1</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              String1 to parse and count fields
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>startindex</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              0-based startindex for parsing the string.
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>delimiters</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              delimiters -- each character is treated as a separate delimiter.
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>resultVar</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              the resultVar to place the result of the
              operation into
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">
            C, GetFieldCount, "a|bc|d", 0, "|", var
          </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              variable 'var' should contain 3 after this is run
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_GetFixedWidthField'></A>DDDriverStringCommands::<BIG>GetFixedWidthField</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
          GetFixedWidthField, Given an Input of fixed-width
          fields, return the nth(FieldID) Field  in the record.
        </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="3" ><LI>
<B>sourceString</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              sourceString (could come from a ^variable)
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>fieldID</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              0-based field to retrieve.
              from 0.
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>fixedwidth</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              the fixedwidth alotted for each field in the record
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>resultVar</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              the resultVar to place the result of the
              operation into
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">
            C, getFixedWidthField, "abcdef", 1, 2, var
          </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              variable 'var' should contain 'cd' after this is run
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_GetMultiDelimitedField'></A>DDDriverStringCommands::<BIG>GetMultiDelimitedField</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">Given a sourceString of delimited fields, return the nth(FieldID) Field
      in the record from startIndex.  The startIndex and fieldID are 1 based. </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""><a>Returns a specific field from the source string found from
        startindex to the end of the sourceString.  The field and index are 1-based.</a><a>The delimiter string can contain multiple characters and this string is treated
      as a single delimiter.</a><a>For example, if delimiter = "-&gt;" then the fields of the sourceString 
      are expected to be delimited by the full delimiter string as in:</a><a>"field1-&gt;field2-&gt;field3"</a></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="3" ><LI>
<B>sourceString</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              Source string in which to search for first delimited character</short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>FieldID</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              The one based index of the field to find and return.</short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>StartIndex</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              Integer (1-based) start position for search in sourceString</short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>Delimiters</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              String list of delimiters to find</short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>ResultVar</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""><p>Name of DDVariable that will receive the result.</p></short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">C, GetMultiDelimitedField, "a-&gt;b-&gt;c-&gt;d-&gt;e-&gt;f&gt;", 2, 5, "-&gt;", "field"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
			   Start from 5th posistion of string "a-&gt;b-&gt;c-&gt;d-&gt;e-&gt;f&gt;" to search the second tokens delimited by "-&gt;".
			   Then it will save the token to the variable "field". In this example, the token found will be "c".
           </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_GetMultiDelimitedFieldCount'></A>DDDriverStringCommands::<BIG>GetMultiDelimitedFieldCount</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">Finds the count of all fields within the inputRecord found from
        startindex to the end of the inputRecord.  The field and index are 1-based.</short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""><a>Finds the count of all fields within the inputRecord found from
        startindex to the end of the inputRecord.  The field and index are 1-based.</a><a>Blank fields count The next field starts at the next
        character index even if that char is also a delimiter.
        If the last character in the inputRecord is a delimiter, then the
        field it terminates is the last field in the inputRecord.</a><a>Field #1 index is always the same as startindex--even if the character at 
      the startindex position is a delimiter.</a><a>The delimiter string can contain multiple characters and this string is treated
      as a single delimiter.</a><a>For example, if delimiter = "-&gt;" then the fields of the inputRecord 
      are expected to be delimited by the full delimiter string as in:</a><a>"field1-&gt;field2-&gt;field3"</a></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="3" ><LI>
<B>String1</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              Source String in which to search for first delimited character</short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>StartIndex</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              Integer (1-based) start position for search in inputRecord</short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>Delimiters</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              String list of delimiters to find</short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>ResultVar</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""><p>Name of DDVariable to receive the result</p></short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">C, GetMultiDelimitedFieldCount, string1, index, delimiter,  "result"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 ^result = number of fields counted starting at index as seperated by delimiter
                 delimeter can be more than 1 character
           </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_GetNextDelimiterIndex'></A>DDDriverStringCommands::<BIG>GetNextDelimiterIndex</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
          GetNextDelimiterIndex, Finds the index of the first
          character matching one of the provided delimiter characters.
          The search begins at startindex within the inputRecord. 
        </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="3" ><LI>
<B>String1</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              String1 to parse for field delimiters
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>startindex</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              0-based startindex to begin parsing the string.
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>delimiters</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              delimiters -- each character is treated as a separate delimiter.
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>resultVar</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              the resultVar to place the result of the
              operation into
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">
            C, GetNextDelimiterIndex, "a/|/", 0, "|/", var
          </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              variable 'var' should contain 1 after this is run
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_GetREDelimitedField'></A>DDDriverStringCommands::<BIG>GetREDelimitedField</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
          GetREDelimitedField, this command returns the requested field contained in the input string using the passed in regular expression as the delimiter(s).
        </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="3" ><LI>
<B>InputString</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              The input string to analyze.
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>index</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
		    1-based index of the field to return from the input string.
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>RegExp</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              RegExp - This string contains a regular expression used as the delimiter(s). These should conform to the regular expressions defined in "java.util.regex.Pattern" documentation.
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>resultVar</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              resultVar contains the requested field from the input string.
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">
            C, GetREDelimitedField, "All is    well in      the  world", 4, "\s+", var
          </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              This is equivalent to asking for one of the non-blank fields in the string. Variable 'var' should contain "in" after this is run. 
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">
            C, GetREDelimitedField, "RedXXOrangeXXYellowXXGreenXXBlueXXIndigoXXViolet", 2, "XX", var
          </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              This uses the string "XX" as the delimiter. Variable 'var' should contain "Orange" after this is run. 
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">
            C, GetREDelimitedField, "a|b&amp;cd-efghi", 3, "[\|&amp;\-g]", var
          </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              variable 'var' should contain "cd" after this is run. Fields in the string are: "a", "b", "cd", "ef", "hi".
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_GetREDelimitedFieldCount'></A>DDDriverStringCommands::<BIG>GetREDelimitedFieldCount</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
          GetREDelimitedFieldCount, this command returns the number of fields contained in the input string using the passed in regular expression as the delimiter(s).
        </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="3" ><LI>
<B>InputString</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              The input string to analyze.
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>index</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
	        0-based index of where to start the analysis from. 
	        The index should be less than or equal to the length of the input string.
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>RegExp</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              RegExp - This string contains a regular expression used as the delimiter(s). These should conform to the regular expressions defined in "java.util.regex.Pattern" documentation.
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>resultVar</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              resultVar contains the number of fields in the input string.
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">
            C, GetREDelimitedFieldCount, "All is    well in      the  world", 4, "\s+", var
          </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              This is equivalent to asking for the count of non-blank fields in the string. Variable 'var' should contain 6 after this is run. 
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/><LI>
<B><usage xmlns="">
            C, GetREDelimitedFieldCount, "a|b&amp;cd-efghi", 0, "[\|&amp;\-g]", var
          </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              variable 'var' should contain 5 after this is run. Fields are: "a", "b", "cd", "ef", "hi".
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_GetSubstringsInString'></A>DDDriverStringCommands::<BIG>GetSubstringsInString</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                  Extract dynamic substring from a string using regular expressions.
               </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""><p>
                  This command sets a DDVariable for each substring formed between regexstart and regexstop (1 match per string, currently).  Both regexstart and regexstop must be valid, non-empty strings or no matching substring will be found.
                  </p><p>
                  The string is parsed, searching the substring between regexstart and regexstop matches.
                  </p><p>
                  When a match is found, the string between regexstart and regexstop is saved in a newly created DDVariable with the name given in varname.
                  </p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="3" ><LI>
<B>String</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                  String to search for substring.
               </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>RegexStart</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                  The starting regular expression.  Should not be empty.
               </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>RegexStop</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                  The stopping regular expression.  Should not be empty.
               </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>VarName</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                  The name of the variable to contain the substring.  
               </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">C GetSubstringsInString "XaaaB" ^regexstart="X" ^regexstop="B" ^VarName="MyVar"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                  Sets variable MyVar to value "aaa".
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_GetSystemEnviron'></A>DDDriverStringCommands::<BIG>GetSystemEnviron</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
          GetSystemEnviron, get a system environment variable value
        </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="3" ><LI>
<B>string1</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              String1
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>resultVar</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              the resultVar to place the result of the
              operation into
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">
            C, GetSystemEnviron, "OS", var
          </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              variable 'var' should contain something like 'Windows_NT' after this is run
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_GetSystemUser'></A>DDDriverStringCommands::<BIG>GetSystemUser</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
          Get the USERID of the currently logged on user as stored in System Environment variables.
        </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="3" ><LI>
<B>resultVar</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              the resultVar to place the USERID into
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">
            C, GetSystemUser, var
          </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              variable 'var' should contain the logged in userid after this is run
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_GetTrimmedField'></A>DDDriverStringCommands::<BIG>GetTrimmedField</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
          GetTrimmedField, get a trimmed field out of a string using specified delimiter(s).
        </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="3" ><LI>
<B>string1</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              string1
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>index</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              0-based index of which field to grab
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>delimiter</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              delimiter
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>resultVar</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              the resultVar to place the result of the
              operation into
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">
            C, getTrimmedField, "a|bc|d", 1, "|", var
          </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              variable 'var' should contain 'bc' after this is run
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_Index'></A>DDDriverStringCommands::<BIG>Index</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
          Returns the position of the first occurrence of one string
          within another string. -1 if not found at all
        </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="3" ><LI>
<B>start</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              0-based starting offset of the sourceString to search
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>sourceString</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              sourceString (could come from a ^variable)
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>findString</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              findString (could come from a ^variable)
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>resultVar</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              the resultVar to place the result of the
              operation into
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">
            C, Index, 0, "abc", "bc", var
          </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              variable 'var' should contain 1 after this is run
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_Left'></A>DDDriverStringCommands::<BIG>Left</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
          Returns a string of a specified number of characters copied from the beginning of another string.
        </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="3" ><LI>
<B>sourceString</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              sourceString (could come from a ^variable)
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>length</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              number of chars to copy
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>resultVar</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              the resultVar to place the result of the
              operation into
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">
            C, Left, abc, 1, ^resultString
          </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              variable 'resultString' should contain 'a' after this is run
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_LeftTrim'></A>DDDriverStringCommands::<BIG>LeftTrim</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
          A new string trimmed of leading tabs and spaces.
        </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="3" ><LI>
<B>sourceString</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              sourceString (could come from a ^variable)
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>resultVar</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              the resultVar to place the result of the
              operation into
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">
            C, LeftTrim, " abc", var
          </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              variable 'var' should contain 'abc' after this is run
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_Length'></A>DDDriverStringCommands::<BIG>Length</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
          Returns the length of a string or variable.
        </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="3" ><LI>
<B>sourceString</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              sourceString (could come from a ^variable)
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>resultVar</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              the resultVar to place the result of the length
              operation into
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">
            C, Length, "abc", lengthVar
          </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              variable lengthVar should contain 3 after this is run
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_Replace'></A>DDDriverStringCommands::<BIG>Replace</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
          Replace 'find' substring with 'replace' substring
        </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="3" ><LI>
<B>sourceString</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              sourceString (could come from a ^variable)
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>findString</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              findString (could come from a ^variable)
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>replaceString</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              replaceString (could come from a ^variable)
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>resultVar</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              the resultVar to place the result of the
              operation into
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">
            C, Replace, "abc", "bc", "234", var
          </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              variable 'var' should contain 'a234' after this is run
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_Right'></A>DDDriverStringCommands::<BIG>Right</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
          Returns a string of a specified number of characters copied from the end of another string.
        </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="3" ><LI>
<B>sourceString</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              sourceString (could come from a ^variable)
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>length</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              length
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>resultVar</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              the resultVar to place the result of the
              operation into
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">
            C, Right, "abc", 2, var
          </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              variable 'var' should contain 'bc' after this is run
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_RightTrim'></A>DDDriverStringCommands::<BIG>RightTrim</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
          A new string trimmed of trailing tabs and spaces.
        </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="3" ><LI>
<B>sourceString</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              sourceString (could come from a ^variable)
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>resultVar</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              the resultVar to place the result of the
              operation into
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">
            C, RightTrim, "abc ", var
          </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              variable 'var' should contain 'abc' after this is run
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_SubString'></A>DDDriverStringCommands::<BIG>SubString</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
          Returns a portion of a string based on character index.
        </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
          The substring  to retrieve starts at the specified start
          character index and ends after the specified number of characters have been copied.  If the number of characters to copy is not provided, then we will return all characters after the start index.
        </detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="3" ><LI>
<B>sourceString</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              sourceString (could come from a ^variable)
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>start</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              starting 0-based offset character position
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>[ <B>length</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              number of chars to copy.  If not provided or less than 1 then all characters after the start index will be retrieved.
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>resultVar</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              the resultVar to place the result of the
              operation into
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">
            C, SubString, "abc", 1, 1, var
          </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              variable 'var' should contain 'b' after this is run
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_ToLowerCase'></A>DDDriverStringCommands::<BIG>ToLowerCase</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
          Returns a copy of a string, with all letters converted to lowercase.
        </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="3" ><LI>
<B>sourceString</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              sourceString (could come from a ^variable)
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>resultVar</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              the resultVar to place the result of the
              operation into
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">
            C, ToLowerCase, "ABC", var
          </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              variable 'var' should contain 'abc' after this is run
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_ToUpperCase'></A>DDDriverStringCommands::<BIG>ToUpperCase</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
          Returns a copy of a string after converting all letters to uppercase.
        </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="3" ><LI>
<B>sourceString</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              sourceString (could come from a ^variable)
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>resultVar</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              the resultVar to place the result of the
              operation into
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">
            C, ToUpperCase, "abc", var
          </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              variable 'var' should contain 'ABC' after this is run
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
<H3><A NAME='detail_Trim'></A>DDDriverStringCommands::<BIG>Trim</BIG>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational RobotJ'>RJ</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Rational Robot Classic'>RC</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN></TD>
</TR></TABLE>
</H3>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
          A new string trimmed of leading and trailing tabs and spaces.
        </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<B>Fields: [ ]</B>=<SMALL>Optional with Default Value</SMALL><BR/>
	  <OL start="3" ><LI>
<B>sourceString</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              sourceString (could come from a ^variable)
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/><LI>
<B>resultVar</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              the resultVar to place the result of the
              operation into
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<BR/></OL ><B>Examples:</B><BR/><UL>
<LI>
<B><usage xmlns="">
            C, Trim, " abc ", var
          </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              variable 'var' should contain 'abc' after this is run
            </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<BR/></UL>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/></DIV>
</DIV>
		</BODY>
</HTML>
	