<HTML xmlns="http://www.w3.org/TR/REC-html40"><HEAD>
<TITLE>TestComplete DDDriverFlowCommands</TITLE>
<LINK rel="stylesheet" href="rrafs.css" type="text/css"/>
<LINK rel="stylesheet" href="bootstrap.css" type="text/css"/>
</HEAD><BODY><DIV class="container content" NAME="top" ID="top">
		  <H1>TestComplete DDDriverFlowCommands</H1>
		  
          Last Updated:<script language="JavaScript">document.write(document.lastModified)</script>
<BR/>
<BR/>
<DIV NAME="list" ID="short_desc"><short_desc xmlns="">
              Driver Commands for the Cycle, Suite, and Step drivers
          </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""><p>
          This keyword library provides Driver Commands that 
          can be used by all three DDE Drivers--CycleDriver, 
          SuiteDriver, and StepDriver.  That means they can 
          be used in any keyword driven test tables regardless 
          of the test tables level--Cycle, Suite, or Step.</p>
<p>
          Each different driver command has different parameters 
          as described in its documentation.  For reference, the 
          first fields of ALL Driver Command test records are defined 
          below:</p>
<dl>
<dd>Field #1</dd>
<dt>The "C" = DRIVER COMMAND record type specifier.</dt>
<dd>Field #2</dd>
<dt>The Driver Command keyword.</dt>
</dl>
<p>
          Example:</p><code>c , SetApplicationMap , "AppMap.map"</code><p>
          Driver Command parameters must be placed in the test record 
          in the field position specified in the documentation.  
          Some parameters are optional.  However, the field associated 
          with that parameter must be honored.  If you wish to skip an 
          optional parameter you must still provide an empty field for 
          that parameter.</p>
<p>
          Example:</p><code>c, LaunchApplication, NOTEPAD, NOTEPAD.EXE, , , "AppMap.map"</code><p>
          The above example shows two optional fields after NOTEPAD.EXE 
          which are given no value(skipped).</p>
<p>
          Note that the full availablility of all Driver Commands is now 
          spread across several files.  Together, all of these files provide 
          all the Driver Commands available to the core framework.</p>
<dl>
<dd><a href="DDDriverCommands.htm" target="_blank">DDDriverCommands</a></dd>
<dt>Miscellaneous and often used Commands.</dt>
<dd><a href="DDDriverLogCommands.htm" target="_blank">DDDriverLogCommands</a></dd>
<dt>Commands focused on logging test execution.</dt>
<dd><a href="DDDriverFlowCommands.htm" target="_blank">DDDriverFlowCommands</a></dd>
<dt>Commands focused on Error Recovery and Flow Control.</dt>
<dd><a href="DDDriverCounterCommands.htm" target="_blank">DDDriverCounterCommands</a></dd>
<dt>Commands focused on status tracking.</dt>
<dd><a href="DDDriverDeprecatedCommands.htm" target="_blank">DDDriverDeprecatedCommands</a></dd>
<dt>Commands that are still provided for backward compatibility, but are no longer supported.</dt>
<dd><a href="DDDriverDebugCommands.htm" target="_blank">DDDriverDebugCommands</a></dd>
<dt>Commands focused on debugging test execution.</dt>
</dl></detailed_desc><BR/>
		</DIV>
<BR/>
		<DIV NAME="list" ID="list">
		  <A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<TABLE class="table">
<thead class="thead-inverse">
<tr>
<th>Keyword Name</th>
<th>Supported Engines</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_CallCycle' HREF='#detail_CallCycle' >CallCycle</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                 Invoke a Cycle table (from StepDriver or SuiteDriver)
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_CallJUnit' HREF='#detail_CallJUnit' >CallJUnit</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                 Invoke one or more JUnit tests using the provided Class name(s).
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_CallStep' HREF='#detail_CallStep' >CallStep</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                 Invoke a Step table from within another Step table (from StepDriver).
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_CallSuite' HREF='#detail_CallSuite' >CallSuite</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                 Invoke a Suite table (from StepDriver or SuiteDriver)
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_ExitCycle' HREF='#detail_ExitCycle' >ExitCycle</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                 Exit the currently running Step, Suite, and/or Cycle table.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_ExitSuite' HREF='#detail_ExitSuite' >ExitSuite</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                 Exit the currently running Step and/or Suite table.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_ExitTable' HREF='#detail_ExitTable' >ExitTable</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                 Exit the currently running Step, Suite, or Cycle table.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_GotoBlockID' HREF='#detail_GotoBlockID' >GotoBlockID</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                 Goto a named block in the current table.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_OnContainsGotoBlockID' HREF='#detail_OnContainsGotoBlockID' >OnContainsGotoBlockID</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                 Goto the named block in the current table if value2 is contained within value1.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_OnDirectoryExistGotoBlockID' HREF='#detail_OnDirectoryExistGotoBlockID' >OnDirectoryExistGotoBlockID</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                 Goto the named block in the current table if the directory exists.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_OnDirectoryNotExistGotoBlockID' HREF='#detail_OnDirectoryNotExistGotoBlockID' >OnDirectoryNotExistGotoBlockID</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                 Goto the named block in the current table if the Directory does not exist.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_OnEqualGotoBlockID' HREF='#detail_OnEqualGotoBlockID' >OnEqualGotoBlockID</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                 Goto the named block in the current table if two values are equal.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_OnFileExistGotoBlockID' HREF='#detail_OnFileExistGotoBlockID' >OnFileExistGotoBlockID</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                 Goto the named block in the current table if the file exists.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_OnFileNotExistGotoBlockID' HREF='#detail_OnFileNotExistGotoBlockID' >OnFileNotExistGotoBlockID</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                 Goto the named block in the current table if the file does not exist.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_OnGreaterThanGotoBlockID' HREF='#detail_OnGreaterThanGotoBlockID' >OnGreaterThanGotoBlockID</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                 Goto the named block in the current table if value1 is greater than value2.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_OnGUIExistsGotoBlockID' HREF='#detail_OnGUIExistsGotoBlockID' >OnGUIExistsGotoBlockID</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SmartBear Test Complete'>TC</SPAN></TD>
</TR></TABLE>
</TD>
<TD>
                 Goto the named block in the current table if a GUI component exists.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_OnGUINotExistGotoBlockID' HREF='#detail_OnGUINotExistGotoBlockID' >OnGUINotExistGotoBlockID</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SmartBear Test Complete'>TC</SPAN></TD>
</TR></TABLE>
</TD>
<TD>
                 Goto the named block in the current table if a GUI component does not exist.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_OnInRangeGotoBlockID' HREF='#detail_OnInRangeGotoBlockID' >OnInRangeGotoBlockID</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD>
                 Goto named block if value1 is between value2 and value3.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_OnLessThanGotoBlockID' HREF='#detail_OnLessThanGotoBlockID' >OnLessThanGotoBlockID</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                 Goto the named block if value1 is less than value2.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_OnNotContainsGotoBlockID' HREF='#detail_OnNotContainsGotoBlockID' >OnNotContainsGotoBlockID</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                 Goto the named block in the current table if value2 is NOT a substring of value1.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_OnNotEqualGotoBlockID' HREF='#detail_OnNotEqualGotoBlockID' >OnNotEqualGotoBlockID</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                 Goto the named block in the current table if two values are not equal.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_OnNotGreaterThanGotoBlockID' HREF='#detail_OnNotGreaterThanGotoBlockID' >OnNotGreaterThanGotoBlockID</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                 Goto the named block in the current table if value1 is NOT greater than value2.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_OnNotInRangeGotoBlockID' HREF='#detail_OnNotInRangeGotoBlockID' >OnNotInRangeGotoBlockID</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD>
                 Goto the named block in the current table if value1 is not between value2 and value3.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_OnNotLessThanGotoBlockID' HREF='#detail_OnNotLessThanGotoBlockID' >OnNotLessThanGotoBlockID</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                 Goto the named block if value1 is NOT less than value2.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_OnRegistryKeyExistGotoBlockID' HREF='#detail_OnRegistryKeyExistGotoBlockID' >OnRegistryKeyExistGotoBlockID</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='WSupport' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='WSupport' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
</TR></TABLE>
</TD>
<TD>
                 Goto the named block in the current table if the Registry Key exists.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_OnRegistryKeyNotExistGotoBlockID' HREF='#detail_OnRegistryKeyNotExistGotoBlockID' >OnRegistryKeyNotExistGotoBlockID</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='WSupport' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='WSupport' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
</TR></TABLE>
</TD>
<TD>
                 Goto the named block in the current table if the Registry Key does not exist.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_SetExitTableBlock' HREF='#detail_SetExitTableBlock' >SetExitTableBlock</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                 Set or clear the name of a block to execute when the ExitTable command is encountered.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_SetGeneralScriptFailureBlock' HREF='#detail_SetGeneralScriptFailureBlock' >SetGeneralScriptFailureBlock</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                 Set or clear the name of a block to execute when GeneralScriptFailure occurs.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_SetInvalidFileIOBlock' HREF='#detail_SetInvalidFileIOBlock' >SetInvalidFileIOBlock</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                 Set or clear the name of a block to execute when InvalidFileIO occurs.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_SetNoScriptFailureBlock' HREF='#detail_SetNoScriptFailureBlock' >SetNoScriptFailureBlock</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                 Set or clear the name of a block to execute when NoScriptFailure occurs.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_SetScriptNotExecutedBlock' HREF='#detail_SetScriptNotExecutedBlock' >SetScriptNotExecutedBlock</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                 Set or clear the name of a block to execute when ScriptNotExecuted occurs.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_SetScriptWarningBlock' HREF='#detail_SetScriptWarningBlock' >SetScriptWarningBlock</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                 Set or clear the name of a block to execute when ScriptWarning occurs.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_UseLocalFlowControl' HREF='#detail_UseLocalFlowControl' >UseLocalFlowControl</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                 When TRUE then flow control block IDs have current table scope only.
              </TD>
		  </TR>
</tbody>
</TABLE>
<HR/>
</DIV>
		<DIV NAME="detail" ID="detail">
		  <H3><A NAME='detail_CallCycle'></A>TestComplete DDDriverFlowCommands::<BIG>CallCycle</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Invoke a Cycle table (from StepDriver or SuiteDriver)
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 Since the Cycle is executed as a driver command 
                 and NOT as a test record, the call to the 
                 Cycle itself is not counted as a test pass or a test fail.
              </detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="3" ><LI>
<B>CycleName</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The name of the Cycle table to execute.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>[ <B>CycleSeparator</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The field separator used by the table--if required.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 Only necessary if the table uses a different field separator than 
                 that already set for CycleDriver.  Use an empty string or an empty 
                 field to keep the field separator already in use.<br>
                 Typically, all the tables use the same separator so this can usually 
                 be left empty.
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<LI>[ <B>ParameterName</B> = AValue ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 One or more parameter values to send to the Cycle--each in their own field.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">C, CallCycle, "MyCycle" </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Invoke MyCycle which does not require or expect parameters.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, CallCycle, "MyCycle", ";" </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Invoke MyCycle which uses a semi-colon as a field delimiter.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, CallCycle, "AnotherCycle", "", ^FName="John", ^LName="Smith"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Invoke AnotherCycle using the existing field separator and passing two parameters.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_CallJUnit'></A>TestComplete DDDriverFlowCommands::<BIG>CallJUnit</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Invoke one or more JUnit tests using the provided Class name(s).
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 Because JUnit is a testing framework; test_record, test_passes, and test_failure counts within the status counters 
                 will be updated when possible.
                 <p>
                 If properly configured with SAFS RuntimeDataAwareness (dependency injection of SAFS Driver instances) the JUnit 
                 test has full access to all SAFS services including SAFS App Map data and SAFS Variable storage.
                 </p>
<p>JUnit tests can be intermixed with other SAFS tests.</p></detailed_desc><BR/>
		</DIV>
<DIV ID="note_desc"><SPAN CLASS='note'>NOTE:</SPAN><BR/><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN><SPAN CLASS='domainMarker' TITLE='HTML Domain'>HTM</SPAN> : <value xmlns="">
			    All SeleniumPlus actions, command, and libraries are available.  <br>
			    Access SeleniumPlus actions and commands through the SeleniumPlus static methods and fields.
			</value><BR/>
</DIV>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="3" ><LI>
<B>ClassName</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The name of one or more Classes to execute.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 Class names are in the normal full package.Class format.  
                 Multiple classes can be separated by SEMI-COLONs, COLONs, COMMAs, or SPACES--
                 whichever is NOT being used as the test record separator.  
                 The same separator should be used between all Classes.
                 <p>The Classes to execute must be findable within the JVM ClassPath.</p></detailed_desc><BR/>
		</DIV>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">C, CallJUnit, "com.sas.spock.tests.SpockExperiment" </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Have JUnit execute the com.sas.spock.tests.SpockExperiment Class.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 Test Records, Test Passes, and Test Failures will be added to the overall SAFS Test Status 
                 upon completion of the JUnit test.
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">C, CallJUnit, "myapp.tests.APITest myapp.tests.RESTTest"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Have JUnit execute 2 different tests.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 Test Records, Test Passes, and Test Failures will be added to the overall SAFS Test Status 
                 upon completion of the JUnit tests.
              </detailed_desc><BR/>
		</DIV>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_CallStep'></A>TestComplete DDDriverFlowCommands::<BIG>CallStep</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Invoke a Step table from within another Step table (from StepDriver).
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 The command is only used at the Step level.  You do not use this 
                 command within Suites or Cycles.
                 <p>Since the Step table is executed as a driver command by StepDriver 
                 and NOT as a CycleDriver or SuiteDriver test record, the call to the 
                 Step table itself is not counted as a test pass or a test fail.</p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="3" ><LI>
<B>StepName</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The name of the StepTable to execute.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>[ <B>StepSeparator</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The field separator used by the Step table--if required.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 Only necessary if the table uses a different field separator than 
                 that already set for StepDriver.  Use an empty string or an empty 
                 field to keep the field separator already in use.<br>
                 Typically, all the tables use the same separator so this can usually 
                 be left empty.
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<LI>[ <B>ParameterName</B> = AValue ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 One or more parameter values to send to the table--each in their own field.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">C, CallStep, "AnotherStepTable" </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Invoke AnotherStepTable which does not require or expect parameters.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, CallStep, "MyStep", ";" </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Invoke MyStep which uses a semi-colon as a field delimiter.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, CallStep, "AnotherStep", "", ^FName="John", ^LName="Smith"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Invoke AnotherStep using the existing field separator and passing two parameters.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_CallSuite'></A>TestComplete DDDriverFlowCommands::<BIG>CallSuite</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Invoke a Suite table (from StepDriver or SuiteDriver)
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 You cannot use CallSuite in a CycleDriver test table.
                 Since the Suite is executed as a driver command by SuiteDriver or 
                 StepDriver and NOT as a CycleDriver test record, the call to the 
                 Suite itself is not counted as a test pass or a test fail.
              </detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="3" ><LI>
<B>SuiteName</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The name of the Suite to execute.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>[ <B>SuiteSeparator</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The field separator used by the Suite--if required.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 The field separator used by the Suite--if required.<br>
                 Only necessary if the Suite uses a different field separator than 
                 that already set for SuiteDriver.  Use an empty string or an empty 
                 field to keep the field separator already in use.<br>
                 Typically, all the tables use the same separator so this can usually 
                 be left empty.
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<LI>[ <B>ParameterName</B> = AValue ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 One or more parameter values to send to the suite--each in their own field.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">C, CallSuite, "MySuite" </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Invoke MySuite which does not require or expect parameters.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, CallSuite, "MySuite", ";" </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Invoke MySuite which uses a semi-colon as a field delimiter.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, CallSuite, "AnotherSuite", "", ^FName="John", ^LName="Smith"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Invoke AnotherSuite using the existing field separator and passing two parameters.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_ExitCycle'></A>TestComplete DDDriverFlowCommands::<BIG>ExitCycle</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Exit the currently running Step, Suite, and/or Cycle table.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 Exit the currently running Step, Suite, and/or Cycle table.<br>
                 Generally called from Step or Suite Driver to exit or abort the entire 
                 Cycle test currently running.
                 <p>
                 The Step or Suite table containing the command is exited.  If an ExitTable 
                 processing block has been set by SetExitTableBlock then that block 
                 will be executed.  Otherwise, the table will immediately exit.  </p>
<p>
                 Any Suite and/or Cycle table that invoked the table will also be exited.  
                 If an ExitTable processing block has been set by SetExitTableBlock for the table 
                 then that block will be executed.  Otherwise, the table will immediately exit.</p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="3" ></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">C, ExitCycle</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Exit the current table and the entire Cycle test.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_ExitSuite'></A>TestComplete DDDriverFlowCommands::<BIG>ExitSuite</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Exit the currently running Step and/or Suite table.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 Exit the currently running Step and/or Suite table.<br>
                 Generally only called from Step Driver to exit the current Step 
                 table AND the Suite that invoked it.  The command should have no 
                 effect inside a Cycle table.
                 <p>
                 The Step or Suite table containing the command is exited.  If an ExitTable 
                 processing block has been set by SetExitTableBlock then that block 
                 will be executed.  Otherwise, the table will immediately exit.  </p>
<p>
                 If the table containing the command was a Step table, then the Suite that 
                 called the Step table will also be exited.  If an ExitTable 
                 processing block has been set by SetExitTableBlock for the Suite,
                 then that block will be executed.  Otherwise, the Suite will immediately exit.</p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="3" ></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">C, ExitSuite</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Exit the current Step and/or Suite table.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_ExitTable'></A>TestComplete DDDriverFlowCommands::<BIG>ExitTable</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Exit the currently running Step, Suite, or Cycle table.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 Exit the currently running Step, Suite, or Cycle table.<br>
                 The table containing the command is exited.  No other table 
                 is automatically exited because of this command.  If an ExitTable 
                 processing block has been set by SetExitTableBlock then that block 
                 will be executed.  Otherwise, the table will immediately exit.
              </detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="3" ></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">C, ExitTable</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Exit the current table.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_GotoBlockID'></A>TestComplete DDDriverFlowCommands::<BIG>GotoBlockID</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto a named block in the current table.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="3" ><LI>
<B>BlockID</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The name of the block to Goto.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">C, GotoBlockID, "ErrorHandler"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto the block named "ErrorHandler"
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_OnContainsGotoBlockID'></A>TestComplete DDDriverFlowCommands::<BIG>OnContainsGotoBlockID</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto the named block in the current table if value2 is contained within value1.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="3" ><LI>
<B>BlockID</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The name of the block to Goto.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>
<B>Value1</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The value to be searched for the Value2 substring
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>
<B>Value2</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 A string to search Value1 for an occurance of
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>[ <B>CaseSensitive</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Set to 'CaseInsensitive' so comparisons are NOT case-sensitive.
                 Comparisons are case-sensitive by default.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">C, OnContainsGotoBlockID, "NoError", Value1, Value2 </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto the block named "NoError" if "Value1" contains "Value2" (it doesn't).
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, OnContainsGotoBlockID, "NoError", Value1, VALUE1, CaseInsensitive </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto the block named "NoError" if "Value1" contains "VALUE1" (it does since comparison is case-insensitive).
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, OnContainsGotoBlockID, "NoError", ^Value1, Value2 </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto "NoError" if DDVariable ^Value1 contains "Value2" (it might).
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, OnContainsGotoBlockID, "NoError", ^Value1, ^Value2 </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto "NoError" if DDVariable ^Value1 contains DDVariable ^Value2 (it might).
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_OnDirectoryExistGotoBlockID'></A>TestComplete DDDriverFlowCommands::<BIG>OnDirectoryExistGotoBlockID</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto the named block in the current table if the directory exists.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="3" ><LI>
<B>BlockID</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The name of the block to Goto.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>
<B>DirectoryName</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The directory name of the directory relative to Datapool/Test to be verified for existance.  Case sensitivity is handled by the underlying operating system (i.e. a case sensitive platform makes this keyword case sensitive).
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">C, OnDirectoryExistGoToBlockId, DirectoryExist, "DirectoryName" </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto the block named "DirectoryExist" if Directory "DirectoryName" exists.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, OnDirectoryExistGoToBlockId, DirectoryExist, DirectoryName, CaseInsensitive </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto the block named "DirectoryExist" if directory DirectoryName exists 
                 (Directory name check is case-insensitive).
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_OnDirectoryNotExistGotoBlockID'></A>TestComplete DDDriverFlowCommands::<BIG>OnDirectoryNotExistGotoBlockID</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto the named block in the current table if the Directory does not exist.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="3" ><LI>
<B>BlockID</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The name of the block to Goto.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>
<B>DirectoryName</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The directory name relatvie to Datapool/Text of the directory to be verified for non existance.  Case sensitivity is handled by the underlying operating system (i.e. a case sensitive platform makes this keyword case sensitive).
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">C, OnDirectoryNotExistGoToBlockId, DirectoryNotExist, DirectoryName </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto the block named DirectoryNotExist if Directory DirectoryName does not exist.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, OnDirectoryNotExistGoToBlockId, DirectoryNotExist, DirectoryName, CaseInsensitive </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto the block named DirectoryNotExist if directory DirectoryName does not exist
                 (file name check is case-insensitive).
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_OnEqualGotoBlockID'></A>TestComplete DDDriverFlowCommands::<BIG>OnEqualGotoBlockID</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto the named block in the current table if two values are equal.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="3" ><LI>
<B>BlockID</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The name of the block to Goto.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>
<B>Value1</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The first value for the comparison.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>
<B>Value2</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The second value for the comparison.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>[ <B>CaseSensitive</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Set to 'CaseInsensitive' so comparisons are NOT case-sensitive.
                 Comparisons are case-sensitive by default.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">C, OnEqualGotoBlockID, "NoError", Value1, Value2 </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto the block named "NoError" if "Value1" equal "Value2" (they don't).
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, OnEqualGotoBlockID, "NoError", Value1, VALUE1, CaseInsensitive </usage></B>
<BR/><DIV NAME="list" ID="short_desc">
</DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 Goto the block named "NoError" if "Value1" equal "VALUE1" (they do if
                 the comparison is case-insensitive).
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">C, OnEqualGotoBlockID, "NoError", ^Value1, Value2 </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto "NoError" if DDVariable ^Value1 equal "Value2" (it might).
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, OnEqualGotoBlockID, "NoError", ^Value1, ^Value2 </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto "NoError" if DDVariable ^Value1 = DDVariable ^Value2 (it might).
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_OnFileExistGotoBlockID'></A>TestComplete DDDriverFlowCommands::<BIG>OnFileExistGotoBlockID</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto the named block in the current table if the file exists.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="3" ><LI>
<B>BlockID</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The name of the block to Goto.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>
<B>FileName</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The file name of the file relative to Datapool/Test to be verified for existance.  Case sensitivity is handled by the underlying operating system (i.e. a case sensitive platform makes this keyword case sensitive).
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">C, OnFileExistGoToBlockId, FileExist, "FileName" </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto the block named "FileExist" if file FileName exists.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, OnFileExistGoToBlockId, FileExist, FileName, CaseInsensitive </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto the block named "FileExist" if file FileName exists 
                 (file name check is case-insensitive).
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_OnFileNotExistGotoBlockID'></A>TestComplete DDDriverFlowCommands::<BIG>OnFileNotExistGotoBlockID</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto the named block in the current table if the file does not exist.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="3" ><LI>
<B>BlockID</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The name of the block to Goto.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>
<B>FileName</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The file name of the file relative to Datapool/Test to be verified for existance.  Case sensitivity is handled by the underlying operating system (i.e. a case sensitive platform makes this keyword case sensitive).
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">C, OnFileNotExistGoToBlockId, FileNotExist, FileName </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto the block named FileNotExist if file FileName does not exist.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, OnFileNotExistGoToBlockId, FileNotExist, FileName, CaseInsensitive </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto the block named FileNotExist if file FileName does not exist
                 (file name check is case-insensitive).
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_OnGreaterThanGotoBlockID'></A>TestComplete DDDriverFlowCommands::<BIG>OnGreaterThanGotoBlockID</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto the named block in the current table if value1 is greater than value2.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="3" ><LI>
<B>BlockID</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The name of the block to Goto.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>
<B>Value1</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The value to be compared.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>
<B>Value2</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The value to be compared against.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>[ <B>CaseSensitive</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Set to 'CaseInsensitive' so comparisons are NOT case-sensitive.
                 Comparisons are case-sensitive by default.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">C, OnGreaterThanGotoBlockID, "NoError", Val2, Val1 </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto the block named "NoError" since Val2 is greater than Val1 via string compare.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, OnGreaterThanGotoBlockID, "NoError", 500, 100 </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto "NoError" since 500 is greather than 100 via numerical comparison.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, OnGreaterThanGotoBlockID, "NoError", ^Val1, ^Val2 </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto "NoError" if DDVariable ^Val1 is greater than DDVariable ^Val2.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_OnGUIExistsGotoBlockID'></A>TestComplete DDDriverFlowCommands::<BIG>OnGUIExistsGotoBlockID</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SmartBear Test Complete'>TC</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 Goto the named block in the current table if a GUI component exists.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="3" ><LI>
<B>BlockID</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 The name of the block to Goto.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>
<B>WindowID</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 A Window reference from the app map.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>
<B>ComponentID</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 A reference from the app map for the Component within the Window.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 A reference from the app map for the Component within the Window.
                 If the Window is the item of interest then both the WindowID and
                 ComponentID will be the same.
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<LI>[ <B>TimeOut</B> = 15 ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 Timeout value in seconds before exiting automatically (no branch).
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">C, OnGUIExistsGotoBlockID, "WindowExists", AWindow, AWindow </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 Goto the block named "WindowExists" if AWindow becomes valid in 15 seconds.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, OnGUIExistsGotoBlockID, "ButtonExists", AWindow, AButton, 10 </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 Goto the block named "ButtonExists" if AButton on AWindow becomes valid
                 in 10 seconds.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_OnGUINotExistGotoBlockID'></A>TestComplete DDDriverFlowCommands::<BIG>OnGUINotExistGotoBlockID</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SmartBear Test Complete'>TC</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 Goto the named block in the current table if a GUI component does not exist.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="3" ><LI>
<B>BlockID</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 The name of the block to Goto.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>
<B>WindowID</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 A Window reference from the app map.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>
<B>ComponentID</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 A reference from the app map for the Component within the Window.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 A reference from the app map for the Component within the Window.
                 If the Window is the item of interest then both the WindowID and
                 ComponentID will be the same.
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<LI>[ <B>TimeOut</B> = 15 ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 Timeout value in seconds before exiting automatically (no branch).
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">C, OnGUINotExistGotoBlockID, "WindowNotExist", AWindow, AWindow </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 Goto the block named "WindowNotExist" if AWindow becomes invalid in 15 seconds.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, OnGUINotExistGotoBlockID, "ButtonNotExist", AWindow, AButton, 10 </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 Goto the block named "ButtonNotExist" if AButton on AWindow becomes invalid
                 in 10 seconds.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_OnInRangeGotoBlockID'></A>TestComplete DDDriverFlowCommands::<BIG>OnInRangeGotoBlockID</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 Goto named block if value1 is between value2 and value3.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="3" ><LI>
<B>BlockID</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 The name of the block to Goto.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>
<B>Value1</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 The value to be compared.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>
<B>Value2</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 The low end of range to be compared against.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>
<B>Value3</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 The high end of range to be compared against.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>[ <B>CaseSensitive</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Set to 'CaseInsensitive' so string comparisons are NOT case-sensitive.
                 String Comparisons are case-sensitive by default.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">C, OnInRangeGotoBlockID, "NoError", Val22, Val21, Val31 </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
             Goto  "NoError" if "^Val1" is within Val2 and Val3.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, OnInRangeGotoBlockID, "NoError", 200, 100, 500 </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
            Goto "NoError" since 200 is numerically between 100 and 500.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, OnInRangeGotoBlockID, "NoError", ^Val1, ^Val2, ^Val3 </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
            Goto "NoError" if DDVariable ^Val1 is within DDVarialbe ^Val2 and DDVariable ^Val3.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_OnLessThanGotoBlockID'></A>TestComplete DDDriverFlowCommands::<BIG>OnLessThanGotoBlockID</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto the named block if value1 is less than value2.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="3" ><LI>
<B>BlockID</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The name of the block to Goto.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>
<B>Value1</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The value to be compared.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>
<B>Value2</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The value to be compared against.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>[ <B>CaseSensitive</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Set to 'CaseInsensitive' so string comparisons are NOT case-sensitive.
                 String Comparisons are case-sensitive by default.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">C, OnLessThanGotoBlockID, "NoError", Val1, Val2 </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto the block named "NoError" since string compare of Val1 is less than Val2.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, OnLessThanGotoBlockID, "NoError", 100, 200 </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto block named "NoError" since numerical compare 100 is less than 200.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, OnLessThanGotoBlockID, "NoError", ^Val1, ^Val2 </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto "NoError" if DDVariable ^Val1 less than DDVariable ^Val2.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_OnNotContainsGotoBlockID'></A>TestComplete DDDriverFlowCommands::<BIG>OnNotContainsGotoBlockID</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto the named block in the current table if value2 is NOT a substring of value1.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="3" ><LI>
<B>BlockID</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The name of the block to Goto.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>
<B>Value1</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The value to be searched for the Value2 substring
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>
<B>Value2</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The substring to seek in VALUE1
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>[ <B>CaseSensitive</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Set to 'CaseInsensitive' so comparisons are NOT case-sensitive.
                 Comparisons are case-sensitive by default.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">C, OnNotContainsGotoBlockID, "NoError", Value1, Value2 </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto the block named "NoError" since "Value1" does not contain "Value2".
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, OnNotContainsGotoBlockID, "NoError", Value1, VALUE1, CaseInsensitive </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Does not branch to "NoError" because "Value1" DOES contain "VALUE1" since comparison is case-insensitive.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, OnNotContainsGotoBlockID, "NoError", ^Value1, Value2 </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto "NoError" if DDVariable ^Value1 does not contain "Value2" (it might).
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, OnNotContainsGotoBlockID, "NoError", ^Value1, ^Value2 </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto "NoError" if DDVariable ^Value1 does not contain DDVariable ^Value2 (it might).
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_OnNotEqualGotoBlockID'></A>TestComplete DDDriverFlowCommands::<BIG>OnNotEqualGotoBlockID</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto the named block in the current table if two values are not equal.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="3" ><LI>
<B>BlockID</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The name of the block to Goto.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>
<B>Value1</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The first value for the comparison.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>
<B>Value2</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The second value for the comparison.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>[ <B>CaseSensitive</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Set to 'CaseInsensitive' so string comparisons are NOT case-sensitive.
                 String Comparisons are case-sensitive by default.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">C, OnNotEqualGotoBlockID, "NoError", Value1, Value2 </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto the block named "NoError" since Value2 not equal Value2.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, OnNotEqualGotoBlockID, "NoError", Value1, VALUE1, CaseInsensitive </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto the block named "NoError" if "Value1" not equal "VALUE1" (they are equal 
                 since the comparison is case-insensitive--branch does not occur).
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, OnNotEqualGotoBlockID, "NoError", 100, 200 </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto "NoError" since 100 not equal 200.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, OnNotEqualGotoBlockID, "NoError", ^Value1, ^Value2 </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto "NoError" if DDVariable ^Value1 not equal DDVariable ^Value2 (it might be).
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_OnNotGreaterThanGotoBlockID'></A>TestComplete DDDriverFlowCommands::<BIG>OnNotGreaterThanGotoBlockID</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto the named block in the current table if value1 is NOT greater than value2.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="3" ><LI>
<B>BlockID</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The name of the block to Goto.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>
<B>Value1</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The value expected to be NOT greater than VALUE2.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>
<B>Value2</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The value expected to be equal or greater than VALUE1.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>[ <B>CaseSensitive</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Set to 'CaseInsensitive' so comparisons are NOT case-sensitive.
                 Comparisons are case-sensitive by default.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">C, OnNotGreaterThanGotoBlockID, "NoError", Val1, Val2 </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto the block named "NoError" since Val1 is NOT greater than Val2 via string compare.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, OnNotGreaterThanGotoBlockID, "NoError", Val1, Val1 </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto the block named "NoError" since Val1 equals Val1 via string compare.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, OnNotGreaterThanGotoBlockID, "NoError", Val2, Val1 </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Does not branch to "NoError" since Val2 is greater than Val1 via string compare.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, OnNotGreaterThanGotoBlockID, "NoError", 100, 500 </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto "NoError" since 100 is NOT greather than 500 via numerical comparison.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, OnNotGreaterThanGotoBlockID, "NoError", ^Val1, ^Val2 </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto "NoError" if DDVariable ^Val1 is NOT greater than DDVariable ^Val2.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_OnNotInRangeGotoBlockID'></A>TestComplete DDDriverFlowCommands::<BIG>OnNotInRangeGotoBlockID</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 Goto the named block in the current table if value1 is not between value2 and value3.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="3" ><LI>
<B>BlockID</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 The name of the block to Goto.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>
<B>Value1</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 The value to be compared.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>
<B>Value2</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 The low end of range to be compared against.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>
<B>Value3</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 The high end of range to be compared against.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>[ <B>CaseSensitive</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Set to 'CaseInsensitive' so string comparisons are NOT case-sensitive.
                 String Comparisons are case-sensitive by default.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">C, OnNotInRangeGotoBlockID, "NoError", Val11, Val21, Val31 </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 Goto the block "NoError" Val11 is not between Val21 and Val31 using string compare".
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, OnNotInRangeGotoBlockID, "NoError", 100, 200, 500 </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 Goto "NoError" since 100 is not numerically between 200 and 500".
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, OnNotInRangeGotoBlockID, "NoError", ^Val1, ^Val2, ^Val3 </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto "NoError" if DDVarialbe ^Val1 is within DDVariable ^Val2 and DDVariable ^Val3.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_OnNotLessThanGotoBlockID'></A>TestComplete DDDriverFlowCommands::<BIG>OnNotLessThanGotoBlockID</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto the named block if value1 is NOT less than value2.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="3" ><LI>
<B>BlockID</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The name of the block to Goto.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>
<B>Value1</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The value that should be NOT less than VALUE2.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>
<B>Value2</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The value that should be equal or less than VALUE1.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>[ <B>CaseSensitive</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Set to 'CaseInsensitive' so string comparisons are NOT case-sensitive.
                 String Comparisons are case-sensitive by default.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">C, OnNotLessThanGotoBlockID, "NoError", Val2, Val1 </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto the block named "NoError" since string compare of Val2 is NOT less than Val1.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, OnNotLessThanGotoBlockID, "NoError", Val1, Val1 </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto the block named "NoError" since string compare of Val1 equals Val1.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, OnNotLessThanGotoBlockID, "NoError", Val1, Val2 </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Does not branch to "NoError" since string compare of Val1 is less than Val2.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, OnNotLessThanGotoBlockID, "NoError", 200, 100 </usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Goto block named "NoError" since numerical compare 200 is not less than 100.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_OnRegistryKeyExistGotoBlockID'></A>TestComplete DDDriverFlowCommands::<BIG>OnRegistryKeyExistGotoBlockID</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='WSupport' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='WSupport' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 Goto the named block in the current table if the Registry Key exists.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">On Windows XP (and higher?) this is accomplished via 
              the REG.EXE provided by the operating system.  If this program is NOT available 
              then the Registry commands will not work until another means is implemented--possibly 
              Windows Scripting Host scripts, etc..
              </detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="3" ><LI>
<B>BlockID</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 The name of the block to Goto.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>
<B>Key</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 The Registry Key to seek.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>[ <B>KeyValue</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 The optional Registry subkey value to seek.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 The value name under the parent key.  If not provided then we just 
                 check to see if the provided parent key exists.
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<LI>[ <B>TimeOut</B> = 15 ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 Timeout value in seconds before exiting automatically (no branch).
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">C, OnRegistryKeyExistGotoBlockID, IBM_BLOCK, "HKLM\Software\Rational Software\Rational Test\8", "Install Directory", 0</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 Go to block IBM_BLOCK if the Install Directory subkey exists right now.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, OnRegistryKeyExistGotoBlockID, RJ_INSTALLED, "HKLM\Software\Rational Software\Rational Test\8", "Rational FT Install Directory"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 Go to block RJ_INSTALLED if the key value comes into existence within the default 15 seconds.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_OnRegistryKeyNotExistGotoBlockID'></A>TestComplete DDDriverFlowCommands::<BIG>OnRegistryKeyNotExistGotoBlockID</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='WSupport' TITLE='SAFS TID Commands'>TID</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='WSupport' TITLE='SAFS Driver Commands'>SDC</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 Goto the named block in the current table if the Registry Key does not exist.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">On Windows XP (and higher?) this is accomplished via 
              the REG.EXE provided by the operating system.  If this program is NOT available 
              then the Registry commands will not work until another means is implemented--possibly 
              Windows Scripting Host scripts, etc..
              </detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="3" ><LI>
<B>BlockID</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 The name of the block to Goto.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>
<B>Key</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 The Registry Key to seek.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI>
<LI>[ <B>KeyValue</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 The optional Registry subkey value to seek.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 The value name under the parent key.  If not provided then we just 
                 check to see if the provided parent key exists.
              </detailed_desc><BR/>
		</DIV>
		  </LI>
<LI>[ <B>TimeOut</B> = 15 ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 Timeout value in seconds before exiting automatically (no branch).
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">C, OnRegistryKeyNotExistGotoBlockID, NO_RATIONAL, "HKLM\Software\Rational Software\Rational Test\8", "Install Directory", 0</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 Go to block NO_RATIONAL if the Install Directory value does not exist.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, OnRegistryKeyNotExistGotoBlockID, NO_RFT, "HKLM\Software\Rational Software\Rational Test\8", "Rational FT Install Directory"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 Go to block NO_RFT if the Rational FT Install Directory value does not come into existence within the default 15 seconds.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_SetExitTableBlock'></A>TestComplete DDDriverFlowCommands::<BIG>SetExitTableBlock</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Set or clear the name of a block to execute when the ExitTable command is encountered.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 Set or clear the name of a block to execute when the ExitTable command is encountered.<br>
                 You can reset this to nothing by leaving the BlockID parameter blank 
                 or providing an empty BlockID.  This reset should be done as part of the ExitTable 
                 processing.
              </detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="3" ><LI>[ <B>BlockID</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The name of the block to Goto when ExitTable is encountered.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">C, SetExitTableBlock, "ProcessExit"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Set "ProcessExit" as the block to execute when ExitTable is encountered.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, SetExitTableBlock, ""</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Clear any special ExitTable processing for this test level.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_SetGeneralScriptFailureBlock'></A>TestComplete DDDriverFlowCommands::<BIG>SetGeneralScriptFailureBlock</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Set or clear the name of a block to execute when GeneralScriptFailure occurs.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 Set or clear the name of a block to execute when GeneralScriptFailure occurs.<br>
                 Status is evaluated after the completion of every record in a table. 
                 <p>
                 You can reset this to nothing by leaving the BlockID parameter blank 
                 or providing an empty BlockID.</p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="3" ><LI>[ <B>BlockID</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The name of the block to Goto on status GeneralScriptFailure.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">C, SetGeneralScriptFailureBlock, "ErrorHandler"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Set "ErrorHandler" as the block to execute on the next GeneralScriptFailure.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, SetGeneralScriptFailureBlock, ""</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Continue normal execution on subsequent GeneralScriptFailure.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_SetInvalidFileIOBlock'></A>TestComplete DDDriverFlowCommands::<BIG>SetInvalidFileIOBlock</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Set or clear the name of a block to execute when InvalidFileIO occurs.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 Set or clear the name of a block to execute when InvalidFileIO occurs.<br>
                 Status is evaluated after the completion of every record in a table. 
                 <p>
                 You can reset this to nothing by leaving the BlockID parameter blank 
                 or providing an empty BlockID.</p>
<p>
                 Note, an InvalidFileIO generated from the test table itself will not 
                 be processed by this block.  In general, that would not be possible 
                 because the FileIO error likely means the table cannot be processed.</p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="3" ><LI>[ <B>BlockID</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The name of the block to Goto on status InvalidFileIO.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">C, SetInvalidFileIOBlock, "IOHandler"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Set "IOHandler" as the block to execute on the next InvalidFileIO.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, SetInvalidFileIOBlock, ""</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Continue normal execution on subsequent InvalidFileIO.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_SetNoScriptFailureBlock'></A>TestComplete DDDriverFlowCommands::<BIG>SetNoScriptFailureBlock</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Set or clear the name of a block to execute when NoScriptFailure occurs.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 Set or clear the name of a block to execute when NoScriptFailure occurs.<br>
                 Status is evaluated after the completion of every record in a table. 
                 So event the simple logging of message can return NoScriptFailure.
                 <p>
                 This block setting is automatically cleared when a jump is executed as 
                 a result of this condition.  This command is generally used immediately 
                 before the record you expect to pass or fail.  You can reset this to 
                 nothing by leaving the BlockID parameter blank or providing an empty
                 BlockID.</p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="3" ><LI>[ <B>BlockID</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The name of the block to Goto on status NoScriptFailure.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">C, SetNoScriptFailureBlock, "NoError"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Set "NoError" as the block to execute on the next NoScriptFailure.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, SetNoScriptFailureBlock, ""</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Continue normal execution on subsequent NoScriptFailure.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_SetScriptNotExecutedBlock'></A>TestComplete DDDriverFlowCommands::<BIG>SetScriptNotExecutedBlock</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Set or clear the name of a block to execute when ScriptNotExecuted occurs.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 Set or clear the name of a block to execute when ScriptNotExecuted occurs.<br>
                 Status is evaluated after the completion of every record in a table.  In general, 
                 ScriptNotExecuted only occurs when the drivers are not able to be invoked or 
                 StepDriver cannot properly locate GUI items or the functions to process them.
                 <p>
                 You can reset this to nothing by leaving the BlockID parameter blank 
                 or providing an empty BlockID.</p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="3" ><LI>[ <B>BlockID</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The name of the block to Goto on status ScriptNotExecuted.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">C, SetScriptNotExecutedBlock, "AbortHandler"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Set "AbortHandler" as the block to execute on the next ScriptNotExecuted.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, SetScriptNotExecutedBlock, ""</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Continue normal execution on subsequent ScriptNotExecuted.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_SetScriptWarningBlock'></A>TestComplete DDDriverFlowCommands::<BIG>SetScriptWarningBlock</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Set or clear the name of a block to execute when ScriptWarning occurs.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 Set or clear the name of a block to execute when ScriptWarning occurs.<br>
                 Status is evaluated after the completion of every record in a table. 
                 <p>
                 You can reset this to nothing by leaving the BlockID parameter blank 
                 or providing an empty BlockID.</p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="3" ><LI>[ <B>BlockID</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The name of the block to Goto on status ScriptWarning.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">C, SetScriptWarningBlock, "WarningHandler"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Set "WarningHandler" as the block to execute on the next ScriptWarning.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, SetScriptWarningBlock, ""</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Continue normal execution on subsequent ScriptWarning.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_UseLocalFlowControl'></A>TestComplete DDDriverFlowCommands::<BIG>UseLocalFlowControl</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 When TRUE then flow control block IDs have current table scope only.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                 By default, flow control block IDs provided with the SetXXXBlock commands 
                 have test level scope.  That is, a block ID set stays in effect for all test 
                 tables at that test level until the block ID is changed or cleared.
                 <p>
                 By setting UseLocalFlowControl=TRUE then any flow control block ID set 
                 has only local scope.  It is only valid for the currently executing table.
                 </p><p>
                 Note, if no parameter is provided the parameter will default to TRUE.
                 </p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="3" ><LI>[ <B>State</B> = TRUE ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 The TRUE or FALSE value to use.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 If no value is provided then "TRUE" will be assumed.
              </detailed_desc><BR/>
		</DIV>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">C, UseLocalFlowControl</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Use/Set local flow control blockIDs only.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, UseLocalFlowControl, TRUE</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Use/Set local flow control blockIDs only.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
<LI>
<B><usage xmlns="">C, UseLocalFlowControl, FALSE</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                 Use/Set standard test level scope blockIDs.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
</DIV>
		</DIV>
</BODY>
</HTML>
	