<HTML xmlns="http://www.w3.org/TR/REC-html40"><HEAD>
<TITLE>Android GenericObjectFunctions</TITLE>
<LINK rel="stylesheet" href="rrafs.css" type="text/css"/>
<LINK rel="stylesheet" href="bootstrap.css" type="text/css"/>
</HEAD><BODY><DIV class="container content" NAME="top" ID="top">
		  <H1>Android GenericObjectFunctions</H1>
		  
          Last Updated:<script language="JavaScript">document.write(document.lastModified)</script>
<BR/>
<BR/>
<DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
              Actions for working with GENERIC objects
           </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""></detailed_desc><BR/>
		</DIV>
<BR/>
		<DIV NAME="list" ID="list">
		  <A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<TABLE class="table">
<thead class="thead-inverse">
<tr>
<th>Keyword Name</th>
<th>Supported Engines</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_Click' HREF='#detail_Click' >Click</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Android'>DRD</SPAN>:<SPAN CLASS='domainMarker' TITLE='DEV Domain'>DEV</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                A single click on an object.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_ClickScreenImage' HREF='#detail_ClickScreenImage' >ClickScreenImage</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                Same as Click.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_ClickScreenLocation' HREF='#detail_ClickScreenLocation' >ClickScreenLocation</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                Click a specified screen location.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A ID="linkdeprecated" NAME='list_ClickScreenPoint' HREF='#detail_ClickScreenPoint' >ClickScreenPoint</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD>Deprecated For:GenericObject ClickScreenLocation</TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_CtrlClick' HREF='#detail_CtrlClick' >CtrlClick</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD>
                A CTRL-click on an object.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_CtrlClickScreenImage' HREF='#detail_CtrlClickScreenImage' >CtrlClickScreenImage</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                Same as CtrlClick.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_CtrlRightClick' HREF='#detail_CtrlRightClick' >CtrlRightClick</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD>
                A CTRL-Right click on an object.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_CtrlRightClickScreenImage' HREF='#detail_CtrlRightClickScreenImage' >CtrlRightClickScreenImage</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                Same as CtrlRightClick.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_DoubleClick' HREF='#detail_DoubleClick' >DoubleClick</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                A double click on an object.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_DoubleClickScreenImage' HREF='#detail_DoubleClickScreenImage' >DoubleClickScreenImage</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                Same as DoubleClick.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_DoubleClickScreenLocation' HREF='#detail_DoubleClickScreenLocation' >DoubleClickScreenLocation</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                DoubleClick a specified screen location.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A ID="linkdeprecated" NAME='list_DoubleClickScreenPoint' HREF='#detail_DoubleClickScreenPoint' >DoubleClickScreenPoint</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD>Deprecated For:GenericObject DoubleClickScreenLocation</TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_LeftDrag' HREF='#detail_LeftDrag' >LeftDrag</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                A left mouse drag is performed on the object based on the stored coordinates.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_MultiClick' HREF='#detail_MultiClick' >MultiClick</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                Multiple clicks on an object.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_MultiClickScreenImage' HREF='#detail_MultiClickScreenImage' >MultiClickScreenImage</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                Same as MULTICLICK.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_Press' HREF='#detail_Press' >Press</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Android'>DRD</SPAN>:<SPAN CLASS='domainMarker' TITLE='DEV Domain'>DEV</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                Press a touchscreen object for a number of seconds--0 seconds by default.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_RightClick' HREF='#detail_RightClick' >RightClick</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                A right click on an object.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_RightClickScreenImage' HREF='#detail_RightClickScreenImage' >RightClickScreenImage</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                Same as RightClick.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_RightClickScreenLocation' HREF='#detail_RightClickScreenLocation' >RightClickScreenLocation</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                RightClick a specified screen location.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A ID="linkdeprecated" NAME='list_RightClickScreenPoint' HREF='#detail_RightClickScreenPoint' >RightClickScreenPoint</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD>Deprecated For:GenericObject RightClickScreenLocation</TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_RightDrag' HREF='#detail_RightDrag' >RightDrag</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                A right mouse drag is performed on the object based on the stored coordinates.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_ShiftClick' HREF='#detail_ShiftClick' >ShiftClick</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD>
                A SHIFT click on an object.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_ShiftClickScreenImage' HREF='#detail_ShiftClickScreenImage' >ShiftClickScreenImage</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                Same as ShiftClick.
              </TD>
		  </TR>
<TR>
<TD nowrap="true" width="27%"><A NAME='list_Tap' HREF='#detail_Tap' >Tap</A></TD>
<TD width="12%">
<TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Android'>DRD</SPAN>:<SPAN CLASS='domainMarker' TITLE='DEV Domain'>DEV</SPAN></TD>
</TR></TABLE>
</TD>
<TD> 
                A single Tap on a touchscreen object.  Use keyword "Click" syntax and parameters.
              </TD>
		  </TR>
</tbody>
</TABLE>
<HR/>
</DIV>
		<DIV NAME="detail" ID="detail">
		  <H3><A NAME='detail_Click'></A>Android GenericObjectFunctions::<BIG>Click</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Android'>DRD</SPAN>:<SPAN CLASS='domainMarker' TITLE='DEV Domain'>DEV</SPAN></TD>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                A single click on an object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""><p>
                By default, clicks on the center of the component.
                We can also click on any part of an object, or any point relative to an object 
                based on a provided x,y coordinate or other component-specific parameters.  
                </p><p>
                For SE+, the coordinate can be percentage format, like "20%,30%". This percentage format 
                indicates the point (20% width of component, 30% height of component) relative to the object.
                </p><p>
                The object to be clicked is first given context and then a click is 
                generated at the coordinates.  Thus, a subitem or object can be 
                referenced by name even though it is only recognized via coordinates.
                </p><p>
                The coordinate lookup is done with the component name of the record AND 
                Field #5 or by providing the literal text of the coordinates, where supported.</p>
<p>
                Typical Data Table records:</p>
<p>
                (1) t MainWindow MainWindow  Click<br>
                (2) t MainWindow MainWindow  Click AnObject<br>
                (3) t MainWindow FolderTree  Click Node1<br>
                (4) t MainWindow MainWindow  Click "50,200"<br>
                (5) t MainWindow MainWindow  Click "Coords=50,200"
                </p><p>
                For SE+, the Data Table records can be:
                </p><p>
                (6) t MainWindow MainWindow  Click "50%,20%"<br>
                (7) t MainWindow MainWindow  Click "50,20%"<br></p><p>
                #2 above will contain an AnObject="3,10" entry in the MainWindow section 
                of the Application Map to click at x=3, y=10 in the MainWindow.
                </p><p>
                #3 above will contain a FolderTree entry in the MainWindow section with 
                normal recognition information for it.  FolderTree will also have it's
                own section in the Application Map in which there will be an entry like 
                Node1="15,30".  This will tell Robot to locate the FolderTree Generic 
                object and click at the coordinates specified by the reference.
                </p><p>
                #4 and #5 above show using literal text instead of an App Map entry to specify 
                where to click relative to the item.
                </p><p>
                #6 and #7 above show using percentage format in <b>SE+</b>. #6 will click at position, 
                where the X value equals 50% width of component, its Y value equals 20% height of component, 
                relative to the object. #7 will click at position, where the X value equals 50, 
                its Y value equals 20% height of component, relative to the object.
                </p><p>
                Rational Robot no longer requires the AppMapSubKey be provided and will 
                attempt to use the string as literal text if no AppMapSubKey is found in 
                the current App Map.  Robot also no longer assumes the AppMapSubKey value 
                or the literal value is presenting coordinate information.  This allows 
                components that can accept parameters other than coordinates, like table 
                row/col values or ImageMap areas to be specified.
                </p><p>
                If the value is deduced to contain coordinates, but is not prefixed with 
                "Coords=" text, then Robot will add the prefix.  Otherwise, the text value 
                will remain unmodified.
                </p><p>
		        This is the direction we expect all tools to follow going forward.
		        </p><p>
		        Engines should also attempt to support coordinates separated by alternate separators.  
		        The most common separators that should be supported would be:
		        <ul>
<li>"," (comma) Example: "50,200"</li>
<li>";" (semi-colon) Example: "50;200"</li>
<li>" " (space) Example: "50 200"</li>
</ul>
</p><p>
		        Note: the TID supports this command using 
		        <a href="http://safsdev.sourceforge.net/sqabasic2000/SAFSImageBasedRecognition.htm" target="imagebased" alt="SAFS Image-Based Recognition Doc">Image-Based Testing</a> 
		        techniques and App Map entries as well as literal text coordinates.
		        </p>
<p>For IOS: Any optional coordinates MUST be specified as an integer number between 
		        0-100.  0 represents the extreme left (or top), while 100 represents the extreme 
		        right (or bottom). IOS does not use absolute coordinates, but relative coordinates 
		        representing a percentage of the element width or height.
		        </p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="5" ><LI>[ <B>AppMapSubkey</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                (Optional)Name of the AppMap subkey to lookup or the literal text to use for the click.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                Without this we should click on the center of the object.
                <p>Name of the AppMap subkey to lookup and use for the click.
                We expect the AppMap or literal text to contain the item in the format "x,y":</p>
<pre>
                [FolderTree]
                Node1="33,120"      OR
                Node1="Coords=33,120"
                ...
                [AnHTMLImage]
                AMappdedRegion=Coords=10,10
                ANamedRegion=AreaName=TechSupport
                AnIndexedRegion=AreaIndex=2
                AnotherRegion=AreaID=Contact
                </pre><p>  
                The results from the lookup are appended to the "Coords=" string 
                used by the Click command in Robot (only if necessary).  So any 
                valid content used with the Click command can be part of 
                this AppMap entry.</p>
<p>
                Both Fields #3 and #5 are used to locate the item in the App Map.
                This routine does not specify an App Map so only the current Map
                is used and it is expected to be valid.
                </p><p>
                The Rational Robot implementation also supports using literal text in 
                this parameter instead of an AppMapSubKey.  If the value retrieved from 
                this field is NOT found to exist in the App Map as a Sub Key then it 
                will be used as literal text as if it HAD been retrieved from the App Map.
				</p><p>
				Engines should also attempt to support coordinates separated by alternate separators.  
				The most common separators that should be supported would be:
				<ul>
<li>"," (comma) Example: "50,200"</li>
<li>";" (semi-colon) Example: "50;200"</li>
<li>" " (space) Example: "50 200"</li>
</ul>
</p>
<p><b>Important TID note.</b> The <a href="http://safsdev.sourceforge.net/sqabasic2000/SAFSImageBasedRecognition.htm" target="imagebased" alt="SAFS Image-Based Recognition Doc">TID IBT implementation</a> supports using literal text in 
                this parameter instead of an AppMapSubKey.  If the value retrieved from 
                this field is NOT found to exist in the App Map as a Sub Key then it 
                will be used as literal text as if it HAD been retrieved from the App Map.
                </p><p>
                Any coordinates provided for TID IBT are considered relative to the top-left (0,0) of the 
                image or item found unless PointRelative and\or Hotspot information in the IBT recognition 
                string change this initial relative point to be somewhere else.
                </p>
<p><b>Important Abbot note.</b> Presently, there is no support for AppMapSubkey
                specification (5th field).
                </p>
<p>For IOS: Any optional coordinates MUST be specified as an integer number between 
		        0-100.  0 represents the extreme left (or top), while 100 represents the extreme 
		        right (or bottom). IOS does not use absolute coordinates, but relative coordinates 
		        representing a percentage of the element width or height.
		        </p></detailed_desc><BR/>
		</DIV>
		  </LI>
<LI>[ <B>AutoScroll</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                (Optional) True|False. If the component will be scrolled into view automatically before clicking. The default value is true.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                If the component is out of view, the click action will not succeed. Normally we will scroll the component into view,
                and then perform the click action. But sometimes, the component is partially shown and click could work and user does not
                want the component shift, then we could turn off the auto-scroll ability by setting this parameter to false.<br>
                If this auto-scroll is turned off, user needs to make sure that component is shown by himself.
              </detailed_desc><BR/>
		</DIV>
<DIV ID="note_desc"><SPAN CLASS='note'>NOTE:</SPAN><BR/><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN> : <value xmlns="">For now, this optional parameter is only supported in Selenium2.0 Engine. </value><BR/>
</DIV>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">T, WINDOW, COMPONENT, CLICK</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A single click on the center of the object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               A single click on the center of the object.
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, WINDOW, CLICK, AnObject</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A single click will be performed at a x,y coordinate indicated by the AnObject reference in
               the Application Map.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               Field  5 : TQ String. A reference identified in the Application Map identifying coordinates
               on which to click
               This example shows AnObject which will be found in the Application Map as a referenced item
               in the WINDOW section.    
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, AnObject, CLICK, ASubObject</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A single click will be performed at a x,y coordinate indicated by the ASubObject reference in
               the Application Map.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               Field  5 : TQ String. A reference identified in the Application Map identifying coordinates
               on which to click
               This example shows AnObject as a viable object in the WINDOW but that it also has its own
               section in the Application Map which contains one or more named references like
               ASubObject which are used for test.   
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, AnObject, CLICK, 10;20</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A single click will be performed at coordinate 10,20 in the object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               Field  5 : TQ String. The item does not exist in the app map so will be 
               treated as literal text.  Note we allow semi-colon delimited coordinates 
               to support the case when commas are used as field delimiters and cannot be 
               used to delimit the X and Y coordinates.
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, AnObject, CLICK, "Coords=10;20"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A single click will be performed at coordinate 10,20 in the object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               Field  5 : TQ String. The item does not exist in the app map so will be 
               treated as literal text.  Note we allow semi-colon delimited coordinates 
               to support the case when commas are used as field delimiters and cannot be 
               used to delimit the X and Y coordinates.
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, AnObject, CLICK, 10;20, False</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A single click will be performed at coordinate 10,20 in the object. <b>And the object
               will not be scrolled into view automatically before clicking.</b></short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               Field  5 : TQ String. The item does not exist in the app map so will be 
               treated as literal text.  Note we allow semi-colon delimited coordinates 
               to support the case when commas are used as field delimiters and cannot be 
               used to delimit the X and Y coordinates.
              </detailed_desc><BR/>
		</DIV>
<DIV ID="note_desc"><SPAN CLASS='note'>NOTE:</SPAN><BR/><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN> : <value xmlns="">Auto-scroll will be turned off.</value><BR/>
</DIV>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_ClickScreenImage'></A>Android GenericObjectFunctions::<BIG>ClickScreenImage</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Same as Click.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                The keyword is simply provided as a means to differentiate 
                Object-Based Testing from Image-Based Testing in your tests. 
                However, this differentiation is not required.
		<p>
		Note: the TID supports this command using 
		<a href="http://safsdev.sourceforge.net/sqabasic2000/SAFSImageBasedRecognition.htm" target="imagebased" alt="SAFS Image-Based Recognition Doc">Image-Based Testing</a> 
		techniques and App Map entries as well as literal text coordinates.
		</p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="5" ><LI>[ <B>AppMapSubKey</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                (Optional) AppMapSubKey type of use as documented in the CLICK command.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">T, WINDOW, COMPONENT, ClickScreenImage</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A single click on the center of the item.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               A single click on the center of the item.
               Refer to the CLICK command for details.
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, COMPONENT, ClickScreenImage, AppMapLookup</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A single click on a point relative to the item.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               A single click on a point relative to the item.  
               Refer to the CLICK command for details.
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, COMPONENT, ClickScreenImage, "Coords=50;200"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A single click on a point relative to the item.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               A single click on a point relative to the item.  
               Refer to the CLICK command for details.
              </detailed_desc><BR/>
		</DIV>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_ClickScreenLocation'></A>Android GenericObjectFunctions::<BIG>ClickScreenLocation</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Click a specified screen location.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                Click a specified screen location.
                <p>We can click on any screen location based on stored x,y 
                coordinates or hardcoded literal values. The Window:Component fields 
                can be anything at all and will be ignored if they do not exist in the app map, 
                or if the retrieved app map data does not contain coordinate data. 
                Thus, an item or object can be referenced by name even though it is only 
                known via coordinates.
                </p><p>
                If the Window:Component AppMap lookup does NOT contain coordinate data and is ignored, then 
                the AppMapSubKey field is REQUIRED and is expected to contain a reference or literal 
                text containing absolute screen coordinates.
                </p><p>
                If the Window:Component AppMap lookup DOES contain coordinate data, this data is treated as 
                the absolute screen coordinates to be used.  The AppMapSubKey field becomes OPTIONAL and 
                coordinate data in the field is treated as a relative offset added to the absolute values 
                found for the Window:Component.
                </p><p>
                Any AppMapSubKey lookup is done with the Component name in the record AND 
                Field #5.</p>
<p>
                Typical Data Table records:</p>
<p>
                (1) t MainWindow Component ClickScreenLocation<br>
                (2) t MainWindow MainWindow ClickScreenLocation AnObject<br>
                (3) t MainWindow MainWindow ClickScreenLocation 50,80<br>
                (4) t AnyWin AnyComp ClickScreenLocation Node1</p>
<p>
                #1 above will contain a blank as it's 5th field. Because the AppMapSubKey 
                field is blank, the [MainWindow] section of the AppMap MUST have a Component item with valid 
                absolute screen coordinates for the click.</p>
<p>
                #2 above will contain an AnObject="Coords=50,80" entry in the [MainWindow] section 
                of the AppMap. If there is a MainWindow component in the AppMap with valid screen coordinates 
                then the click will occur with a relative offset of 50,80 from those absolute screen 
                coordinates. Otherwise, the click will occur at absolute screen coordinates 50,80.</p>
<p>
                #3 If there is a MainWindow component in the [MainWindow] section of the AppMap with valid screen 
                coordinates then the click will occur with a relative offset of 50,80 from those absolute 
                screen coordinates. Otherwise, the click will occur at absolute screen coordinates 50,80.</p>
<p>
                #4 above will contain no valid AnyWin:AnyComp coordinate data and 
                those fields will be ignored.  However, Node1 MUST exist in the 
                Application Map [AnyComp] section to provide absolute screen coordinates for the click.</p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="5" ><LI>[ <B>AppMapSubkey</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                (Sometimes Optional)Name of the AppMap subkey to locate in the AppMap.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                Without this there MUST be absolute screen coordinates stored in the AppMap 
                for the Window:Component specified.
                <p>
                Name of the AppMap subkey to locate in the App Map.  
                We expect the AppMap to contain the coordinates in the following supported formats:
                </p><p><pre>
                [Component]
                Node1="33,120"        (comma-delimited)      OR
                Node1="33;120"        (semi-colon delimited) OR
                Node1="33 120"        (space-delimited)      OR
                Node1="Coords=33,120" (comma-delimited)      OR
                Node1="Coords=33;120" (semi-colon delimited) OR
                Node1="Coords=33 120" (space-delimited)
                </pre></p><p>
                Both Fields #3 and #5 are used to locate the item in the App Map.
                This routine does not specify an App Map so only the current Map
                is used and it is expected to be valid.</p>
<p>
                This field can instead contain the literal text of any absolute or relative coordinates 
                in the same formats as shown above. </p></detailed_desc><BR/>
		</DIV>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">T, WINDOW, WINDOW, ClickScreenLocation</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               Click at specified screen coordinates for WINDOW.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               Click at screen coordinates specified for the Window item stored in the 
               [Window] section of the current AppMap.
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, AnObject, ClickScreenLocation, "Coords=200,400"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
	       Click at screen coordinates 200,400.
	      </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
	       Click at screen coordinates 200,400.  This assumes AnObject 
	       is NOT an item in the [Window] section of the current AppMap with valid coordinate data.
	      </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, AnObject, ClickScreenLocation, ASubObject</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               Click at screen coordinates stored in the ASubObject reference in the 
               [AnObject] section of the current AppMap.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               ASubObject reference found in the AppMap [AnObject] section must contain the screen coordinates
               on which to click.
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, AnObject, ClickScreenLocation</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
	       Click on the Window:AnObject screen coordinates.
	      </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
	       Because no AppMapSubKey is provided the AnObject item MUST exist in the [WINDOW] section 
	       of the current AppMap and it MUST contain valid screen coordinate data.
	      </detailed_desc><BR/>
		</DIV>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_ClickScreenPoint'></A>Android GenericObjectFunctions::<SPAN ID="deprecated">ClickScreenPoint</SPAN>  (deprecated for: <B>GenericObject ClickScreenLocation</B>)</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                (Deprecated) Click a specified screen location.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                (Deprecated) Click a specified screen location. See <a href="#detail_ClickScreenLocation">ClickScreenLocation</a> 
                for the preferred method to click on screen coordinates.
                <p>
                We can click on any screen location based on literal text x,y 
                coordinates retrieved from Field #5.  Window and Component names and App Map entries are 
                completely ignored.  So the user can put anything in those fields that might help test readability.  
                </p><p>
                It is not recommended to hardcode screen coordinates in the test table in this way.
                </p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="5" ><LI>
<B>Coords</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                The hardcoded X,Y screen coordinates--or the result of an expression--that provides the 
                absolute screen coordinates to click.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                The coordinates must be in the following supported formats:
                <p><pre>
                "33,120"        (comma-delimited)      OR
                "33;120"        (semi-colon delimited) OR
                "33 120"        (space-delimited)
                </pre></p><p>
		Note the "Coords=" prefix is NOT supported for this deprecated command.
		</p></detailed_desc><BR/>
		</DIV>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">T, BogusWin, BogusComp, ClickScreenPoint, 33;120</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               Click at screen coordinates 33,120.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               Click at screen coordinates 33,120
              </detailed_desc><BR/>
		</DIV>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_CtrlClick'></A>Android GenericObjectFunctions::<BIG>CtrlClick</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                A CTRL-click on an object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                By default we should click the center of the object.
                <p>We can also CTRL-click on any part of an object based on a stored x,y
                coordinate.  The object containing the coordinate is first given
                context and then a CTRL-click is generated at the coordinate.  Thus, an item
                or object can be referenced by name even though it is only recognized
                via coordinates.</p>
<p>
                The coordinate lookup is done with the component name of the record AND
                Field #5.</p>
<p>
                Typical Data Table records:</p>
<p>
                (1) t MainWindow MainWindow CtrlClick<br>
                (2) t MainWindow MainWindow CtrlClick AnObject<br>
                (3) t MainWindow  ToolItem  CtrlClick PrintTool</p>
<p>
                #2 above will contain an AnObject="3,10" entry in the MainWindow section
                of the Application Map to CTRL-click at x=3, y=10 in the MainWindow. <b>For SE+</b>, the 
                coordinate can be percentage format, like "20%,30%". This percentage format indicates 
                the point (20% width of component, 30% height of component) relative to the object.</p>
<p>
                #3 above will contain a ToolItem entry in the MainWindow section with
                normal recognition information for it .  ToolItem will also have it's
                own section in the Application Map in which there will be an entry like
                PrintTool="15,30".  This will tell Robot to locate the PrintTool Window
                object and CTRL-click at the coordinates specified by the reference.
				</p><p>
				Engines should also attempt to support coordinates separated by alternate separators.  
				The most common separators that should be supported would be:
				<ul>
<li>"," (comma) Example: "50,200"</li>
<li>";" (semi-colon) Example: "50;200"</li>
<li>" " (space) Example: "50 200"</li>
</ul>
</p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="5" ><LI>[ <B>AppMapSubkey</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                (Optional) Name of the AppMap subkey to lookup and use for the CTRL-click.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                Without this we should click the center of the object.
                <p>Name of the AppMap subkey to lookup and use for the CTRL-click.
                We expect the AppMap to contain the item in the format "x,y":</p>
<p><pre>
                [ToolItem]
                PrintTool="33,120"      OR
                PrintTool="Coords=33,120"
                </pre></p>
<p>
                The results from the lookup are appended to the "Coords=" string
                used by the GenericObject Ctrl_Click command in Robot (if necessary).
                So any valid content used with the Ctrl_Click command can be
                part of this AppMap entry.</p>
<p>
                Both Fields #3 and #5 are used to locate the item in the App Map.
                This routine does not specify an App Map so only the current Map
                is used and it is expected to be valid.
				</p><p>
				Engines should also attempt to support coordinates separated by alternate separators.  
				The most common separators that should be supported would be:
				<ul>
<li>"," (comma) Example: "50,200"</li>
<li>";" (semi-colon) Example: "50;200"</li>
<li>" " (space) Example: "50 200"</li>
</ul>
</p><p><b>Important Abbot note.</b> Presently, there is no support for AppMapSubkey
                specification (5th field).
                </p></detailed_desc><BR/>
		</DIV>
		  </LI>
<LI>[ <B>AutoScroll</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                (Optional) True|False. If the component will be scrolled into view automatically before clicking. The default value is true.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                If the component is out of view, the click action will not succeed. Normally we will scroll the component into view,
                and then perform the click action. But sometimes, the component is partially shown and click could work and user does not
                want the component shift, then we could turn off the auto-scroll ability by setting this parameter to false.<br>
                If this auto-scroll is turned off, user needs to make sure that component is shown by himself.
              </detailed_desc><BR/>
		</DIV>
<DIV ID="note_desc"><SPAN CLASS='note'>NOTE:</SPAN><BR/><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN> : <value xmlns="">For now, this optional parameter is only supported in Selenium2.0 Engine. </value><BR/>
</DIV>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">T, WINDOW, WINDOW, CTRLCLICK</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
               A CTRL-click will be performed on the center of the object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
               A CTRL-click will be performed on the center of the object.
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, WINDOW, CTRLCLICK, , False</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
               A CTRL-click will be performed on the center of the object. <b>And the object
               will not be scrolled into view automatically before clicking.</b></short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<DIV ID="note_desc"><SPAN CLASS='note'>NOTE:</SPAN><BR/><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN> : <value xmlns="">Auto-scroll will be turned off.</value><BR/>
</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, WINDOW, CTRLCLICK, AnObject</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
               A CTRL-click will be performed at a x,y coordinate indicated by the AnObject reference in
               the Application Map.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
               Field  5 : TQ String. A reference identified in the Application Map identifying coordinates
               on which to CTRL-click
               This example shows AnObject which will be found in the Application Map as a referenced item
               in the WINDOW section.
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, AnObject, CTRLCLICK, ASubObject</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
               A CTRL-click will be performed at a x,y coordinate indicated by the ASubObject reference in
               the Application Map.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
               Field  5 : TQ String. A reference identified in the Application Map identifying coordinates
               on which to CTRL-click
               This example shows AnObject as a viable object in the WINDOW but that it also has its own
               section in the Application Map which contains one or more named references like
               ASubObject which are used for test.
              </detailed_desc><BR/>
		</DIV>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_CtrlClickScreenImage'></A>Android GenericObjectFunctions::<BIG>CtrlClickScreenImage</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Same as CtrlClick.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                The keyword is simply provided as a means to differentiate 
                Object-Based Testing from Image-Based Testing in your tests. 
                However, this differentiation is not required.
		<p>
		Note: the TID supports this command using 
		<a href="http://safsdev.sourceforge.net/sqabasic2000/SAFSImageBasedRecognition.htm" target="imagebased" alt="SAFS Image-Based Recognition Doc">Image-Based Testing</a> 
		techniques and App Map entries as well as literal text coordinates.
		</p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="5" ><LI>[ <B>AppMapSubKey</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                (Optional) AppMapSubKey type of use as documented in the CLICK command.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">T, WINDOW, COMPONENT, CtrlClickScreenImage</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A single click on the center of the item.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               A single click on the center of the item with CTRL key pressed.
               Refer to the CTRLCLICK command for details.
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, COMPONENT, CtrlClickScreenImage, AppMapLookup</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A single click on a point relative to the item.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               A single click on a point relative to the item with CTRL key pressed.  
               Refer to the CTRLCLICK command for details.
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, COMPONENT, CtrlClickScreenImage, "Coords=50;200"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A single click on a point relative to the item.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               A single click on a point relative to the item with CTRL key pressed.  
               Refer to the CTRLCLICK command for details.
              </detailed_desc><BR/>
		</DIV>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_CtrlRightClick'></A>Android GenericObjectFunctions::<BIG>CtrlRightClick</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                A CTRL-Right click on an object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                By default we should click the center of the object.
                <p>We can also CTRL-Right-Click on any part of an object based on a stored x,y
                coordinate.  The object containing the coordinate is first given
                context and then a CTRL-Right-Click is generated at the coordinate.  Thus, an item
                or object can be referenced by name even though it is only recognized
                via coordinates.</p>
<p>
                The coordinate lookup is done with the component name of the record AND
                Field #5.</p>
<p>
                Typical Data Table records:</p>
<p>
                (1) t MainWindow MainWindow CtrlRightClick<br>
                (2) t MainWindow MainWindow CtrlRightClick AnObject<br>
                (3) t MainWindow  ToolItem  CtrlRightClick PrintTool</p>
<p>
                #2 above will contain an AnObject="3,10" entry in the MainWindow section
                of the Application Map to CTRL-click at x=3, y=10 in the MainWindow. <b>For SE+</b>, the 
                coordinate can be percentage format, like "20%,30%". This percentage format indicates 
                the point (20% width of component, 30% height of component) relative to the object.</p>
<p>
                #3 above will contain a ToolItem entry in the MainWindow section with
                normal recognition information for it .  ToolItem will also have it's
                own section in the Application Map in which there will be an entry like
                PrintTool="15,30".  This will tell Robot to locate the PrintTool Window
                object and CTRL-Right-Click at the coordinates specified by the reference.</p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="5" ><LI>[ <B>AppMapSubkey</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                (Optional) Name of the AppMap subkey to lookup and use for the CTRL-Right-Click.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                Without this we should click the center of the object.
                <p>Name of the AppMap subkey to lookup and use for the CTRL-Right-Click.
                We expect the AppMap to contain the item in the format "x,y":</p>
<p><pre>
                [ToolItem]
                PrintTool="33,120"      OR
                PrintTool="Coords=33,120"
                </pre></p>
<p>
                The results from the lookup are appended to the "Coords=" string
                used by the GenericObject CTRL-Right-Click command in Robot (if necessary).
                So any valid content used with the CTRL-Right-Click command can be
                part of this AppMap entry.</p>
<p>
                Both Fields #3 and #5 are used to locate the item in the App Map.
                This routine does not specify an App Map so only the current Map
                is used and it is expected to be valid.</p></detailed_desc><BR/>
		</DIV>
		  </LI>
<LI>[ <B>AutoScroll</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                (Optional) True|False. If the component will be scrolled into view automatically before clicking. The default value is true.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                If the component is out of view, the click action will not succeed. Normally we will scroll the component into view,
                and then perform the click action. But sometimes, the component is partially shown and click could work and user does not
                want the component shift, then we could turn off the auto-scroll ability by setting this parameter to false.<br>
                If this auto-scroll is turned off, user needs to make sure that component is shown by himself.
              </detailed_desc><BR/>
		</DIV>
<DIV ID="note_desc"><SPAN CLASS='note'>NOTE:</SPAN><BR/><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN> : <value xmlns="">For now, this optional parameter is only supported in Selenium2.0 Engine. </value><BR/>
</DIV>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">T, WINDOW, WINDOW, CtrlRightClick</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
               A CTRL-Right-Click will be performed on the center of the object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
               A CTRL-Right-Click will be performed on the center of the object.
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, WINDOW, CtrlRightClick, , False</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
               A CTRL-Right-Click will be performed on the center of the object. <b>And the object
               will not be scrolled into view automatically before clicking.</b></short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<DIV ID="note_desc"><SPAN CLASS='note'>NOTE:</SPAN><BR/><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN> : <value xmlns="">Auto-scroll will be turned off.</value><BR/>
</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, WINDOW, CtrlRightClick, AnObject</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
               A CTRL-Right-Click will be performed at a x,y coordinate indicated by the AnObject reference in
               the Application Map.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
               Field  5 : TQ String. A reference identified in the Application Map identifying coordinates
               on which to CTRL-Right-Click.
               This example shows AnObject which will be found in the Application Map as a referenced item
               in the WINDOW section.
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, AnObject, CtrlRightClick, ASubObject</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
               A CTRL-Right-Click will be performed at a x,y coordinate indicated by the ASubObject reference in
               the Application Map.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
               Field  5 : TQ String. A reference identified in the Application Map identifying coordinates
               on which to CTRL-Right-Click
               This example shows AnObject as a viable object in the WINDOW but that it also has its own
               section in the Application Map which contains one or more named references like
               ASubObject which are used for test.
              </detailed_desc><BR/>
		</DIV>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_CtrlRightClickScreenImage'></A>Android GenericObjectFunctions::<BIG>CtrlRightClickScreenImage</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Same as CtrlRightClick.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                The keyword is simply provided as a means to differentiate 
                Object-Based Testing from Image-Based Testing in your tests. 
                However, this differentiation is not required.
		<p>
		Note: the TID supports this command using 
		<a href="http://safsdev.sourceforge.net/sqabasic2000/SAFSImageBasedRecognition.htm" target="imagebased" alt="SAFS Image-Based Recognition Doc">Image-Based Testing</a> 
		techniques and App Map entries as well as literal text coordinates.
		</p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="5" ><LI>[ <B>AppMapSubKey</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                (Optional) AppMapSubKey type of use as documented in the CLICK command.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">T, WINDOW, COMPONENT, CtrlRightClickScreenImage</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A single right-click on the center of the item.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               A single right-click on the center of the item with CTRL key pressed.
               Refer to the CtrlRightClick command for details.
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, COMPONENT, CtrlRightClickScreenImage, AppMapLookup</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A single right-click on a point relative to the item.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               A single right-click on a point relative to the item with CTRL key pressed.  
               Refer to the CtrlRightClick command for details.
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, COMPONENT, CtrlRightClickScreenImage, "Coords=50;200"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A single right-click on a point relative to the item.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               A single right-click on a point relative to the item with CTRL key pressed.  
               Refer to the CtrlRightClick command for details.
              </detailed_desc><BR/>
		</DIV>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_DoubleClick'></A>Android GenericObjectFunctions::<BIG>DoubleClick</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                A double click on an object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                By default we should click the center of the object.
                <p>We can also double click on any part of an object based on a stored 
                x,y coordinate.  The object containing the coordinate is first given 
                context and then a double click is generated at the coordinate.  Thus, 
                an item or object can be referenced by name even though it is only 
                recognized via coordinates.</p>
<p>
                The coordinate lookup is done with the component name of the record AND 
                Field #5.</p>
<p>
                Typical Data Table records:</p>
<p>
                (1) t MainWindow MainWindow DoubleClick<br>
                (2) t MainWindow MainWindow DoubleClick AnObject<br>
                (3) t MainWindow FolderTree DoubleClick Node1</p>
<p>
                #2 above will contain an AnObject="3,10" entry in the MainWindow section 
                of the Application Map to double click at x=3, y=10 in the MainWindow. <b>For SE+</b>, the coordinate 
                can be percentage format, like "20%,30%". This percentage format indicates 
                the point (20% width of component, 30% height of component) relative to the object.</p>
<p>
                #3 above will contain a FolderTree entry in the MainWindow section with 
                normal recognition information for it .  FolderTree will also have it's
                own section in the Application Map in which there will be an entry like 
                Node1="15,30".  This will tell Robot to locate the FolderTree 
                object and double click at the coordinates specified by the reference.
  		        </p><p>
		        Engines should also attempt to support coordinates separated by alternate separators.  
		        The most common separators that should be supported would be:
		        <ul>
<li>"," (comma) Example: "50,200"</li>
<li>";" (semi-colon) Example: "50;200"</li>
<li>" " (space) Example: "50 200"</li>
</ul>
</p><p>
		        Note: the TID supports this command using 
		        <a href="http://safsdev.sourceforge.net/sqabasic2000/SAFSImageBasedRecognition.htm" target="imagebased" alt="SAFS Image-Based Recognition Doc">Image-Based Testing</a> 
		        techniques and App Map entries as well as literal text coordinates.
		        </p>
<p>For IOS: Any optional coordinates MUST be specified as an integer number between 
		        0-100.  0 represents the extreme left (or top), while 100 represents the extreme 
		        right (or bottom). IOS does not use absolute coordinates, but relative coordinates 
		        representing a percentage of the element width or height.
		        </p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="5" ><LI>[ <B>AppMapSubkey</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                (Optional) Name of the AppMap subkey to lookup or the literal text to use for the double click.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                Without this we should click the center of the object.
                <p>Name of the AppMap subkey to lookup and use for the double click.
                We expect the AppMap or literal text to contain the item in the format "x,y":</p>
<p><pre>
                [FolderTree]
                Node1="33,120"      OR
                Node1="Coords=33,120"
                </pre></p>
<p>
                The results from the lookup are appended to the "Coords=" string 
                used by the GenericObject DBLClick command in Robot (if necessary).  
                So any valid content used with the DBLClick command can be 
                part of this AppMap entry.</p>
<p>
                Both Fields #3 and #5 are used to locate the item in the App Map.
                This routine does not specify an App Map so only the current Map
                is used and it is expected to be valid.</p>
<p><b>Important Abbot note.</b> Presently, there is no support for AppMapSubkey
                specification (5th field).
				</p><p>
				Engines should also attempt to support coordinates separated by alternate separators.  
				The most common separators that should be supported would be:
				<ul>
<li>"," (comma) Example: "50,200"</li>
<li>";" (semi-colon) Example: "50;200"</li>
<li>" " (space) Example: "50 200"</li>
</ul>
</p>
<p><b>Important TID note.</b> The <a href="http://safsdev.sourceforge.net/sqabasic2000/SAFSImageBasedRecognition.htm" target="imagebased" alt="SAFS Image-Based Recognition Doc">TID IBT implementation</a> supports using literal text in 
                this parameter instead of an AppMapSubKey.  If the value retrieved from 
                this field is NOT found to exist in the App Map as a Sub Key then it 
                will be used as literal text as if it HAD been retrieved from the App Map.
                </p><p>
                Any coordinates provided for TID IBT are considered relative to the top-left (0,0) of the 
                image or item found unless PointRelative and\or Hotspot information in the IBT recognition 
                string change this initial relative point to be somewhere else.
                </p>
<p>For IOS: Any optional coordinates MUST be specified as an integer number between 
		        0-100.  0 represents the extreme left (or top), while 100 represents the extreme 
		        right (or bottom). IOS does not use absolute coordinates, but relative coordinates 
		        representing a percentage of the element width or height.
		        </p></detailed_desc><BR/>
		</DIV>
		  </LI>
<LI>[ <B>AutoScroll</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                (Optional) True|False. If the component will be scrolled into view automatically before clicking. The default value is true.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                If the component is out of view, the click action will not succeed. Normally we will scroll the component into view,
                and then perform the click action. But sometimes, the component is partially shown and click could work and user does not
                want the component shift, then we could turn off the auto-scroll ability by setting this parameter to false.<br>
                If this auto-scroll is turned off, user needs to make sure that component is shown by himself.
              </detailed_desc><BR/>
		</DIV>
<DIV ID="note_desc"><SPAN CLASS='note'>NOTE:</SPAN><BR/><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN> : <value xmlns="">For now, this optional parameter is only supported in Selenium2.0 Engine. </value><BR/>
</DIV>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">T, WINDOW, COMPONENT, DOUBLECLICK</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A double click should be performed on the center of the object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               A double click should be performed on the center of the object.
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, COMPONENT, DOUBLECLICK, , False</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A double click should be performed on the center of the object. <b>And the object
               will not be scrolled into view automatically before clicking.</b></short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<DIV ID="note_desc"><SPAN CLASS='note'>NOTE:</SPAN><BR/><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN> : <value xmlns="">Auto-scroll will be turned off.</value><BR/>
</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, WINDOW, DOUBLECLICK, AnObject</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A double click will be performed at a x,y coordinate indicated by the AnObject reference in
               the Application Map.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               Field  5 : TQ String. A reference identified in the Application Map identifying coordinates
               on which to double-click
               This example shows AnObject which will be found in the Application Map as a referenced item
               in the WINDOW section.    
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, AnObject, DOUBLECLICK, ASubObject</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A double click will be performed at a x,y coordinate indicated by the ASubObject reference in
               the Application Map.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               Field  5 : TQ String. A reference identified in the Application Map identifying coordinates
               on which to double-click
               This example shows AnObject as a viable object in the WINDOW but that it also has its own
               section in the Application Map which contains one or more named references like
               ASubObject which are used for test.   
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, AnObject, DOUBLECLICK, "Coords=10;20"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A double click will be performed at coordinate 10,20 in the object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               Field  5 : TQ String. The item does not exist in the app map so will be 
               treated as literal text.  Note we allow semi-colon delimited coordinates 
               to support the case when commas are used as field delimiters and cannot be 
               used to delimit the X and Y coordinates.
              </detailed_desc><BR/>
		</DIV>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_DoubleClickScreenImage'></A>Android GenericObjectFunctions::<BIG>DoubleClickScreenImage</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Same as DoubleClick.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                The keyword is simply provided as a means to differentiate 
                Object-Based Testing from Image-Based Testing in your tests. 
                However, this differentiation is not required.
		<p>
		Note: the TID supports this command using 
		<a href="http://safsdev.sourceforge.net/sqabasic2000/SAFSImageBasedRecognition.htm" target="imagebased" alt="SAFS Image-Based Recognition Doc">Image-Based Testing</a> 
		techniques and App Map entries as well as literal text coordinates.
		</p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="5" ><LI>[ <B>AppMapSubKey</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                (Optional) AppMapSubKey as documented in the CLICK command.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">T, WINDOW, COMPONENT, DoubleClickScreenImage</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A double-click on the point as documented in the CLICK command.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               A double-click on the point as documented in the CLICK command.
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, COMPONENT, DoubleClickScreenImage, AppMapItem</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A double-click on the point as documented in the CLICK command.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               A double-click on the point as documented in the CLICK command.
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, COMPONENT, DoubleClickScreenImage, "50;100"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A double-click on the point as documented in the CLICK command.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               A double-click on the point as documented in the CLICK command.
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, COMPONENT, DoubleClickScreenImage, "Coords=50;100"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A double-click on the point as documented in the CLICK command.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               A double-click on the point as documented in the CLICK command.
              </detailed_desc><BR/>
		</DIV>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_DoubleClickScreenLocation'></A>Android GenericObjectFunctions::<BIG>DoubleClickScreenLocation</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                DoubleClick a specified screen location.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                DoubleClick a specified screen location.
                <p>We can click on any screen location based on stored x,y 
                coordinates or hardcoded literal values. The Window:Component fields 
                can be anything at all and will be ignored if they do not exist in the app map, 
                or if the retrieved app map data does not contain coordinate data. 
                Thus, an item or object can be referenced by name even though it is only 
                known via coordinates.
                </p><p>
                If the Window:Component AppMap lookup does NOT contain coordinate data and is ignored, then 
                the AppMapSubKey field is REQUIRED and is expected to contain a reference or literal 
                text containing absolute screen coordinates.
                </p><p>
                If the Window:Component AppMap lookup DOES contain coordinate data, this data is treated as 
                the absolute screen coordinates to be used.  The AppMapSubKey field becomes OPTIONAL and 
                coordinate data in the field is treated as a relative offset added to the absolute values 
                found for the Window:Component.
                </p><p>
                Any AppMapSubKey lookup is done with the Component name in the record AND 
                Field #5.</p>
<p>
                Typical Data Table records:</p>
<p>
                (1) t MainWindow Component DoubleClickScreenLocation<br>
                (2) t MainWindow MainWindow DoubleClickScreenLocation AnObject<br>
                (3) t MainWindow MainWindow DoubleClickScreenLocation 50,80<br>
                (4) t AnyWin AnyComp DoubleClickScreenLocation Node1</p>
<p>
                #1 above will contain a blank as it's 5th field. Because the AppMapSubKey 
                field is blank, the [MainWindow] section of the AppMap MUST have a Component item with valid 
                absolute screen coordinates for the click.</p>
<p>
                #2 above will contain an AnObject="Coords=50,80" entry in the [MainWindow] section 
                of the AppMap. If there is a MainWindow component in the AppMap with valid screen coordinates 
                then the click will occur with a relative offset of 50,80 from those absolute screen 
                coordinates. Otherwise, the click will occur at absolute screen coordinates 50,80.</p>
<p>
                #3 If there is a MainWindow component in the [MainWindow] section of the AppMap with valid screen 
                coordinates then the click will occur with a relative offset of 50,80 from those absolute 
                screen coordinates. Otherwise, the click will occur at absolute screen coordinates 50,80.</p>
<p>
                #4 above will contain no valid AnyWin:AnyComp coordinate data and 
                those fields will be ignored.  However, Node1 MUST exist in the 
                Application Map [AnyComp] section to provide absolute screen coordinates for the click.</p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="5" ><LI>[ <B>AppMapSubkey</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                (Sometimes Optional)Name of the AppMap subkey to locate in the AppMap.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                Without this there MUST be absolute screen coordinates stored in the AppMap 
                for the Window:Component specified.
                <p>
                Name of the AppMap subkey to locate in the App Map.  
                We expect the AppMap to contain the coordinates in the following supported formats:
                </p><p><pre>
                [Component]
                Node1="33,120"        (comma-delimited)      OR
                Node1="33;120"        (semi-colon delimited) OR
                Node1="33 120"        (space-delimited)      OR
                Node1="Coords=33,120" (comma-delimited)      OR
                Node1="Coords=33;120" (semi-colon delimited) OR
                Node1="Coords=33 120" (space-delimited)
                </pre></p><p>
                Both Fields #3 and #5 are used to locate the item in the App Map.
                This routine does not specify an App Map so only the current Map
                is used and it is expected to be valid.</p>
<p>
                This field can instead contain the literal text of any absolute or relative coordinates 
                in the same formats as shown above. </p></detailed_desc><BR/>
		</DIV>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">T, WINDOW, WINDOW, DoubleClickScreenLocation</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               DoubleClick at specified screen coordinates for WINDOW.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               DoubleClick at screen coordinates specified for the Window item stored in the 
               [Window] section of the current AppMap.
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, AnObject, DoubleClickScreenLocation, "Coords=200,400"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
	       DoubleClick at screen coordinates 200,400.
	      </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
	       DoubleClick at screen coordinates 200,400.  This assumes AnObject 
	       is NOT an item in the [Window] section of the current AppMap with valid coordinate data.
	      </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, AnObject, DoubleClickScreenLocation, ASubObject</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               DoubleClick at screen coordinates stored in the ASubObject reference in the 
               [AnObject] section of the current AppMap.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               ASubObject reference found in the AppMap [AnObject] section must contain the screen coordinates
               on which to click.
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, AnObject, DoubleClickScreenLocation</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
	       DoubleClick on the Window:AnObject screen coordinates.
	      </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
	       Because no AppMapSubKey is provided the AnObject item MUST exist in the [WINDOW] section 
	       of the current AppMap and it MUST contain valid screen coordinate data.
	      </detailed_desc><BR/>
		</DIV>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_DoubleClickScreenPoint'></A>Android GenericObjectFunctions::<SPAN ID="deprecated">DoubleClickScreenPoint</SPAN>  (deprecated for: <B>GenericObject DoubleClickScreenLocation</B>)</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                (Deprecated) DoubleClick a specified screen location.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                (Deprecated) DoubleClick a specified screen location. See <a href="#detail_DoubleClickScreenLocation">DoubleClickScreenLocation</a> 
                for the preferred method to click on screen coordinates.
                <p>
                We can click on any screen location based on literal text x,y 
                coordinates retrieved from Field #5.  Window and Component names and App Map entries are 
                completely ignored.  So the user can put anything in those fields that might help test readability.  
                </p><p>
                It is not recommended to hardcode screen coordinates in the test table in this way.
                </p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="5" ><LI>
<B>Coords</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                The hardcoded X,Y screen coordinates--or the result of an expression--that provides the 
                absolute screen coordinates to click.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                The coordinates must be in the following supported formats:
                <p><pre>
                "33,120"        (comma-delimited)      OR
                "33;120"        (semi-colon delimited) OR
                "33 120"        (space-delimited)
                </pre></p><p>
		Note the "Coords=" prefix is NOT supported for this deprecated command.
		</p></detailed_desc><BR/>
		</DIV>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">T, BogusWin, BogusComp, DoubleClickScreenPoint, 33;120</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               DoubleClick at screen coordinates 33,120.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               DoubleClick at screen coordinates 33,120
              </detailed_desc><BR/>
		</DIV>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_LeftDrag'></A>Android GenericObjectFunctions::<BIG>LeftDrag</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                A left mouse drag is performed on the object based on the stored coordinates.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""><p>For components that are unrecognized, we can make a mouse drag in these 
                to draw fields(rectangles) or do drag and drop, based on stored x,y start 
                and end coordinates. The object containing the starting coordinates is first 
                given context and then a left mouse drag is performed with the stored coordinates.</p>
<p> 
                The coordinate lookup is done with the component name(Field #3) of the record AND 
                Field #5.</p>
<p>
                Typical Data Table records:</p>
<p>
                (1) t MainWindow GenericItem LeftDrag DragName</p>
<p>
                #1 above will contain a GenericItem entry in the MainWindow section with 
                normal recognition information for it .  GenericItem will also have it's
                own section in the Application Map in which there will be an entry like:</p>
<p><pre>
                DragName="15,30,60,90"    OR
                DragName="Coords=15,30,60,90"
                </pre></p>
<p>
                This will tell Robot to locate the GenericItem Window object and left drag 
                from coordinates 15,30 to 60,90.</p>
<p>
		Note: the TID supports this command using 
		<a href="http://safsdev.sourceforge.net/sqabasic2000/SAFSImageBasedRecognition.htm" target="imagebased" alt="SAFS Image-Based Recognition Doc">Image-Based Testing</a> 
		techniques and App Map entries as well as literal text coordinates.
		</p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="5" ><LI>
<B>AppMapSubkey</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Name of the AppMap subkey to lookup or literal text to use for the left mouse drag.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""><p>Name of the AppMap subkey to lookup and use for the left drag.
                We expect the AppMap or literal text to contain the item in the format "x1,y1,x2,y2":</p>
<p><pre>
                [GenericItem]
                DragName="3,10,12,20"     OR
                DragName="Coords=3,10,12,20"
                </pre></p>
<p>
                The results from the lookup are appended to the "Coords=" string 
                used by the GenericObject Left_Drag command in Robot (if necessary).  
                So any valid content used with the Left_Drag command can be 
                part of this AppMap entry.</p>
<p>
                Both Fields #3 and #5 are used to locate the item in the App Map.
                This routine does not specify an App Map so only the current Map
                is used and it is expected to be valid.</p>
<p><b>Important TID note.</b> The <a href="http://safsdev.sourceforge.net/sqabasic2000/SAFSImageBasedRecognition.htm" target="imagebased" alt="SAFS Image-Based Recognition Doc">TID IBT implementation</a> supports using literal text in 
                this parameter instead of an AppMapSubKey.  If the value retrieved from 
                this field is NOT found to exist in the App Map as a Sub Key then it 
                will be used as literal text as if it HAD been retrieved from the App Map.
                </p><p>
                Any coordinates provided for TID IBT are considered relative to the top-left (0,0) of the 
                image or item found unless PointRelative and\or Hotspot information in the IBT recognition 
                string change this initial relative point to be somewhere else.
                </p></detailed_desc><BR/>
		</DIV>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">T, WINDOW, WINDOW, LEFTDRAG, AnObject</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A left mouse drag will be performed based on coordinates indicated by the AnObject reference in
               the Application Map.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               Field  5 : TQ String. A reference identified in the Application Map identifying coordinates
               on which to drag.
               This example shows AnObject which will be found in the Application Map as a referenced item
               in the WINDOW section.    
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, AnObject, LEFTDRAG, ASubObject</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A left mouse drag will be performed based on coordinates indicated by the ASubObject reference
               in the Application Map.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               Field  5 : TQ String. A reference identified in the Application Map identifying coordinates
               on which to drag.
               This example shows AnObject as a viable object in the WINDOW but that it also has its own
               section in the Application Map which contains one or more named references like
               ASubObject which are used for test.   
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, AnObject, LEFTDRAG, "Coords=10;20;200;300"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A left drag will be performed from point 10,20 to 200,300 relative to AnObject.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               Field  5 : TQ String. The item does not exist in the app map so will be 
               treated as literal text.  Note we allow semi-colon delimited coordinates 
               to support the case when commas are used as field delimiters and cannot be 
               used to delimit the X and Y coordinates.
              </detailed_desc><BR/>
		</DIV>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_MultiClick'></A>Android GenericObjectFunctions::<BIG>MultiClick</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Multiple clicks on an object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""><p>
                By default, clicks on the center of the component 3 times.<br>
                Use the optional ClickCount parameter to specify the desired number of clicks.<br>
                We can also click on any part of an object, or any point relative to an object 
                based on a provided x,y coordinate or other component-specific parameters.  
                </p><p>
                The object to be clicked is first given context and then the clicks are 
                generated at the coordinates.  Thus, a subitem or object can be 
                referenced by name even though it is only recognized via coordinates.
                </p><p>
                The optional coordinate lookup is done with the component name of the record AND 
                Field #5 or by providing the literal text of the coordinates, where supported.</p>
<p>
                Typical Data Table records with relative references:</p>
<p>
                (1) t MainWindow MainWindow  MultiClick <br>
                (2) t MainWindow MainWindow  MultiClick AnObject<br>
                (3) t MainWindow FolderTree  MultiClick Node1  "4"<br>
                (4) t MainWindow MainWindow  MultiClick "50,200" "3"<br>
                (5) t MainWindow MainWindow  MultiClick "Coords=50,200" "2"</p>
<p>
                #1 above should click 3 times (default) at the center (default) of the MainWindow.
                </p><p>
                #2 above will contain an AnObject="3,10" entry in the MainWindow section 
                of the Application Map to click 3 times (default) at x=3, y=10 in the MainWindow.
                </p><p>
                #3 above will contain a FolderTree entry in the MainWindow section with 
                normal recognition information for it.  FolderTree will also have it's
                own section in the Application Map in which there will be an entry like 
                Node1="15,30".  This will tell the runtime to locate the FolderTree Generic 
                object and click 3 times (default) at the coordinates specified by the reference.
                </p><p>
                #4 and #5 above show using literal text instead of an App Map entry to specify 
                where to click relative to the item.  The item will be clicked 3 times and 2 times, 
                respectively
                </p><p>
		Note: the TID supports this command using 
		<a href="http://safsdev.sourceforge.net/sqabasic2000/SAFSImageBasedRecognition.htm" target="imagebased" alt="SAFS Image-Based Recognition Doc">Image-Based Testing</a> 
		techniques and App Map entries as well as literal text coordinates.
		</p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="5" ><LI>[ <B>AppMapSubkey</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                (Optional)Name of the AppMap subkey to lookup or the literal text to use for the clicks.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                Without this we should click on the center of the object.
                <p>Name of the AppMap subkey to lookup and use for the click.
                We expect the AppMap or literal text to contain the item in the format "x,y":</p>
<pre>
                [FolderTree]
                Node1="33,120"      OR
                Node1="Coords=33,120"
                ...
                [AnHTMLImage]
                AMappdedRegion=Coords=10,10
                ANamedRegion=AreaName=TechSupport
                AnIndexedRegion=AreaIndex=2
                AnotherRegion=AreaID=Contact
                </pre><p>  
                The results from the lookup are appended to the "Coords=" string 
                used by the Click command in Robot (only if necessary).  So any 
                valid content used with the Click command can be part of 
                this AppMap entry.</p>
<p>
                Both Fields #3 and #5 are used to locate the item in the App Map.
                This routine does not specify an App Map so only the current Map
                is used and it is expected to be valid.
                </p>
<p><b>Important TID note.</b> The <a href="http://safsdev.sourceforge.net/sqabasic2000/SAFSImageBasedRecognition.htm" target="imagebased" alt="SAFS Image-Based Recognition Doc">TID IBT implementation</a> supports using literal text in 
                this parameter instead of an AppMapSubKey.  If the value retrieved from 
                this field is NOT found to exist in the App Map as a Sub Key then it 
                will be used as literal text as if it HAD been retrieved from the App Map.
                </p><p>
                Any coordinates provided for TID IBT are considered relative to the top-left (0,0) of the 
                image or item found unless PointRelative and\or Hotspot information in the IBT recognition 
                string change this initial relative point to be somewhere else.
                </p></detailed_desc><BR/>
		</DIV>
		  </LI>
<LI>[ <B>ClickCount</B> = 3 ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 Optional number of times (1 to N) to click the item.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 Optional number of times (1 to N) to click the item.  The default if no value is provided is 3.  
              </detailed_desc><BR/>
		</DIV>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">T, WINDOW, COMPONENT, MULTICLICK</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               Click 3 times (default) on the center of the object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               Click 3 times (default) on the center of the object.
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, COMPONENT, MULTICLICK, "", "4"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               Click 4 times on the center of the object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               Click 4 times on the center of the object.  
               No AppMapSubKey or Literal Text is given to alter the relative coordinates for the click.
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, WINDOW, MULTICLICK, AnObject</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               Click 3 times (default) at relative x,y coordinates stored in "AnObject" in the App Map.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               Field  5 : TQ String. An item in the App Map holding relative coordinates to click.<br>
               This example shows "AnObject" which will be found in the App Map in the "WINDOW" section.    
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, COMPONENT, MULTICLICK, ASubObject</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               Click 3 times (default) at relative x,y coordinates stored in "ASubObject" in the App Map.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               Field  5 : TQ String. An item in the App Map holding relative coordinates to click.<br>
               This example shows "ASubObject" which will be found in the App Map in the "COMPONENT" section.    
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, COMPONENT, MULTICLICK, 10;20</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               Click 3 times (default) at coordinate 10,20 in the object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               Field  5 : TQ String. The item does not exist in the app map so will be 
               treated as literal text.  Note we allow semi-colon delimited coordinates 
               to support the case when commas are used as field delimiters and cannot be 
               used to delimit the X and Y coordinates.
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, AnObject, MULTICLICK, "Coords=10;20", "4"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               4 clicks at coordinate 10,20 in the object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               Field  5 : TQ String. The item does not exist in the app map so will be 
               treated as literal text.  Note we allow semi-colon delimited coordinates 
               to support the case when commas are used as field delimiters and cannot be 
               used to delimit the X and Y coordinates.
              </detailed_desc><BR/>
		</DIV>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_MultiClickScreenImage'></A>Android GenericObjectFunctions::<BIG>MultiClickScreenImage</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Same as <a href="#detail_MultiClick" alt="Goto MultiClick">MULTICLICK</a>.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                The keyword is simply provided as a means to differentiate 
                Object-Based Testing from Image-Based Testing in your tests. 
                However, this differentiation is not required.
		<p>
		Note: the TID supports this command using 
		<a href="http://safsdev.sourceforge.net/sqabasic2000/SAFSImageBasedRecognition.htm" target="imagebased" alt="SAFS Image-Based Recognition Doc">Image-Based Testing</a> 
		techniques and App Map entries as well as literal text coordinates.
		</p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="5" ><LI>[ <B>AppMapSubkey</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                (Optional)Name of the AppMap subkey to lookup or the literal text to use for the clicks.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                Same as <a href="#detail_MultiClick" alt="Goto MultiClick">MULTICLICK</a>.<br>
                The keyword is simply provided as a means to differentiate 
                Object-Based Testing from Image-Based Testing in your tests. 
                However, this differentiation is not required.
		<p>
		Note: the TID supports this command using 
		<a href="http://safsdev.sourceforge.net/sqabasic2000/SAFSImageBasedRecognition.htm" target="imagebased" alt="SAFS Image-Based Recognition Doc">Image-Based Testing</a> 
		techniques and App Map entries as well as literal text coordinates.
		</p></detailed_desc><BR/>
		</DIV>
		  </LI>
<LI>[ <B>ClickCount</B> = 3 ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 Optional number of times (1 to N) to click the item.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 Optional number of times (1 to N) to click the item.  The default if no value is provided is 3.  
              </detailed_desc><BR/>
		</DIV>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">T, WINDOW, COMPONENT, MULTICLICKSCREENIMAGE</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               Click 3 times (default) on the center of the object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               Click 3 times (default) on the center of the object.
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, COMPONENT, MULTICLICKSCREENIMAGE, "", "4"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               Click 4 times on the center of the object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               Click 4 times on the center of the object.  
               No AppMapSubKey or Literal Text is given to alter the relative coordinates for the click.
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, WINDOW, MULTICLICKSCREENIMAGE, AnObject</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               Click 3 times (default) at relative x,y coordinates stored in "AnObject" in the App Map.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               Field  5 : TQ String. An item in the App Map holding relative coordinates to click.<br>
               This example shows "AnObject" which will be found in the App Map in the "WINDOW" section.    
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, COMPONENT, MULTICLICKSCREENIMAGE, ASubObject</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               Click 3 times (default) at relative x,y coordinates stored in "ASubObject" in the App Map.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               Field  5 : TQ String. An item in the App Map holding relative coordinates to click.<br>
               This example shows "ASubObject" which will be found in the App Map in the "COMPONENT" section.    
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, COMPONENT, MULTICLICKSCREENIMAGE, 10;20</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               Click 3 times (default) at coordinate 10,20 in the object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               Field  5 : TQ String. The item does not exist in the app map so will be 
               treated as literal text.  Note we allow semi-colon delimited coordinates 
               to support the case when commas are used as field delimiters and cannot be 
               used to delimit the X and Y coordinates.
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, AnObject, MULTICLICKSCREENIMAGE, "Coords=10;20", "4"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               4 clicks at coordinate 10,20 in the object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               Field  5 : TQ String. The item does not exist in the app map so will be 
               treated as literal text.  Note we allow semi-colon delimited coordinates 
               to support the case when commas are used as field delimiters and cannot be 
               used to delimit the X and Y coordinates.
              </detailed_desc><BR/>
		</DIV>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_Press'></A>Android GenericObjectFunctions::<BIG>Press</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Android'>DRD</SPAN>:<SPAN CLASS='domainMarker' TITLE='DEV Domain'>DEV</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Press a touchscreen object for a number of seconds--0 seconds by default.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="5" ><LI>[ <B>Duration</B> = 0 ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                 Optional number of seconds (0 to N) to press on the object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                 Optional number of seconds (0 to N) to press on the item.  The default if no value is provided is 0.  
              </detailed_desc><BR/>
		</DIV>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">T, WINDOW, COMPONENT, Press</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A press on the object for less than 1 second.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               A press on the object for less than 1 second.
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, COMPONENT, Press, 3</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A press on the object for 3 seconds.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               A press on the object for 3 seconds.
              </detailed_desc><BR/>
		</DIV>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_RightClick'></A>Android GenericObjectFunctions::<BIG>RightClick</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                A right click on an object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
                By default we should click on the center of the object.
                <p>We can also right click on any part of an object based on a stored x,y 
                coordinate.  The object containing the coordinate is first given 
                context and then a right click is generated at the coordinate.  Thus, an item 
                or object can be referenced by name even though it is only recognized
                via coordinates.</p>
<p>
                The coordinate lookup is done with the component name of the record AND 
                Field #5.</p>
<p>
                Typical Data Table records:</p>
<p> 
                (1) t MainWindow MainWindow RightClick <br>
                (2) t MainWindow MainWindow RightClick AnObject<br>
                (3) t MainWindow  ToolItem  RightClick PrintTool</p>
<p>
                #2 above will contain an AnObject="3,10" entry in the MainWindow section 
                of the Application Map to right click at x=3, y=10 in the MainWindow. <b>For SE+</b>, the 
                coordinate can be percentage format, like "20%,30%". This percentage format indicates 
                the point (20% width of component, 30% height of component) relative to the object.</p>
<p>
                #3 above will contain a ToolItem entry in the MainWindow section with 
                normal recognition information for it .  ToolItem will also have it's
                own section in the Application Map in which there will be an entry like 
                PrintTool="15,30".  This will tell Robot to locate the PrintTool Window 
                object and right click at the coordinates specified by the reference.
		</p><p>
		Engines should also attempt to support coordinates separated by alternate separators.  
		The most common separators that should be supported would be:
		<ul>
<li>"," (comma) Example: "50,200"</li>
<li>";" (semi-colon) Example: "50;200"</li>
<li>" " (space) Example: "50 200"</li>
</ul>
</p><p>
		Note: the TID supports this command using 
		<a href="http://safsdev.sourceforge.net/sqabasic2000/SAFSImageBasedRecognition.htm" target="imagebased" alt="SAFS Image-Based Recognition Doc">Image-Based Testing</a> 
		techniques and App Map entries as well as literal text coordinates.
		</p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="5" ><LI>[ <B>AppMapSubkey</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                (Optional) Name of the AppMap subkey to lookup or the literal text to use for the right click.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                Without this we should click on the center of the object.
                <p>Name of the AppMap subkey to lookup and use for the right click.
                We expect the AppMap or literal text to contain the item in the format "x,y":</p>
<p><pre>
                [ToolItem]
                PrintTool="33,120"      OR
                PrintTool="Coords=33,120"
                </pre></p>
<p>
                The results from the lookup are appended to the "Coords=" string 
                used by the GenericObject Right_Click command in Robot (if necessary).  
                So any valid content used with the Right_Click command can be 
                part of this AppMap entry.</p>
<p>
                Both Fields #3 and #5 are used to locate the item in the App Map.
                This routine does not specify an App Map so only the current Map
                is used and it is expected to be valid.
				</p><p>
				Engines should also attempt to support coordinates separated by alternate separators.  
				The most common separators that should be supported would be:
				<ul>
<li>"," (comma) Example: "50,200"</li>
<li>";" (semi-colon) Example: "50;200"</li>
<li>" " (space) Example: "50 200"</li>
</ul>
</p><p><b>Important TID note.</b> The <a href="http://safsdev.sourceforge.net/sqabasic2000/SAFSImageBasedRecognition.htm" target="imagebased" alt="SAFS Image-Based Recognition Doc">TID IBT implementation</a> supports using literal text in 
                this parameter instead of an AppMapSubKey.  If the value retrieved from 
                this field is NOT found to exist in the App Map as a Sub Key then it 
                will be used as literal text as if it HAD been retrieved from the App Map.
                </p><p>
                Any coordinates provided for TID IBT are considered relative to the top-left (0,0) of the 
                image or item found unless PointRelative and\or Hotspot information in the IBT recognition 
                string change this initial relative point to be somewhere else.
                </p>
<p><b>Important Abbot note.</b> Presently, there is no support for AppMapSubkey
                specification (5th field).
                </p></detailed_desc><BR/>
		</DIV>
		  </LI>
<LI>[ <B>AutoScroll</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                (Optional) True|False. If the component will be scrolled into view automatically before clicking. The default value is true.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                If the component is out of view, the click action will not succeed. Normally we will scroll the component into view,
                and then perform the click action. But sometimes, the component is partially shown and click could work and user does not
                want the component shift, then we could turn off the auto-scroll ability by setting this parameter to false.<br>
                If this auto-scroll is turned off, user needs to make sure that component is shown by himself.
              </detailed_desc><BR/>
		</DIV>
<DIV ID="note_desc"><SPAN CLASS='note'>NOTE:</SPAN><BR/><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN> : <value xmlns="">For now, this optional parameter is only supported in Selenium2.0 Engine. </value><BR/>
</DIV>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">T, WINDOW, WINDOW, RIGHTCLICK</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A right click will be performed on the center of the object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               A right click will be performed on the center of the object.
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, WINDOW, RIGHTCLICK, , False</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A right click will be performed on the center of the object. <b>And the object
               will not be scrolled into view automatically before clicking.</b></short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<DIV ID="note_desc"><SPAN CLASS='note'>NOTE:</SPAN><BR/><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN> : <value xmlns="">Auto-scroll will be turned off.</value><BR/>
</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, WINDOW, RIGHTCLICK, AnObject</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A right click will be performed at a x,y coordinate indicated by the AnObject reference in
               the Application Map.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               Field  5 : TQ String. A reference identified in the Application Map identifying coordinates
               on which to right-click
               This example shows AnObject which will be found in the Application Map as a referenced item
               in the WINDOW section.    
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, AnObject, RIGHTCLICK, ASubObject</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A right click will be performed at a x,y coordinate indicated by the ASubObject reference in
               the Application Map.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               Field  5 : TQ String. A reference identified in the Application Map identifying coordinates
               on which to right-click
               This example shows AnObject as a viable object in the WINDOW but that it also has its own
               section in the Application Map which contains one or more named references like
               ASubObject which are used for test.   
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, AnObject, RIGHTCLICK, "Coords=10;20"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A single right click will be performed at coordinate 10,20 in the object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               Field  5 : TQ String. The item does not exist in the app map so will be 
               treated as literal text.  Note we allow semi-colon delimited coordinates 
               to support the case when commas are used as field delimiters and cannot be 
               used to delimit the X and Y coordinates.
              </detailed_desc><BR/>
		</DIV>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_RightClickScreenImage'></A>Android GenericObjectFunctions::<BIG>RightClickScreenImage</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Same as RightClick.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                The keyword is simply provided as a means to differentiate 
                Object-Based Testing from Image-Based Testing in your tests. 
                However, this differentiation is not required.
		<p>
		Note: the TID supports this command using 
		<a href="http://safsdev.sourceforge.net/sqabasic2000/SAFSImageBasedRecognition.htm" target="imagebased" alt="SAFS Image-Based Recognition Doc">Image-Based Testing</a> 
		techniques and App Map entries as well as literal text coordinates.
		</p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="5" ><LI>[ <B>AppMapSubKey</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                (Optional) AppMapSubKey or literal text as documented in the CLICK command.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">T, WINDOW, COMPONENT, RightClickScreenImage</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A right-click as generically documented for the CLICK command.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               A right-click as generically documented for the CLICK command.
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, AnObject, RightClickScreenImage, "Coords=10;20"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A right click as generically documented for the CLICK command.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_RightClickScreenLocation'></A>Android GenericObjectFunctions::<BIG>RightClickScreenLocation</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                RightClick a specified screen location.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                RightClick a specified screen location.
                <p>We can click on any screen location based on stored x,y 
                coordinates or hardcoded literal values. The Window:Component fields 
                can be anything at all and will be ignored if they do not exist in the app map, 
                or if the retrieved app map data does not contain coordinate data. 
                Thus, an item or object can be referenced by name even though it is only 
                known via coordinates.
                </p><p>
                If the Window:Component AppMap lookup does NOT contain coordinate data and is ignored, then 
                the AppMapSubKey field is REQUIRED and is expected to contain a reference or literal 
                text containing absolute screen coordinates.
                </p><p>
                If the Window:Component AppMap lookup DOES contain coordinate data, this data is treated as 
                the absolute screen coordinates to be used.  The AppMapSubKey field becomes OPTIONAL and 
                coordinate data in the field is treated as a relative offset added to the absolute values 
                found for the Window:Component.
                </p><p>
                Any AppMapSubKey lookup is done with the Component name in the record AND 
                Field #5.</p>
<p>
                Typical Data Table records:</p>
<p>
                (1) t MainWindow Component RightClickScreenLocation<br>
                (2) t MainWindow MainWindow RightClickScreenLocation AnObject<br>
                (3) t MainWindow MainWindow RightClickScreenLocation 50,80<br>
                (4) t AnyWin AnyComp RightClickScreenLocation Node1</p>
<p>
                #1 above will contain a blank as it's 5th field. Because the AppMapSubKey 
                field is blank, the [MainWindow] section of the AppMap MUST have a Component item with valid 
                absolute screen coordinates for the click.</p>
<p>
                #2 above will contain an AnObject="Coords=50,80" entry in the [MainWindow] section 
                of the AppMap. If there is a MainWindow component in the AppMap with valid screen coordinates 
                then the click will occur with a relative offset of 50,80 from those absolute screen 
                coordinates. Otherwise, the click will occur at absolute screen coordinates 50,80.</p>
<p>
                #3 If there is a MainWindow component in the [MainWindow] section of the AppMap with valid screen 
                coordinates then the click will occur with a relative offset of 50,80 from those absolute 
                screen coordinates. Otherwise, the click will occur at absolute screen coordinates 50,80.</p>
<p>
                #4 above will contain no valid AnyWin:AnyComp coordinate data and 
                those fields will be ignored.  However, Node1 MUST exist in the 
                Application Map [AnyComp] section to provide absolute screen coordinates for the click.</p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="5" ><LI>[ <B>AppMapSubkey</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                (Sometimes Optional)Name of the AppMap subkey to locate in the AppMap.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                Without this there MUST be absolute screen coordinates stored in the AppMap 
                for the Window:Component specified.
                <p>
                Name of the AppMap subkey to locate in the App Map.  
                We expect the AppMap to contain the coordinates in the following supported formats:
                </p><p><pre>
                [Component]
                Node1="33,120"        (comma-delimited)      OR
                Node1="33;120"        (semi-colon delimited) OR
                Node1="33 120"        (space-delimited)      OR
                Node1="Coords=33,120" (comma-delimited)      OR
                Node1="Coords=33;120" (semi-colon delimited) OR
                Node1="Coords=33 120" (space-delimited)
                </pre></p><p>
                Both Fields #3 and #5 are used to locate the item in the App Map.
                This routine does not specify an App Map so only the current Map
                is used and it is expected to be valid.</p>
<p>
                This field can instead contain the literal text of any absolute or relative coordinates 
                in the same formats as shown above. </p></detailed_desc><BR/>
		</DIV>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">T, WINDOW, WINDOW, RightClickScreenLocation</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               RightClick at specified screen coordinates for WINDOW.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               RightClick at screen coordinates specified for the Window item stored in the 
               [Window] section of the current AppMap.
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, AnObject, RightClickScreenLocation, "Coords=200,400"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
	       RightClick at screen coordinates 200,400.
	      </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
	       RightClick at screen coordinates 200,400.  This assumes AnObject 
	       is NOT an item in the [Window] section of the current AppMap with valid coordinate data.
	      </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, AnObject, RightClickScreenLocation, ASubObject</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               RightClick at screen coordinates stored in the ASubObject reference in the 
               [AnObject] section of the current AppMap.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               ASubObject reference found in the AppMap [AnObject] section must contain the screen coordinates
               on which to click.
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, AnObject, RightClickScreenLocation</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
	       RightClick on the Window:AnObject screen coordinates.
	      </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
	       Because no AppMapSubKey is provided the AnObject item MUST exist in the [WINDOW] section 
	       of the current AppMap and it MUST contain valid screen coordinate data.
	      </detailed_desc><BR/>
		</DIV>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_RightClickScreenPoint'></A>Android GenericObjectFunctions::<SPAN ID="deprecated">RightClickScreenPoint</SPAN>  (deprecated for: <B>GenericObject RightClickScreenLocation</B>)</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                (Deprecated) RightClick a specified screen location.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                (Deprecated) RightClick a specified screen location. See <a href="#detail_RightClickScreenLocation">RightClickScreenLocation</a> 
                for the preferred method to click on screen coordinates.
                <p>
                We can click on any screen location based on literal text x,y 
                coordinates retrieved from Field #5.  Window and Component names and App Map entries are 
                completely ignored.  So the user can put anything in those fields that might help test readability.  
                </p><p>
                It is not recommended to hardcode screen coordinates in the test table in this way.
                </p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="5" ><LI>
<B>Coords</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                The hardcoded X,Y screen coordinates--or the result of an expression--that provides the 
                absolute screen coordinates to click.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                The coordinates must be in the following supported formats:
                <p><pre>
                "33,120"        (comma-delimited)      OR
                "33;120"        (semi-colon delimited) OR
                "33 120"        (space-delimited)
                </pre></p><p>
		Note the "Coords=" prefix is NOT supported for this deprecated command.
		</p></detailed_desc><BR/>
		</DIV>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">T, BogusWin, BogusComp, RightClickScreenPoint, 33;120</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               RightClick at screen coordinates 33,120.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               RightClick at screen coordinates 33,120
              </detailed_desc><BR/>
		</DIV>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_RightDrag'></A>Android GenericObjectFunctions::<BIG>RightDrag</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                A right mouse drag is performed on the object based on the stored coordinates.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""><p>For components that are unrecognized, we can make a mouse drag in these 
                to draw fields(rectangles) or do drag and drop, based on stored x,y start 
                and end coordinates. The object containing the starting coordinates is first 
                given context and then a right mouse drag is performed with the stored coordinates.</p>
<p>
                The coordinate lookup is done with the component name(Field #3) of the record AND 
                Field #5.</p>
<p>
                Typical Data Table records:</p>
<p>
                (1) t MainWindow GenericItem RightDrag DragName</p>
<p>
                #1 above will contain a GenericItem entry in the MainWindow section with 
                normal recognition information for it .  GenericItem will also have it's
                own section in the Application Map in which there will be an entry like:</p>
<p>
                DragName="15,30,60,90"    OR
                DragName="Coords=15,30,60,90"</p>
<p>
                This will tell Robot to locate the GenericItem Window object and right drag 
                from coordinates 15,30 to 60,90.</p>
<p>
		Note: the TID supports this command using 
		<a href="http://safsdev.sourceforge.net/sqabasic2000/SAFSImageBasedRecognition.htm" target="imagebased" alt="SAFS Image-Based Recognition Doc">Image-Based Testing</a> 
		techniques and App Map entries as well as literal text coordinates.
		</p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="5" ><LI>
<B>AppMapSubkey</B>
<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Name of the AppMap subkey to lookup or literal text to use for the right mouse drag.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""><p>Name of the AppMap subkey to lookup and use for the right drag.
                We expect the AppMap or literal text to contain the item in the format "x1,y1,x2,y2":</p>
<p><pre>
                [GenericItem]
                DragName="3,10,12,20"     OR
                DragName="Coords=3,10,12,20"
                </pre></p>
<p>
                The results from the lookup are appended to the "Coords=" string 
                used by the GenericObject Left_Drag command in Robot (if necessary).  
                So any valid content used with the Right_Drag command can be 
                part of this AppMap entry.</p>
<p>
                Both Fields #3 and #5 are used to locate the item in the App Map.
                This routine does not specify an App Map so only the current Map
                is used and it is expected to be valid.</p>
<p><b>Important TID note.</b> The <a href="http://safsdev.sourceforge.net/sqabasic2000/SAFSImageBasedRecognition.htm" target="imagebased" alt="SAFS Image-Based Recognition Doc">TID IBT implementation</a> supports using literal text in 
                this parameter instead of an AppMapSubKey.  If the value retrieved from 
                this field is NOT found to exist in the App Map as a Sub Key then it 
                will be used as literal text as if it HAD been retrieved from the App Map.
                </p><p>
                Any coordinates provided for TID IBT are considered relative to the top-left (0,0) of the 
                image or item found unless PointRelative and\or Hotspot information in the IBT recognition 
                string change this initial relative point to be somewhere else.
                </p></detailed_desc><BR/>
		</DIV>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">T, WINDOW, WINDOW, RIGHTDRAG, AnObject</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A right mouse drag will be performed based on coordinates indicated by the AnObject reference in
               the Application Map.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               Field  5 : TQ String. A reference identified in the Application Map identifying coordinates
               on which to drag.
               This example shows AnObject which will be found in the Application Map as a referenced item
               in the WINDOW section.    
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, AnObject, LEFTDRAG, ASubObject</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A right mouse drag will be performed based on coordinates indicated by the ASubObject reference
               in the Application Map.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               Field  5 : TQ String. A reference identified in the Application Map identifying coordinates
               on which to drag.
               This example shows AnObject as a viable object in the WINDOW but that it also has its own
               section in the Application Map which contains one or more named references like
               ASubObject which are used for test.   
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, AnObject, RIGHTDRAG, "Coords=10;20;200;300"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A right drag will be performed from point 10,20 to 200,300 relative to AnObject.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               Field  5 : TQ String. The item does not exist in the app map so will be 
               treated as literal text.  Note we allow semi-colon delimited coordinates 
               to support the case when commas are used as field delimiters and cannot be 
               used to delimit the X and Y coordinates.
              </detailed_desc><BR/>
		</DIV>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_ShiftClick'></A>Android GenericObjectFunctions::<BIG>ShiftClick</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                A SHIFT click on an object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                By default we should click on the center of the object.
                <p>We can SHIFT click on any part of an object based on a stored x,y
                coordinate.  The object containing the coordinate is first given
                context and then a SHIFT click is generated at the coordinate.  Thus, an item
                or object can be referenced by name even though it is only recognized
                via coordinates.</p>
<p>
                The coordinate lookup is done with the component name of the record AND
                Field #5.</p>
<p>
                Typical Data Table records:</p>
<p>
                (1) t MainWindow MainWindow ShiftClick <br>
                (2) t MainWindow MainWindow ShiftClick AnObject<br>
                (3) t MainWindow  ToolItem  ShiftClick PrintTool</p>
<p>
                #2 above will contain an AnObject="3,10" entry in the MainWindow section
                of the Application Map to SHIFT click at x=3, y=10 in the MainWindow. <b>For SE+</b>, the 
                coordinate can be percentage format, like "20%,30%". This percentage format indicates 
                the point (20% width of component, 30% height of component) relative to the object.</p>
<p>
                #3 above will contain a ToolItem entry in the MainWindow section with
                normal recognition information for it .  ToolItem will also have it's
                own section in the Application Map in which there will be an entry like
                PrintTool="15,30".  This will tell Robot to locate the PrintTool Window
                object and SHIFT click at the coordinates specified by the reference.
				</p><p>
				Engines should also attempt to support coordinates separated by alternate separators.  
				The most common separators that should be supported would be:
				<ul>
<li>"," (comma) Example: "50,200"</li>
<li>";" (semi-colon) Example: "50;200"</li>
<li>" " (space) Example: "50 200"</li>
</ul>
</p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="5" ><LI>[ <B>AppMapSubkey</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns="">
                (Optional) Name of the AppMap subkey to lookup and use for the SHIFT click.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                Without this we should click on the center of the object.
                <p>Name of the AppMap subkey to lookup and use for the SHIFT click.
                We expect the AppMap to contain the item in the format "x,y":</p>
<p><pre>
                [ToolItem]<br>
                PrintTool="33,120"      OR
                PrintTool="Coords=33,120"
                </pre></p>
<p>
                The results from the lookup are appended to the "Coords=" string
                used by the GenericObject Shift_Click command in Robot (if necessary).
                So any valid content used with the Shift_Click command can be
                part of this AppMap entry.</p>
<p>
                Both Fields #3 and #5 are used to locate the item in the App Map.
                This routine does not specify an App Map so only the current Map
                is used and it is expected to be valid.
				</p><p>
				Engines should also attempt to support coordinates separated by alternate separators.  
				The most common separators that should be supported would be:
				<ul>
<li>"," (comma) Example: "50,200"</li>
<li>";" (semi-colon) Example: "50;200"</li>
<li>" " (space) Example: "50 200"</li>
</ul>
</p>
<p><b>Important Abbot note.</b> Presently, there is no support for AppMapSubkey
                specification (5th field).
                </p></detailed_desc><BR/>
		</DIV>
		  </LI>
<LI>[ <B>AutoScroll</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                (Optional) True|False. If the component will be scrolled into view automatically before clicking. The default value is true.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                If the component is out of view, the click action will not succeed. Normally we will scroll the component into view,
                and then perform the click action. But sometimes, the component is partially shown and click could work and user does not
                want the component shift, then we could turn off the auto-scroll ability by setting this parameter to false.<br>
                If this auto-scroll is turned off, user needs to make sure that component is shown by himself.
              </detailed_desc><BR/>
		</DIV>
<DIV ID="note_desc"><SPAN CLASS='note'>NOTE:</SPAN><BR/><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN> : <value xmlns="">For now, this optional parameter is only supported in Selenium2.0 Engine. </value><BR/>
</DIV>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">T, WINDOW, WINDOW, SHIFTCLICK</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
               A SHIFT click will be performed on the center of the object.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
               A SHIFT click will be performed on the center of the object.
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, WINDOW, SHIFTCLICK, , False</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
               A SHIFT click will be performed on the center of the object. <b>And the object
               will not be scrolled into view automatically before clicking.</b></short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<DIV ID="note_desc"><SPAN CLASS='note'>NOTE:</SPAN><BR/><SPAN CLASS='Support' TITLE='Selenium2.0'>SE2</SPAN> : <value xmlns="">Auto-scroll will be turned off.</value><BR/>
</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, WINDOW, SHIFTCLICK, AnObject</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
               A SHIFT click will be performed at a x,y coordinate indicated by the AnObject reference in
               the Application Map.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
               Field  5 : TQ String. A reference identified in the Application Map identifying coordinates
               on which to SHIFT-click
               This example shows AnObject which will be found in the Application Map as a referenced item
               in the WINDOW section.
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, AnObject, SHIFTCLICK, ASubObject</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns="">
               A SHIFT click will be performed at a x,y coordinate indicated by the ASubObject reference in
               the Application Map.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
               Field  5 : TQ String. A reference identified in the Application Map identifying coordinates
               on which to SHIFT-click
               This example shows AnObject as a viable object in the WINDOW but that it also has its own
               section in the Application Map which contains one or more named references like
               ASubObject which are used for test.
              </detailed_desc><BR/>
		</DIV>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_ShiftClickScreenImage'></A>Android GenericObjectFunctions::<BIG>ShiftClickScreenImage</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='SAFS TID Commands'>TID</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                Same as ShiftClick.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns="">
                The keyword is simply provided as a means to differentiate 
                Object-Based Testing from Image-Based Testing in your tests. 
                However, this differentiation is not required.
		<p>
		Note: the TID supports this command using 
		<a href="http://safsdev.sourceforge.net/sqabasic2000/SAFSImageBasedRecognition.htm" target="imagebased" alt="SAFS Image-Based Recognition Doc">Image-Based Testing</a> 
		techniques and App Map entries as well as literal text coordinates.
		</p></detailed_desc><BR/>
		</DIV>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="5" ><LI>[ <B>AppMapSubKey</B> =  ]<BR/>
		  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                (Optional) AppMapSubKey type of use as documented in the CLICK command.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
		  </LI></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
<LI>
<B><usage xmlns="">T, WINDOW, COMPONENT, ShiftClickScreenImage</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A single click on the center of the item.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               A single click on the center of the item with SHIFT key pressed.
               Refer to the SHIFTCLICK command for details.
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, COMPONENT, ShiftClickScreenImage, AppMapLookup</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A single click on a point relative to the item.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               A single click on a point relative to the item with SHIFT key pressed.  
               Refer to the SHIFTCLICK command for details.
              </detailed_desc><BR/>
		</DIV>
</LI>
<LI>
<B><usage xmlns="">T, WINDOW, COMPONENT, ShiftClickScreenImage, "Coords=50;200"</usage></B>
<BR/><DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
               A single click on a point relative to the item.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"><detailed_desc xmlns=""> 
               A single click on a point relative to the item with SHIFT key pressed.  
               Refer to the SHIFTCLICK command for details.
              </detailed_desc><BR/>
		</DIV>
</LI>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
<H3><A NAME='detail_Tap'></A>Android GenericObjectFunctions::<BIG>Tap</BIG>
</H3>   <TABLE><TR>
<TD class="borderStyle"><SPAN CLASS='Support' TITLE='Android'>DRD</SPAN>:<SPAN CLASS='domainMarker' TITLE='DEV Domain'>DEV</SPAN></TD>
</TR></TABLE>
	  <DIV NAME="list" ID="short_desc"><short_desc xmlns=""> 
                A single Tap on a touchscreen object.  Use keyword "Click" syntax and parameters.
              </short_desc></DIV>
<BR/>
	<DIV NAME="list" ID="detail_desc"/>
<BR/>
<DIV NAME="list" ID="other">
<p><B>Fields: </B><SMALL>[ ]=Optional with Default Value</SMALL></p>
<code class="safs">
	  <OL start="5" ></OL ></code>
<br/>
<p><B>Examples:</B></p>
<code class="safs"><UL>
</UL>
</code>
<br/>
<A href="SAFSReferenceKey.htm" alt="Reference Legend or Key">
<SMALL><B>[How To Read This Reference]</B></SMALL>
</A>
<HR/>
</DIV>
</DIV>
		</DIV>
</BODY>
</HTML>
	